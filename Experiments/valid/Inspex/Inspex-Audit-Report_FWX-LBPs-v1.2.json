{
    "path": "./Audit_Reports_2024/Inspex/Inspex-Audit-Report_FWX-LBPs-v1.2.pdf",
    "project_info": {
        "url": "https://github.com/InspexCo/SCSTG",
        "commit_hash": "N/A",
        "address": "0x10ED43C718714eb63d5aA57B78B54704E256024E",
        "is_exists": true,
        "chain": "eth",
        "compiler_version": [
            "v0.8.26+commit.8a97fa7a"
        ],
        "project_path": {
            "Recovery": "Experiments/contracts/Inspex-Audit-Report_FWX-LBPs-v1/Recovery"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Design Flaw in repay() Function",
            "description": "The users will not be able to repay the loan position, causing monetary loss for the users, disruption of service, and loss of reputation to the platform.",
            "severity": "Critical",
            "contract": "CoreBorrowing",
            "function": "_repay()",
            "lineNumber": "566-574"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "Denial of Service on Native Token Transfer to APHPool Contract",
            "description": "The position with wrapped native token as a borrowed asset will not be able to be liquidated due to the target contract address not having a receive() function to receive the native token.",
            "severity": "Critical",
            "contract": "APHPool",
            "function": "_transferOut",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Price Manipulation in _rollover() Function",
            "description": "The asset price on the platform can be arbitrarily manipulated by the flashloan attack. An attacker can inflate the price and drain the collateral from any overdue position.",
            "severity": "High",
            "contract": "CoreBorrowing",
            "function": "_rollover()",
            "lineNumber": "527-548"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "Centralized Control of State Variable",
            "description": "Critical state variables can be updated at any time by the controlling authorities without notifying users.",
            "severity": "High",
            "contract": "CoreSetting",
            "function": [
                "setMembershipAddress()",
                "setPriceFeedAddress()",
                "setForwDistributorAddress()",
                "setRouterAddress()",
                "setWETHHandler()",
                "setCoreBorrowingAddress()",
                "setFeeController()",
                "setLoanDuration()",
                "setAdvancedInterestDuration()",
                "setFeeSpread()",
                "registerNewPool()",
                "setForwDisPerBlock()",
                "setupLoanConfig()"
            ],
            "lineNumber": [
                "12",
                "19",
                "26",
                "37",
                "44",
                "51",
                "58",
                "66",
                "73",
                "80",
                "88",
                "110",
                "140"
            ]
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Use of Upgradable Contract Design",
            "description": "The logic of affected contracts can be arbitrarily changed, allowing the proxy owner to perform malicious actions, e.g., stealing users' funds anytime they want.",
            "severity": "High",
            "contract": "APHCore",
            "function": "constructor() initializer {} function initialize",
            "lineNumber": "11-18, 27"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ],
                "4": [
                    "CWE-775"
                ]
            },
            "title": "Design Flaw in Kill Switch Mechanism",
            "description": "The platform users cannot withdraw their principal even in an emergency case due to the pausing of the withdrawal functionality.",
            "severity": "High",
            "contract": "PoolLending CoreBorrowing",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "Denial of Service in PoolLending",
            "description": "The users cannot execute core functions of the PoolLending contract, causing disruption of service and loss of reputation to the platform.",
            "severity": "Medium",
            "contract": "APHCore PoolBaseFunc PoolLending",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-841"
                ]
            },
            "title": "Denial of Service in Allowance Mechanism of InterestVault",
            "description": "The platform owner cannot add the allowance of the lending and FWX token address to the pool contract after the contract is deployed. Thus, the platform owner cannot change the token address anyway.",
            "severity": "Medium",
            "contract": "InterestVault",
            "function": "_ownerApprove()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Position Liquidation Avoidance",
            "description": "The loan position's owner with native token as collateral can decide to make the position liquidatable or not, resulting in bad debt for the platform and loss of incentive from liquidation.",
            "severity": "Medium",
            "contract": "CoreBorrowing",
            "function": "liquidate()",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Design Flaw in Liquidation Mechanism",
            "description": "The loan position cannot be closed in the liquidation process if the collateral value is insufficient for closing the loan, resulting in an irrecoverable debt.",
            "severity": "Medium",
            "contract": "CoreBorrowing",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ],
                "3": [
                    "CWE-437"
                ]
            },
            "title": "Transaction Ordering Dependence in _liquidationSwap() Function",
            "description": "The front running attack can be performed, resulting in a bad swapping rate and might cause bad debt to the platform.",
            "severity": "Medium",
            "contract": "CoreBorrowing",
            "function": "_liquidationSwap()",
            "lineNumber": "622-632"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Unnecessary Rate Validation in _queryRateUSD() Function",
            "description": "The functions that call the queryRate() function will be reverted when the rate is more than 2^128, causing the main functionalities of the platform to be unusable.",
            "severity": "Low",
            "contract": "PriceFeed.sol",
            "function": "_queryRateUSD(address token)",
            "lineNumber": "152"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Incorrect State Variable Setting in setMembershipAddress() Function",
            "description": "The authorized party (onlyManager modifier) cannot configure the NFT address (membershipAddress state variable) for the pool contracts, preventing the membership contract from being updated, and unintentionally changing the forwAddress, temporarily disrupting the service of the platform.",
            "severity": "Low",
            "contract": "PoolSetting",
            "function": "setMembershipAddress(address _address)",
            "lineNumber": "89-94"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improper Interest Reward Distribution",
            "description": "The interest reward distribution for platform users will be less than actual since interest accrues only when the borrower repays their loan, resulting in unfair interest reward distribution.",
            "severity": "Low",
            "contract": "PoolLending",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Smart Contract with Unpublished Source Code",
            "description": "The smart contract source code is not publicly published, so users will not be able to easily verify the correctness of the functionalities and the logic of the smart contract by themselves.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-230"
                ]
            },
            "title": "Missing Input Validation in setRankInfo() Function",
            "description": "The setRankInfo() function can be reverted due to the array being out of bounds in looping because there is no input validation for _maxLTVBonus array.",
            "severity": "Very Low",
            "contract": "StakePool.sol",
            "function": "setRankInfo()",
            "lineNumber": "82"
        },
        {
            "id": 16,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-273"
                ]
            },
            "title": "Insufficient Logging for Privileged Functions",
            "description": "Privileged functions that are executable by the controlling parties are not logged properly by emitting events.",
            "severity": "Very Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 17,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-477"
                ]
            },
            "title": "Outdated Compiler Version",
            "description": "The Solidity compiler versions specified in the smart contracts were outdated, which may potentially cause damage to the smart contracts or users due to publicly known inherent bugs.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 18,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect Logging for _withdraw() Function",
            "description": "The `_withdraw()` function emits the `Withdraw` event to indicate the withdrawn token amount and burned token amounts, but has incorrect logging.",
            "severity": "Info",
            "contract": "PoolLending.sol",
            "function": "_withdraw()",
            "lineNumber": "265-285"
        },
        {
            "id": 19,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "Unnecessary Functions in InterestVault",
            "description": "Removing unnecessary functions `pause()` and `unPause()` from the `InterestVault` contract is suggested as they are not used.",
            "severity": "Info",
            "contract": "InterestVault",
            "function": "pause() and unPause()",
            "lineNumber": "N/A"
        },
        {
            "id": 20,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect Logging for setForwAddress() Function",
            "description": "Business Logic Errors due to incorrect logging for setForwAddress() function.",
            "severity": "Info",
            "contract": "InterestVault",
            "function": "setForwAddress()",
            "lineNumber": "N/A"
        }
    ]
}