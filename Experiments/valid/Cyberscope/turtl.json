{
    "path": "./Audit_Reports_2024/Cyberscope/turtl.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x183cee1544eaa6024fc3b22f0c9d94f70e251aec",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.17+commit.8df45f5f"
        ],
        "project_path": {
            "NINJATURTLES": "Experiments/contracts/turtl/NINJATURTLES"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "ST - Stops Transactions",
            "description": "The contract owner has the authority to stop transactions for all users excluding the whitelisted. Once the transactions are enabled from the owner, they will not be able to be disabled again.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "ELFM - Exceeds Fees Limit",
            "description": "The contract has 99% fees as long as the sniperTaxEnabled variable is true, which exceeds the allowed limit of 25%.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "BC - Blacklists Addresses",
            "description": "The contract owner has the authority to massively stop addresses from transactions. The owner may take advantage of it by calling the `setIsBlacklisted` function.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "setIsBlacklisted",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1287"
                ]
            },
            "title": "RMO - Redundant Mint Override",
            "description": "The `_mint()` method of the `ERC20` contract is private and cannot be called from an external user. The override of `_mint()` in the `NINJATURTLES` contract initializer method is redundant.",
            "severity": "Critical",
            "contract": "NINJATURTLES",
            "function": "initializer",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RSML - Redundant SafeMath Library",
            "description": "The usage of the SafeMath library adds complexity, overhead and increases the gas consumption unnecessarily since Solidity versions 0.8.0 and above provide native arithmetic operations that revert on underflow and overflow.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "RSK - Redundant Storage Keyword",
            "description": "The contract uses the `storage` keyword in a view function. The `storage` keyword is used to persist data on the contract's storage. View functions are functions that do not modify the state of the contract and do not perform any actions that cost gas (such as sending a transaction). As a result, the use of the `storage` keyword in view functions is redundant.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "L02 - State Variables could be Declared Constant",
            "description": "State variables can be declared as constant using the constant keyword to ensure they cannot be changed after being set, which decreases gas consumption.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1076"
                ],
                "3": [
                    "CWE-1078"
                ],
                "4": [
                    "CWE-1099"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The code does not follow the Solidity naming conventions, which can affect readability and maintainability.",
            "severity": "Unresolved",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1288"
                ]
            },
            "title": "L05 - Unused State Variable",
            "description": "An unused state variable is a state variable that is declared in the contract, but is never used in any of the contract's functions.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L07 - Missing Events Arithmetic",
            "description": "Events are a way to record and log information about changes or actions that occur within a contract.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can occur due to conditional statements that are always false, functions that are never called, or unreachable code, making a contract more difficult to understand and maintain, and increasing its size and deployment cost.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "L13 - Divide before Multiply Operation",
            "description": "Performing divisions before multiplications may cause loss of precision.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "L15 - Local Scope Variable Shadowing",
            "description": "Local scope variable shadowing occurs when a local variable with the same name as a variable in an outer scope is declared within a function or code block.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L16 - Validate Variable Setters",
            "description": "The contract performs operations on variables configured by user-supplied input without proper checks for zero values, leading to potential problems during execution.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L17 - Usage of Solidity Assembly",
            "description": "Using assembly can be useful for optimizing code, but it can also be error-prone. It's important to carefully test and debug assembly code to ensure that it is correct and does not contain any errors.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L18 - Multiple Pragma Directives",
            "description": "If the contract includes multiple conflicting pragma directives, it may produce unexpected errors.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 16,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "L19 - Stable Compiler Version",
            "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version (i.e., any version that is a higher minor or patch version) can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}