{
    "path": "./Audit_Reports_2024/Cyberscope/blen.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x1224263bffb5b3e4d59cb1f02ffb8be82e313d1c",
        "chain": "polygon",
        "compilerVersion": [
            "v0.8.8+commit.dddeac2f"
        ],
        "project_path": {
            "BLENDVERSEToken": "Experiments/contracts\\blen\\BLENDVERSEToken"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1173"
                ]
            },
            "title": "MMN - Misleading Method Naming",
            "description": "Methods can have misleading names if their names do not accurately reflect the functionality they contain or the purpose they serve.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "IDI - Immutable Declaration Improvement",
            "description": "The contract declares state variables that their value is initialized once in the constructor and are not modified afterwards.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The code does not adhere to the Solidity style guide, which can affect readability and maintainability.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L16 - Validate Variable Setters",
            "description": "The contract performs operations on variables configured with user-supplied input without proper checks for zero values, leading to potential problems during execution.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "L19 - Stable Compiler Version",
            "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version (i.e., any version that is a higher minor or patch version) can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L20 - Succeeded Transfer Check",
            "description": "The transfer methods should be checked if the result is successful according to the ERC20 specification, otherwise the contract may wrongly assume that the transfer has been established.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}