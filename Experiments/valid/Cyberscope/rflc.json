{
    "path": "./Audit_Reports_2024/Cyberscope/rflc.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "d7b9c8f9d268830aa9ef74b5e63055c3297e4e47fd699056c6867dc717fbe412",
        "address": "0x79d058ac4395ad2ae4db3cc7b3c936586e09d1ff",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.4+commit.c7e474f2"
        ],
        "project_path": {
            "AntiBotBABYTOKEN": "Experiments/contracts/rflc/AntiBotBABYTOKEN"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RSML - Redundant SafeMath Library",
            "description": "The usage of the SafeMath library adds complexity, overhead and increases unnecessarily the gas consumption since Solidity versions greater than or equal to 0.8.0 have native functionality that replaces it.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN",
            "function": "N/A",
            "lineNumber": "589"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ],
                "3": [
                    "CWE-680"
                ]
            },
            "title": "PVC - Price Volatility Concern",
            "description": "The contract accumulates tokens from the taxes to swap them for ETH. The variable `swapTokensAtAmount` sets a threshold where the contract will trigger the swap functionality. If the variable is set to a big number, then the contract will swap a huge amount of tokens for ETH. It is important to note that the price of the token representing it, can be highly volatile.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN",
            "function": "N/A",
            "lineNumber": "L2964"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1076"
                ],
                "3": [
                    "CWE-1078"
                ],
                "4": [
                    "CWE-1099"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The code does not follow the Solidity naming convention guidelines, which can decrease readability and maintainability.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN.sol",
            "function": "N/A",
            "lineNumber": "1150,1549,1553,1562,1620,1625,1927,1959,1964,2008,2031,2032,2049,2320,2340,2341,2342,2343,2402,2409,2421,2435,2606,2840,2958"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1288"
                ]
            },
            "title": "L05 - Unused State Variable",
            "description": "An unused state variable is a state variable that is declared in the contract, but is never used in any of the contract's functions.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN.sol",
            "function": "N/A",
            "lineNumber": "2008,2077"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L07 - Missing Events Arithmetic",
            "description": "N/A",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN.sol",
            "function": "N/A",
            "lineNumber": "2969,3004,3009,3015"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can occur due to conditional statements that are always false, functions that are never called, or unreachable code, making a contract harder to understand and maintain.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN.sol",
            "function": "N/A",
            "lineNumber": "416,845,859,879,943,968,978,997,1011,1030,1040,1057,1067,1084,1549,1792,2123,2454"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-232"
                ]
            },
            "title": "L12 - Using Variables before Declaration",
            "description": "The contract is using a variable before the declaration. This is usually happening either if it has not been declared yet or if the variable has been declared in a different scope.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN",
            "function": "N/A",
            "lineNumber": "3246, 3247, 3248"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L14 - Uninitialized Variables in Local Scope",
            "description": "Using an uninitialized local variable can lead to unpredictable behavior and potentially cause errors in the contract. It's important to always initialize local variables with appropriate values before using them.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN.sol",
            "function": "N/A",
            "lineNumber": "3246,3247,3248"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "L15 - Local Scope Variable Shadowing",
            "description": "Local scope variable shadowing occurs when a local variable with the same name as a variable in an outer scope is declared within a function or code block.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN.sol",
            "function": "N/A",
            "lineNumber": "2342, 2343, 2402, 2409, 2421, 2435"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-354"
                ]
            },
            "title": "L16 - Validate Variable Setters",
            "description": "Validate variable setters to prevent potential security vulnerabilities.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN.sol",
            "function": "N/A",
            "lineNumber": "2929,2955"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "L17 - Usage of Solidity Assembly",
            "description": "Using assembly can be useful for optimizing code, but it can also be error-prone. It's important to carefully test and debug assembly code to ensure that it is correct and does not contain any errors.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN",
            "function": "N/A",
            "lineNumber": "828,846,864,921,1096"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L20 - Succeeded Transfer Check",
            "description": "According to the ERC20 specification, the transfer methods should be checked if the result is successful. Otherwise, the contract may wrongly assume that the transfer has been established.",
            "severity": "Minor / Informative",
            "contract": "AntiBotBABYTOKEN",
            "function": "N/A",
            "lineNumber": "L3271"
        }
    ]
}