{
    "path": "./Audit_Reports_2024/Trail_of_Bits/ParallelFinance2.pdf",
    "project_info": {
        "url": "https://github.com/para-space/paraspace-core/tree/9bacd4d6362bdf9f87c3b6afed97bbcc3145f11d",
        "commit_hash": "9bacd4d6362bdf9f87c3b6afed97bbcc3145f11d",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/ParallelFinance2/paraspace-core"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1065"
                ]
            },
            "title": "Unconventional test structure",
            "description": "Aspects of the Paraspace tests make them difficult to run. Tests that are difficult to run are less likely to be run.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "Insufficient event generation",
            "description": "Events generated during contract execution aid in monitoring, baselining of behavior, and detection of suspicious activity. Without events, users and blockchain-monitoring systems cannot easily detect behavior that falls outside the baseline conditions.",
            "severity": "Low",
            "contract": "Various targets",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-166"
                ]
            },
            "title": "Missing supportsInterface functions",
            "description": "According to EIP-165, a contract's implementation of the `supportsInterface` function should return `true` for the interfaces that the contract supports.",
            "severity": "Low",
            "contract": [
                "MoonBirdsGateway",
                "UniswapV3Gateway",
                "WPunkGateway",
                "NToken",
                "NTokenUniswapV3",
                "NTokenMoonBirds",
                "PoolCore"
            ],
            "function": "supportsInterface",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "ERC1155 asset type is defined but not implemented",
            "description": "The ERC1155 asset type is defined in DataTypes.sol but is not otherwise supported, making it risky as developers could use it accidentally.",
            "severity": "N/A",
            "contract": "DataTypes.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "executeMintToTreasury silently skips non-ERC20 tokens",
            "description": "The function executeMintToTreasury does not handle non-ERC20 assets properly and silently skips them without reporting an error.",
            "severity": "N/A",
            "contract": "PoolParameters",
            "function": "executeMintToTreasury()",
            "lineNumber": "L97-L104"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-230"
                ]
            },
            "title": "getReservesData does not set all AggregatedReserveData fields",
            "description": "The function getReservesData does not initialize all fields of the AggregatedReserveData structure, specifically 'name' and 'assetType', leading to uninitialized data being seen by off-chain code.",
            "severity": "High",
            "contract": "IUiPoolDataProvider",
            "function": "getReservesData",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Excessive type repetition in returned tuples",
            "description": "Several functions return tuples that contain many fields of the same type adjacent to one another. Such a practice is error-prone, as callers could easily confuse the fields.",
            "severity": "Informational",
            "contract": "contracts/protocol/libraries/{logic/GenericLogic.sol, configuration/ReserveConfiguration.sol}",
            "function": "calculateUserAccountData()",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Incorrect grace period could result in denial of service",
            "description": "Setting the grace period parameter too high could result in a denial-of-service condition.",
            "severity": "Critical",
            "contract": "PriceOracleSentinel",
            "function": "_isUpAndGracePeriodPassed()",
            "lineNumber": "L69\u2013L88"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect accounting in _transferCollaterizable",
            "description": "The `_transferCollaterizable` function mishandles the `collaterizedBalance` and `_isUsedAsCollateral` fields, resulting in transferred tokens being unable to be used as collateral.",
            "severity": "High",
            "contract": "NToken",
            "function": "_transferCollaterizable",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ]
            },
            "title": "IPriceOracle interface is used only in tests",
            "description": "The IPriceOracle interface is used only in tests, yet it appears alongside production code. Its location increases the risk that a developer will try to use it in production code.",
            "severity": "Informational",
            "contract": "contracts/interfaces/IPriceOracle.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Manual ERC721 transfers could be claimed as NTokens by anyone",
            "description": "A malicious actor can convince users to transfer their ERC721 assets to the NToken contract and then mint NTokens from those assets, allowing them to take ownership of the transferred assets.",
            "severity": "Critical",
            "contract": "NToken",
            "function": "supplyERC721FromNToken",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ]
            },
            "title": "Inconsistent behavior between NToken and PToken liquidations",
            "description": "When a user liquidates another user's ERC20 tokens and opts to receive PTokens, the PTokens are automatically registered as collateral. However, when a user liquidates another user's ERC721 token and opts to receive an NToken, the NToken is not automatically registered as collateral.",
            "severity": "Informational",
            "contract": "LiquidationLogic",
            "function": "_liquidatePTokens",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1287"
                ]
            },
            "title": "Missing asset type checks in ValidationLogic library",
            "description": "The asset type `ERC1155` is defined but not supported elsewhere in the code, making it risky for developers to use it accidentally.",
            "severity": "Medium",
            "contract": "ValidationLogic",
            "function": "N/A",
            "lineNumber": "403-447"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ],
                "3": [
                    "CWE-302"
                ]
            },
            "title": "Uniswap v3 NFT flash claims may lead to undercollateralization",
            "description": "Flash claims enable users with collateralized NFTs to assume ownership of the underlying asset for the duration of a single transaction, but Uniswap v3 NFT prices are determined by summing the value of the two ERC20 tokens deposited as liquidity in the underlying position, allowing malicious actors to withdraw liquidity directly and return a valueless NFT.",
            "severity": "Critical",
            "contract": "NTokenUniswapV3",
            "function": "onERC721Received",
            "lineNumber": "38-51"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-697"
                ]
            },
            "title": "Non-injective hash encoding in getClaimKeyHash",
            "description": "The `getClaimKeyHash` function is vulnerable to collisions due to non-injective hash encoding, potentially causing off-chain clients to mistakenly believe that an unclaimed airdrop has already been claimed.",
            "severity": "N/\u00a0A",
            "contract": "AirdropFlashClaimReceiver",
            "function": "getClaimKeyHash()",
            "lineNumber": "247-257"
        }
    ]
}