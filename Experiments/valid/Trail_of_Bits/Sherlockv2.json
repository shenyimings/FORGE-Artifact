{
    "path": "./Audit_Reports_2024/Trail_of_Bits/Sherlockv2.pdf",
    "project_info": {
        "url": "https://github.com/sherlock-protocol/sherlock-v2-core",
        "commit_hash": "877056fd1d30aa2d74db7f673ee289ddc75e449f",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/Sherlockv2/sherlock-v2-core"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Solidity compiler optimizations can be problematic",
            "description": "Sherlock has enabled optional compiler optimizations in Solidity which have been known to cause security implications due to optimization bugs.",
            "severity": "Undetermined",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Certain functions lack zero address checks",
            "description": "The following functions are missing zero address checks: Manager.setSherlockCoreAddress, AaveV2Strategy.sweep, SherDistributionManager.sweep, SherlockProtocolManager.sweep, and Sherlock.constructor.",
            "severity": "High",
            "contract": [
                "Manager",
                "AaveV2Strategy",
                "SherDistributionManager",
                "SherlockProtocolManager",
                "Sherlock"
            ],
            "function": [
                "setSherlockCoreAddress",
                "sweep",
                "sweep",
                "sweep",
                "constructor"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "updateYieldStrategy could leave funds in the old strategy",
            "description": "If updateYieldStrategy is called with a new strategy, Eve can exploit this to receive more shares than she is due because totalTokenBalanceStakers returns a significantly lower balance than it should.",
            "severity": "N/A",
            "contract": "Sherlock",
            "function": "updateYieldStrategy",
            "lineNumber": "259-267"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-841"
                ]
            },
            "title": "Pausing and unpausing the system may not be possible when removing or replacing connected contracts",
            "description": "If the sherDistributionManager contract is removed, a call to Sherlock.pause will revert, as it is attempting to call the zero address. If any of the contracts is replaced while the system is paused, the replaced contract will be in an unpaused state while the other contracts are still paused.",
            "severity": "High",
            "contract": "Sherlock",
            "function": [
                "pause()",
                "unpause()"
            ],
            "lineNumber": "302-317"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "SHER reward calculation uses confusing six-decimal SHER reward rate",
            "description": "The reward calculation in `calcReward` function uses a six-decimal SHER reward rate value which might confuse readers and developers of the contracts because the SHER token has 18 decimals, and the calculated reward will also have 18 decimals.",
            "severity": "Informational",
            "contract": "SherDistributionManager",
            "function": "calcReward()",
            "lineNumber": "89-149"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Claim Cannot Be Paid Out or Escalated",
            "description": "If the protocol agent changes after a claim has been initialized, it cannot be paid out or escalated.",
            "severity": "High",
            "contract": "SherlockClaimManager",
            "function": "payoutClaim() and escalate()",
            "lineNumber": "388-403"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Missing input validation in setMinActiveBalance could cause a confusing event to be emitted",
            "description": "The `setMinActiveBalance` function\u2019s input validation is incomplete: it should check that the `minActiveBalance` has not been set to its existing value, but this check is missing. Additionally, if the `minActiveBalance` is set to its existing value, the emitted `MinBalance` event will indicate that the old and new values are identical.",
            "severity": "Informational",
            "contract": "SherlockProtocolManager",
            "function": "setMinActiveBalance()",
            "lineNumber": "422-428"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "payoutClaim's calling of external contracts in a loop could cause a denial of service",
            "description": "If any of these calls reverts, the entire `payoutClaim` function reverts, and hence, the transaction reverts. This may not be the desired behavior; if that is the case, a denial of service would prevent claims from being paid out.",
            "severity": "High",
            "contract": "SherlockClaimManager",
            "function": "payoutClaim()",
            "lineNumber": "499-501"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "pullReward could silently fail and cause stakers to lose all earned SHER rewards",
            "description": "The pullReward function can fail due to arithmetic overflow or insufficient SHER balance in the SherDistributionManager contract, causing stakers to lose their earned rewards.",
            "severity": "Critical",
            "contract": "Sherlock",
            "function": "pullReward()",
            "lineNumber": "354-386"
        }
    ]
}