{
    "path": "./Audit_Reports_2024/Trail_of_Bits/AnteProtocolFixReview.pdf",
    "project_info": {
        "url": "https://github.com/antefinance/ante-v0-core/tree/fdd0d8d68a5697415cde511aa5dc98c469871bb7",
        "commit_hash": "fdd0d8d68a5697415cde511aa5dc98c469871bb7",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/AnteProtocolFixReview/ante-v0-core"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "AntePoolFactory does not validate create2 return addresses",
            "description": "The `AntePoolFactory` uses the `create2` instruction to deploy an `AntePool` and then initializes it with an already-deployed `AnteTest` address. However, the `AntePoolFactory` does not validate the address returned by `create2`, which will be the zero address if the deployment operation fails.",
            "severity": "Informational",
            "contract": "contracts/AntePoolFactory.sol",
            "function": "N/A",
            "lineNumber": "35-47"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-1023"
                ]
            },
            "title": "Events emitted during critical operations omit certain details",
            "description": "Events are generally emitted for all critical state-changing operations within the system. However, the `AntePoolCreated` event emitted by the `AntePoolFactory` does not capture the address of the `msg.sender` that deployed the `AntePool`. This information would help provide a more complete audit trail in the event of an attack.",
            "severity": "Informational",
            "contract": "contracts/AntePoolFactory.sol, contracts/AntePool.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Insufficient gas can cause AnteTests to produce false positives",
            "description": "An attacker could manipulate the result of an `AnteTest` by providing a limited amount of gas to the `checkTest` function, forcing the test to fail.",
            "severity": "High",
            "contract": "contracts/AntePool.sol",
            "function": "checkTestNoRevert()",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Looping over an array of unbounded size can cause a denial of service",
            "description": "The `_calculateChallengerEligibility` function loops through an unbounded array of challenger addresses, which can consume a large quantity of gas and cause a denial of service when the number of challengers is large.",
            "severity": "Medium",
            "contract": "AntePool",
            "function": "_calculateChallengerEligibility()",
            "lineNumber": "contracts/AntePool.sol#L567-573"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Reentrancy into AntePool.checkTest scales challenger eligibility amount",
            "description": "_calculateChallengerEligibility method increases the eligibleAmount instead of resetting it, causing the eligibleAmount to scale unexpectedly with each reentrancy.",
            "severity": "Critical",
            "contract": "AntePool",
            "function": "_calculateChallengerEligibility()",
            "lineNumber": "L292-316"
        }
    ]
}