{
    "path": "./Audit_Reports_2024/Verichains_Lab/Verichains Public Audit Report - Polyroll - v1.1.pdf",
    "project_info": {
        "url": "https://github.com/polyroll/polyroll-farm",
        "commit_hash": "02403ae2cb0dbd083bc6bf163d8ae00d11017977",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/Verichains Public Audit Report - Polyroll - v1/polyroll-farm"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "MasterChef \u2013 Using deflationary token as LP token will lead to many vulnerabilities",
            "description": "Using a deflationary token as an LP token can cause multiple vulnerabilities.",
            "severity": "MEDIUM",
            "contract": "MasterChef",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-354"
                ]
            },
            "title": "MasterChef \u2013 Missing validation for pool id in set function",
            "description": "The 'set' function lacks validation for the pool ID, which can lead to potential security vulnerabilities.",
            "severity": "MEDIUM",
            "contract": "MasterChef",
            "function": "set()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-116"
                ]
            },
            "title": "MasterChef \u2013 Misleading comments",
            "description": "Misleading comments in MasterChef contract",
            "severity": "LOW",
            "contract": "MasterChef",
            "function": "N/A",
            "lineNumber": "11"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "MasterChef \u2013 Redundant require statement in the updateEmissionRate function",
            "description": "Redundant require statement in the updateEmissionRate function can lead to unnecessary checks and potential vulnerabilities.",
            "severity": "LOW",
            "contract": "MasterChef",
            "function": "updateEmissionRate()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "RollToken \u2013 Missing delegates updating when transfer tokens",
            "description": "When token holders transfer their tokens, the voting power of the delegate remains unchanged instead of being decreased, leading to inflation of voting powers.",
            "severity": "CRITICAL",
            "contract": "RollToken",
            "function": "transfer() and transferFrom()",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "RollToken \u2013 Integer overflow in mint function",
            "description": "Integer addition overflow in the mint function of RollToken contract.",
            "severity": "HIGH",
            "contract": "RollToken",
            "function": "mint()",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RollToken \u2013 Redundant if statement in mint function",
            "description": "The 'if' statement has redundant conditions that can be removed to save gas and make the code cleaner.",
            "severity": "LOW",
            "contract": "RollToken",
            "function": "mint()",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-116"
                ]
            },
            "title": "RollToken \u2013 Misleading comment of delegates function",
            "description": "Misleading comment in the delegates function",
            "severity": "LOW",
            "contract": "RollToken",
            "function": "delegate()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Timelock \u2013 Missing checking for valid state when cancel transaction",
            "description": "The `cancelTransaction` function emits a `CancelTransaction` event even if the transaction has been executed or is not queued yet, leading to confusion for contract's event listeners and wasting gas for unnecessary event emitting.",
            "severity": "LOW",
            "contract": "Timelock",
            "function": "cancelTransaction()",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-232"
                ]
            },
            "title": "Timelock \u2013 Deprecated call.value(\u2026)",
            "description": "The syntax 'call.value(\u2026)' was deprecated in favor of 'call{value: \u2026}' from Solidity version 0.6.4, which may cause potential issues in the future.",
            "severity": "Low",
            "contract": "Timelock",
            "function": "executeTransaction",
            "lineNumber": "122"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-221"
                ]
            },
            "title": "RandGen \u2013 Multiple randomness requests can lead to result loss",
            "description": "Current implementation of the `RandGen` contract can only store one randomness request result at a moment. Therefore, if we call the `getRandomNumber` method multiple times, whenever receiving a `fulfillRandomness` callback, the contract will override the previous result with the new result.",
            "severity": "HIGH",
            "contract": "RandGen",
            "function": "getRandomNumber",
            "lineNumber": "N/A"
        }
    ]
}