{
    "path": "./Audit_Reports_2024/Verichains_Lab/Verichains Public Audit Report - MiLady Meme Coin Smartcontracts - v1.1.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x12970e6868f88f6557b76120662c1b3e50a646bf",
        "chain": "eth",
        "compiler_version": [
            "v0.8.19+commit.7dd6d404"
        ],
        "project_path": {
            "LadysToken": "Experiments/contracts/Verichains Public Audit Report - MiLady Meme Coin Smartcontracts - v1/LadysToken"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Centralize in the mint, burn and blacklist functions",
            "description": "The person with MINTER_ROLE / BURNER_ROLE can mint/burn tokens of any user, and the person with DEFAULT_ADMIN_ROLE can blacklist any address, preventing token transfer.",
            "severity": "LOW",
            "contract": "Ladys.sol",
            "function": [
                "blacklist(address,bool)",
                "mint(address,uint256)",
                "burn(address,uint256)"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "signatureThreshold must always be greater than 0",
            "description": "Users with DEFAULT_ADMIN_ROLE can change the value of signatureThreshold using the setThreshold() function, but there is no requirement that the value must always be greater than 0, which could allow an attacker to pass an empty _proofs parameter to make verifySignature() always return true.",
            "severity": "LOW",
            "contract": "MemBridge.sol",
            "function": "setThreshold()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-697"
                ]
            },
            "title": "The signer must always different from address 0",
            "description": "ecrecover function always returns address 0 for invalid signatures, so it is recommended to require that the signer address is always different from address 0 when adding a signer.",
            "severity": "LOW",
            "contract": "MemBridge.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ],
                "4": [
                    "CWE-775"
                ]
            },
            "title": "The contract still approves the old token when switching to a new token",
            "description": "The contract does not properly revoke approval of the old token when switching to a new one.",
            "severity": "INFORMATIVE",
            "contract": "BridgePool",
            "function": "N/A",
            "lineNumber": "12"
        }
    ]
}