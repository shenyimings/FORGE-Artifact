{
    "path": "./Audit_Reports_2024/Ackee_Blockchain/ackee-blockchain-cow-protocol-composablecow-extensiblefallbackhandler-report.pdf",
    "project_info": {
        "url": "https://github.com/rndlabs/composable-cow",
        "commit_hash": "cd893fa",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/ackee-blockchain-cow-protocol-composablecow-extensiblefallbackhandler-report/composable-cow"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Precision Loss in Division and Multiplication",
            "description": "Arithmetic errors in division and multiplication operations can cause precision loss, leading to incorrect results and potential security issues.",
            "severity": "Critical",
            "contract": "StopLoss",
            "function": "scalePrice()",
            "lineNumber": "122-129"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Tokens with similar exchange rates",
            "description": "The current design disallows stop-loss order to be used for tokens with similar exchange rates.",
            "severity": "Medium",
            "contract": "StopLoss.sol",
            "function": "N/A",
            "lineNumber": "L95"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "C1: StopLoss arithmetic mismatches",
            "description": "Arithmetic errors in the StopLoss contract's getTradeableOrder function due to incorrect usage of scalePrice function for decimal conversion.",
            "severity": "Critical",
            "contract": "StopLoss",
            "function": "getTradeableOrder",
            "lineNumber": "91-97"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "M1: Oracle data validation",
            "description": "The price from the oracle is not validated. This can cause incorrect prices and order executions.",
            "severity": "Medium",
            "contract": "StopLoss",
            "function": "getTradeableOrder",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-230"
                ]
            },
            "title": "L1: Constructor data validation",
            "description": "Contracts are missing zero-address validations in the constructor.",
            "severity": "Low",
            "contract": "ComposableCoW.sol, ERC1271Forwarder.sol, TWAP.sol",
            "function": "constructor()",
            "lineNumber": "64, 20, 17"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "W1: GPv2Order data tampering",
            "description": "It is possible to tamper with GPv2Order data by modifying the order values, potentially leading to unauthorized changes.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "W2: Revert conditions inconsistency",
            "description": "Inconsistency in revert conditions syntax across contracts, decreasing code readability and potentially introducing human errors during future development.",
            "severity": "Warning",
            "contract": "StopLoss",
            "function": "getTradeableOrder",
            "lineNumber": "58-60"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1173"
                ]
            },
            "title": "W3: Vulnerable MerkleProof library",
            "description": "The codebase is using OpenZeppelin `MerkleProof` library version 4.8.0 which contains a vulnerability in multi-proofs.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "W4: GoodAfterTime order is missing the receiver address",
            "description": "The `GoodAfterTime` order is missing the receiver address and instead uses a zero-address, which can result in loss of funds if not prevented by other handling.",
            "severity": "Warning",
            "contract": "GoodAfterTime",
            "function": "getTradeableOrder()",
            "lineNumber": "83"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "I1: Unnecessary SafeMath",
            "description": "The `PerpetualStableSwap` contract uses `SafeMath` for `uint256` and `uint8` even with Solidity version >=0.8.0 <0.9.0, which is not necessary since the version contains implicit overflow/underflow handling.",
            "severity": "Info",
            "contract": "PerpetualStableSwap",
            "function": "N/A",
            "lineNumber": "13-14"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-459"
                ]
            },
            "title": "I2: Missing cabinet cleanup",
            "description": "The function `remove` in the `ComposableCoW` contract removes the order flag from the `singleOrders` mapping but keeps data in the `cabinet` mapping, causing data leftovers in the storage.",
            "severity": "Info",
            "contract": "ComposableCoW",
            "function": "remove()",
            "lineNumber": "142-144"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-237"
                ],
                "4": [
                    "CWE-240"
                ]
            },
            "title": "I3: Errors in the documentation",
            "description": "This informational issue summarizes inconsistencies and typos in the documentation or comments.",
            "severity": "Info",
            "contract": [
                "GoodAfterTime.sol",
                "MarshalLib.sol",
                "SignatureVerifierMuxer.sol"
            ],
            "function": [
                "getTradeableOrder",
                "decode",
                "decodeWithSelector"
            ],
            "lineNumber": [
                "74-77",
                "29-30",
                "38-39"
            ]
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-697"
                ]
            },
            "title": "I4: TradeAboveThreshold order receiver naming",
            "description": "The `TradeAboveThreshold` order has confusing receiver naming, called `target`. It is inconsistent and with the inline documentation can be misleading about its purpose.",
            "severity": "Info",
            "contract": "TradeAboveThreshold",
            "function": "N/A",
            "lineNumber": "15"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "I5: Inconsistent error",
            "description": "The `TradeAboveThreshold` order uses a different error message for wrong conditions.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ]
            },
            "title": "I6: Commented-out code",
            "description": "There is a commented-out code in the `PerpetualStableSwap` contract.",
            "severity": "Info",
            "contract": "PerpetualStableSwap",
            "function": "getTradeableOrder",
            "lineNumber": "54"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "I7: Inconsistent naming",
            "description": "The file `Base.sol` contains the contract named `ExtensibleBase`, which is confusing and decreases code clarity.",
            "severity": "Info",
            "contract": "Base.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}