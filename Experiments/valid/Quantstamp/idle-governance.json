{
    "path": "./Audit_Reports_2024/Quantstamp/idle-governance.pdf",
    "project_info": {
        "url": "https://github.com/Idle-Labs/idle-governance/tree/develop",
        "commit_hash": "develop",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/idle-governance/idle-governance"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Unintended Revert in Function claimIdle",
            "description": "In `contracts\\IdleController.sol`, the function `claimIdle` will loop through all the combinations of `holders` and `idleTokens` and pass into the function `distributeIdle`. However, in the function `distributeIdle` on `L119` will revert all the transactions that pass in any `supplier != idleToken`.",
            "severity": "Medium Risk",
            "contract": "IdleController.sol",
            "function": "claimIdle",
            "lineNumber": "L119"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Gas Usage / for Loop Concerns",
            "description": "Gas usage concerns may prevent users from using the smart contract or cause it to malfunction entirely due to high gas costs, particularly with `for` loops. In `contracts/IdleController.sol`, the `refreshIdleSpeedsInternal()` function may run into issues if many markets are added.",
            "severity": "Low",
            "contract": "IdleController",
            "function": "refreshIdleSpeedsInternal()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "_moveDelegates() May Not Behave Correctly After Token Transfers",
            "description": "The function `_delegate()` invokes `_moveDelegates()` with the delegator's full balance instead of remaining undelegated balance, causing users to lose delegation ability if additional Idle tokens are acquired without minting (i.e., via transfers).",
            "severity": "Low Risk",
            "contract": "Idle.sol",
            "function": "_delegate() and _moveDelegates()",
            "lineNumber": "L195"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ],
                "4": [
                    "CWE-690"
                ]
            },
            "title": "Missing Address Sanitization",
            "description": "The values inside the `priceOracle_` input parameter are not checked to be different from `0x0` inside the `_setPriceOracle` function.",
            "severity": "Informational",
            "contract": "IdleController.sol",
            "function": "_setPriceOracle",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Privileged Roles",
            "description": "A potentially malicious owner can change the feed contract addresses/block length to give incorrect price oracles that can affect the token, and the admin can manipulate the rate of tokens in which each market receives by adding/removing idle markets to the list.",
            "severity": "Informational",
            "contract": "PriceOracle.sol, IdleController.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ]
            },
            "title": "delegateBySig() Should Validate the v and s Parameters",
            "description": "The delegateBySig() function should validate the 'v' and 's' parameters as in ECDSA.sol.",
            "severity": "Informational",
            "contract": "Idle",
            "function": "delegateBySig()",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Possible Truncation in Calculating APR Precision",
            "description": "The computed pair will always return a result that has the last two digits as `0` due to division before multiplication.",
            "severity": "Informational",
            "contract": "PriceOracle.sol",
            "function": "getCompApr",
            "lineNumber": "L58"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Integer Overflow / Underflow",
            "description": "Integer overflow/underflow occur when an integer hits its bit-size limit. Every integer has a set range; when that range is passed, the value loops back around.",
            "severity": "Undetermined",
            "contract": "PriceOracle.sol",
            "function": "N/A",
            "lineNumber": "L70"
        }
    ]
}