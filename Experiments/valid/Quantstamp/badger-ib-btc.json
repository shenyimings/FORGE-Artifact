{
    "path": "./Audit_Reports_2024/Quantstamp/badger-ib-btc.pdf",
    "project_info": {
        "url": "https://github.com/defidollar/ibbtc/tree/6860dd87d8ea02e3fc5c180d23876151b20ba35c",
        "commit_hash": "6860dd87d8ea02e3fc5c180d23876151b20ba35c",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/badger-ib-btc/ibbtc"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ]
            },
            "title": "Implicit unbounded trust in peaks",
            "description": "The current flow in the essential external functions of mint and redeem works by having most of the critical operations being performed and started in the peak contracts without limits or any form of verification, which relies on the peak contracts to be secure and correct.",
            "severity": "High Risk",
            "contract": "Core.sol",
            "function": "mint() and redeem()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Unbounded minting when guestList is not set",
            "description": "The `mint` function only validates for whether or not to `mint` to a particular `account` if `address(guestList) != address(0)`. This means that if `address(guestList) == address(0)`, an active peak can mint any arbitrary amounts of `bBTC`.",
            "severity": "Medium",
            "contract": "Core.sol",
            "function": "mint()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Peaks may be duplicated and cause totalSystemAssets to miscount",
            "description": "Peaks are added to the `Core` contract by `whitelistPeak`, which first validates for whether `peaks[peak] == PeakState.Extinct` before adding it to `peakAddresses`. However, duplicates can happen because peak address is not removed from `peakAddresses` when the peak is set to `PeakState.Extinct`, nor does it perform an existence check when adding it.",
            "severity": "Medium",
            "contract": "Core",
            "function": "whitelistPeak/setPeakStatus",
            "lineNumber": "L155"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Funds may be locked by peak extinction",
            "description": "The redeem function prevents extinct peaks from utilizing it. The governor may set a peak to extinct status without ensuring that all of the associated funds have already been redeemed.",
            "severity": "Medium Risk",
            "contract": "Core.sol",
            "function": "redeem",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "Core may never be switched in current implementation",
            "description": "In the `bBTC` contract, there is a method `switchCore` which is designed to be used to upgrade and switch `Core` contracts. However, given that the current `Core` implementation does not have any method that calls `switchCore`, it is likely that this method will never be callable.",
            "severity": "Medium",
            "contract": "bBTC.sol Core.sol",
            "function": "switchCore",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1287"
                ]
            },
            "title": "Lack of validation for arbitrary input token may lead to stolen token credit",
            "description": "The mint method does not check whether the input token is the desired wBTC or renBTC addresses, allowing users to set token to an arbitrary worthless token address and steal underlying wBTC or renBTC.",
            "severity": "Medium Risk",
            "contract": "Zap.sol",
            "function": "mint()",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Setter functions may set to same variables",
            "description": "There are some setter functions for the contracts involved that does not compare the incoming parameter to the current state variable. This may result in a misleading event emitted or successful result being returned, and may confuse components monitoring for these changes.",
            "severity": "Low Risk",
            "contract": "Guestlist.sol",
            "function": [
                "setGuestRoot",
                "setUserDepositCap",
                "setTotalDepositCap"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Potential precision loss in division",
            "description": "In the `_btcTobyvWBTC` method, a division of `1e20` is performed before the next division of `byvWBTC.pricePerShare`. This may cause precision loss.",
            "severity": "Low Risk",
            "contract": "N/A",
            "function": "_btcTobyvWBTC",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-282"
                ],
                "3": [
                    "CWE-708"
                ]
            },
            "title": "Privileged Roles and Ownership",
            "description": "Smart contracts have `owner` variables to designate the person with special privileges to make modifications to the smart contract.",
            "severity": "Informational",
            "contract": "GuestList.sol, Core.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1061"
                ]
            },
            "title": "Misleading usage of scaled, and under-informative function names",
            "description": "The `Core` contract receives and sends out amounts of `btc` in different decimal places to the peak contracts, causing confusion. Function names are under-informative and should be renamed for clarity.",
            "severity": "Informational",
            "contract": "Multiple (Core, BadgerSettPeak, BadgerYearnWbtcPeak)",
            "function": [
                "bBtcToBtc",
                "N/A"
            ],
            "lineNumber": [
                "106",
                "143",
                "152",
                "172"
            ]
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Magic numbers",
            "description": "Magic numbers are constant numbers used in the middle, usually without description and requires some inference to understand what is going on.",
            "severity": "Informational",
            "contract": [
                "Core.sol",
                "BadgerSettPeak.sol",
                "BadgerYearnWbtcPeak.sol",
                "Zap.sol"
            ],
            "function": "N/A",
            "lineNumber": [
                "L114",
                "L172",
                "L102",
                "L127",
                "L145"
            ]
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Dormant peaks may redeem",
            "description": "It is currently possible for peaks with status of `PeakState.Dormant` to `redeem` in `Core`, and it is not clear if this is intentional.",
            "severity": "Undetermined",
            "contract": "Core",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "Cross peak withdrawal is allowed",
            "description": "Users can deposit into any pool to mint ibBTC and redeem it from any other arbitrary pools, allowing for arbitrage of unbounded values.",
            "severity": "Undetermined",
            "contract": "Core.sol, BadgerSettPeak.sol, BadgerYearnWbtcPeak.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}