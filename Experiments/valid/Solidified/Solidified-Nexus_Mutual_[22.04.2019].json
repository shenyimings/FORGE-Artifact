{
    "path": "./Audit_Reports_2024/Solidified/Solidified-Nexus_Mutual_[22.04.2019].pdf",
    "project_info": {
        "url": "https://github.com/somish/NexusMutual/tree/341679e5b43774e7db3bdb9ecd8fcea5b2fc9bcf",
        "commit_hash": "341679e5b43774e7db3bdb9ecd8fcea5b2fc9bcf",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/Solidified-Nexus_Mutual_[22/NexusMutual"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Using Ints is highly inefficient",
            "description": "Integers are used inefficiently.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Importing interfaces instead of whole contracts",
            "description": "Reducing bytecode size by importing interfaces instead of whole contracts, making it possible to group contracts like Pool1 and Pool2, and Claim contracts.",
            "severity": "Optimization",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1120"
                ]
            },
            "title": "Gas Optimization: Tight Packing of Struct Variables",
            "description": "Consider organizing variables inside structs to make use of tight packing and save storage gas.",
            "severity": "Optimization",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-400"
                ],
                "3": [
                    "CWE-405"
                ]
            },
            "title": "Group external calls together",
            "description": "Each call is very expensive, so grouping them can reduce gas costs.",
            "severity": "Optimization",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Inverting else if statements order should save gas due to short circuiting",
            "description": "Rearranging the order of else if statements can reduce gas consumption by taking advantage of short-circuit evaluation.",
            "severity": "Optimization",
            "contract": "Claims.sol",
            "function": "CheckVoteClosing()",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Inefficient Consecutive Calls to ClaimsData",
            "description": "The SubmitCAVote() function makes 6 consecutive calls to ClaimsData, which can be optimized by calling one function that handles all sub operations.",
            "severity": "Optimization",
            "contract": "Claims.sol",
            "function": "SubmitCAVote()",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-435"
                ]
            },
            "title": "Inefficient getTokenPrice() Function",
            "description": "getTokenPrice() only forwards a call to another contract, which is significantly cheaper to call directly.",
            "severity": "Optimization",
            "contract": "TokenFuntions.sol",
            "function": "getTokenPrice()",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Unnecessary Calls to tokenData in getTotalStakedTokensOnSmartContract()",
            "description": "The function getTotalStakedTokensOnSmartContract() calls tokenData on every iteration of a for loop unnecessarily, leading to gas inefficiency.",
            "severity": "Notes",
            "contract": "TokenFuntions.sol",
            "function": "getTotalStakedTokensOnSmartContract()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Duplicate Function Call",
            "description": "getRewardToBeGiven() calls cd.getFinalVerdict twice in two lines, which is unnecessary and can be optimized.",
            "severity": "Minor",
            "contract": "ClaimsRewrds.sol",
            "function": "getRewardToBeGiven()",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1287"
                ]
            },
            "title": "Duplicate reference to MemberRole in ClaimsRewards",
            "description": "N/A",
            "severity": "N/A",
            "contract": "ClaimsRewards",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Unnecessary Mapping of versionDate",
            "description": "Contracts only have a singular versionDate that gets overridden, so there's no need to keep an additional mapping.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1173"
                ]
            },
            "title": "Duplicate token code",
            "description": "The NXMToken implementation contains duplicate code from Open Zeppelin's ERC20 implementation instead of inheriting from it.",
            "severity": "Medium",
            "contract": "NXMToken",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}