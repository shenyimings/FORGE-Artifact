{
    "path": "./Audit_Reports_2024/Solidified/Audit Report - Mauve.pdf",
    "project_info": {
        "url": "https://github.com/violetprotocol/VioletID",
        "commit_hash": "N/A",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/Audit Report - Mauve/VioletID"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "Approvals of Non-Fungible Liquidity tokens are not restricted only to VioletID holders",
            "description": "The functions `approve`, `setApprovalForAll` and `permit` do not restrict approvals to only VioletID holders, allowing non-VioletID holders to be operators of a liquidity token.",
            "severity": "Major",
            "contract": "NonfungiblePositionManager.sol",
            "function": [
                "approve",
                "setApprovalForAll",
                "permit"
            ],
            "lineNumber": "432, 437"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Ethereum Access Token: Reentrancy allows consuming the same token multiple times",
            "description": "The modifier `requiresAuth` first calls `verify`, which verifies the token and checks that it was not used before. Then, the code of the function is executed. Finally, `_consumeAccessToken` is called to mark the token as used. Because the token is only marked as used after the execution of the function, the same token can be used multiple times when the executed function allows reentrancy / performs an external call.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "requiresAuth",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "SwapRouter: Token reentrancy can be abused to perform arbitrary calls",
            "description": "Reentrancy in the swap router can be abused to perform arbitrary unauthorized calls due to callback functionality for transfers in some tokens (e.g., ERC777).",
            "severity": "Major",
            "contract": "SwapRouter",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "MauveFactory cannot be configured to work with both routers simultaneously",
            "description": "The role system implemented in MauveFactory.sol maps one string to an address, making it impossible for two addresses to hold the same role. This causes the swap function in MauvePool.sol to only be accessible by one of the two routers, leaving the other in a DOS state.",
            "severity": "Minor",
            "contract": "MauveFactory.sol and MauvePool.sol",
            "function": "swap()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Ethereum Access Token: Tokens can be used multiple times after hard forks",
            "description": "The Ethereum access token contract sets the DOMAIN_SEPARATOR (containing the chain ID) in the constructor and always uses this separator. This can be problematic when there is a hard fork that changes the chain ID, allowing tokens to be used on both chains.",
            "severity": "Minor",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Emergency mode cannot be disabled",
            "description": "In MauveCompliance.sol, emergency mode can be activated using the function activateEmergencyMode but it cannot be deactivated, leaving both the swap router and the position manager stuck in emergency mode forever.",
            "severity": "Minor",
            "contract": "MauveCompliance",
            "function": "activateEmergencyMode()",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "refundETH can be abused to perform arbitrary calls without authorization",
            "description": "The function `refundETH` in `ETAMulticallPeripheryPaymentsWithFee` allows an attacker to use a callback to call any other function with an `onlySelfMulticall` modifier, effectively granting access to all functions and bypassing granular access control.",
            "severity": "Minor",
            "contract": "ETAMulticallPeripheryPaymentsWithFee",
            "function": "refundETH",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-439"
                ]
            },
            "title": "Violet ID: initialize is called in the constructor",
            "description": "In the constructor of VioletID, the initialize function is called which is not recommended for contracts intended to be deployed behind a proxy.",
            "severity": "Minor",
            "contract": "VioletID",
            "function": "constructor",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Similar access control modifiers are implemented with different patterns",
            "description": "Access control modifiers `onlyPoolAdmin` and `onlyOwner` are implemented with two different patterns in MauveFactory.sol, and modifier `checkDeadline` is unnecessarily calling an internal function in PeripheryValidation.sol.",
            "severity": "Minor",
            "contract": [
                "MauveFactory",
                "PeripheryValidation"
            ],
            "function": [
                "N/A",
                "N/A"
            ],
            "lineNumber": [
                "N/A",
                "N/A"
            ]
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "onlyActiveIssuer modifier is never used in the codebase",
            "description": "The onlyActiveIssuer modifier in contract KeyInfrastructure.sol is never used in the contract, introducing dead code.",
            "severity": "Minor",
            "contract": "KeyInfrastructure.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ]
            },
            "title": "Wrong comment references to Uniswap instead of Mauve",
            "description": "There are some wrong comment references to Uniswap instead of Mauve in the following contracts:",
            "severity": "Minor",
            "contract": [
                "IMauveFactory",
                "MauveFactory"
            ],
            "function": "N/A",
            "lineNumber": [
                "5",
                "12"
            ]
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Library imported from Uniswap instead of Mauve",
            "description": "The library `SafeERC20Namer.sol` is imported from the Uniswap npm package instead of the `mauve-v3-periphery/contracts/libraries` folder, introducing unnecessary dependencies in the codebase.",
            "severity": "Minor",
            "contract": "NonfungibleTokenPositionDescriptor",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1120"
                ],
                "3": [
                    "CWE-1060"
                ]
            },
            "title": "Gas optimizations",
            "description": "Optimizations can be implemented to reduce gas usage in contracts AccessTokenConsumer and EATMulticall.",
            "severity": "Minor",
            "contract": [
                "AccessTokenConsumer",
                "EATMulticall"
            ],
            "function": [
                "_verifier",
                "_DOMAIN_SEPARATOR",
                "_root",
                "multicalling"
            ],
            "lineNumber": [
                "N/A",
                42,
                55,
                68,
                73
            ]
        }
    ]
}