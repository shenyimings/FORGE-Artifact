{
    "path": "./Audit_Reports_2024/BlockSec/BlockSec-blocksec_polynetwork_v2.0.pdf",
    "project_info": {
        "url": "https://github.com/polynetwork/eth-contracts/",
        "commit_hash": "2b1cbe073e40a7bd26022d1cda9341b4780d07ee",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/BlockSec-blocksec_polynetwork_v2/eth-contracts"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Remove the repeated verification to save gas consumption",
            "description": "The internal functions `_pull` and `_checkoutFee` do the same validation: `require(msg.value == amount, \"insufficient ether\");`, which is executed repeatedly every time. Combining the three internal functions `_pull`, `_checkoutFee`, and `_push`, and removing the redundant validation can save gas consumption.",
            "severity": "Low",
            "contract": "N/A",
            "function": "_pull and _checkoutFee",
            "lineNumber": "271, 280"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-354"
                ]
            },
            "title": "Remove the redundant verification to save gas consumption",
            "description": "Redundant validation in functions _pull and _checkoutFee, and in function remove_liquidity of contract swapper.",
            "severity": "Low",
            "contract": "_pull and _checkoutFee: N/A, remove_liquidity: swapper",
            "function": "_pull, _checkoutFee, remove_liquidity",
            "lineNumber": "271, 280, 223-225"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "Add the logic to update whitelist",
            "description": "No flexible mechanism to extend cross-chain services due to lack of update mechanism for whitelists.",
            "severity": "Medium",
            "contract": "ECCM",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "The function removeUnderlying is not executed as expected",
            "description": "The `fromChainId` in the code snippet should be replaced with `toChainId`. Otherwise, the function `removeUnderlying` can not work as expected.",
            "severity": "High",
            "contract": "SwapProxy",
            "function": "removeUnderlying()",
            "lineNumber": "224"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ]
            },
            "title": "The function recoverEpochPk is not executed successfully",
            "description": "The function recoverEpochPk can only be executed when the contract ECCM's status (EthCross-ChainManager) is paused, but it calls the function putCurEpochConPubKeyBytes of the contract ECCD (EthCrossChainData), which can only be executed when the contract ECCD's status is active.",
            "severity": "Low",
            "contract": "ECCM (EthCross-ChainManager)",
            "function": "recoverEpochPk()",
            "lineNumber": "47"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "The events UnlockEvent and LockEvent may record wrong data",
            "description": "In the functions addUnderlying, outAssetAddress equals to ISwap(poolAddress).lp_token(), but the code records poolAddress instead of ISwap(poolAddress).lp_token() in line 187 and line 234, causing the events LockEvent and UnlockEvent to record wrong information.",
            "severity": "Low",
            "contract": "SwapProxy",
            "function": "addUnderlying",
            "lineNumber": "172, 187, 234"
        }
    ]
}