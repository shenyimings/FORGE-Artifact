{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-AVault-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/AVaultFinance/avault-contracts/tree/29417c9",
        "commit_hash": "29417c9",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/PeckShield-Audit-Report-AVault-v1/avault-contracts"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "3.1 Proper Paths Update in setPaths()",
            "description": "The setter function in `setPaths()` does not properly update and save system-wide parameters, only performing necessary validation on given parameters.",
            "severity": "Medium",
            "contract": "AVaultBase",
            "function": "setPaths()",
            "lineNumber": "436-443"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ]
            },
            "title": "Possible Sandwich/MEV For Reduced Swap Amount",
            "description": "The `_safeSwap()` function in `AVaultBase` contract is vulnerable to sandwich attacks, which can result in a significantly less amount after the swap.",
            "severity": "Low",
            "contract": "AVaultBase",
            "function": "_safeSwap()",
            "lineNumber": "512-531"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-1419"
                ],
                "4": [
                    "CWE-1188"
                ],
                "5": [
                    "CWE-453"
                ]
            },
            "title": "Possible Costly LPs From Improper Vault Initialization",
            "description": "The `AVault` protocol allows users to deposit supported assets and get in return the share to represent the pool ownership. However, an issue occurs when the pool is being initialized under the assumption that the current pool is empty.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improper withdrawal Logic with Right _unfarm() Amount",
            "description": "The current implementation of the withdraw function does not calculate the missing amount correctly, leading to improper withdrawal logic.",
            "severity": "Low",
            "contract": "AVaultBase",
            "function": "withdraw()",
            "lineNumber": "140-172"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Trust Issue of Admin Keys",
            "description": "In the `AVault` protocol, there is a special administrative account, i.e., `owner`, which plays a critical role in governing and regulating system-wide operations and has the privilege to control or govern the flow of assets within the protocol contracts.",
            "severity": "Medium",
            "contract": "AVaultBase",
            "function": [
                "pause()",
                "unpause()",
                "setSettings()"
            ],
            "lineNumber": "397-403,405-434"
        }
    ]
}