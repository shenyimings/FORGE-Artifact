{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-OneSwap-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/oneswap/oneswap_contract_ethereum/tree/49b5c8d0392e828b735445980e364d5ddc1c8542",
        "commit_hash": "49b5c8d0392e828b735445980e364d5ddc1c8542",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/PeckShield-Audit-Report-OneSwap-v1/oneswap_contract_ethereum"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-282"
                ],
                "3": [
                    "CWE-708"
                ]
            },
            "title": "Better Handling of Ownership Transfers",
            "description": "The `changeOwner()` function in the `OneSwapBlackList` contract allows the current owner to transfer her privilege to another address without proper validation, which may lead to unintended consequences.",
            "severity": "Low",
            "contract": "OneSwapBlackList",
            "function": "changeOwner()",
            "lineNumber": "45"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ],
                "3": [
                    "CWE-302"
                ]
            },
            "title": "Front-Running of Proposal Tallies",
            "description": "The tally() function counts user votes and executes passed proposals based on the balance sum of users who voted yes at the moment when tally() occurs, allowing malicious actors to front-run the tally() transaction with enough voting assets.",
            "severity": "High",
            "contract": "OneSwapGov",
            "function": "tally()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Overlapped Time Windows Between Vote and Tally",
            "description": "The logic to enforce the voting period introduces a corner case where votes can be accepted before the deadline, causing confusion.",
            "severity": "Low",
            "contract": "OneSwapGov",
            "function": "vote()",
            "lineNumber": "108"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Removal of Initial Nop Iterations in removeMainToken()",
            "description": "Optimize the `removeMainToken()` logic as the first two are pre-occupied and cannot be removed.",
            "severity": "Informational",
            "contract": "OneSwapBuyback",
            "function": "removeMainToken(address)",
            "lineNumber": "50"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ]
            },
            "title": "Incompatibility with Deflationary Tokens",
            "description": "The OneSwapRouter contract's asset-transferring routines work as expected with standard ERC20 tokens but may not be compatible with deflationary tokens.",
            "severity": "Medium",
            "contract": "OneSwapRouter",
            "function": "swapToken()",
            "lineNumber": "132-139"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Tightened Sanity Checks in limitOrderWithETH()",
            "description": "The `limitOrderWithETH()` function in the `OneSwapRouter` contract allows submitting a limit order involved with ETH trading and conveniently wraps the deposited ETH into WETH to take advantage of the uniform, standardized trading interface of `OneSwapPair`. The function should tighten its sanity checks to prevent accidental deposits of ETH when `stock = WETH` and `isBuy = true`.",
            "severity": "Low",
            "contract": "OneSwapRouter",
            "function": "limitOrderWithETH()",
            "lineNumber": "183-199"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Non-Payable removeLiquidityETH()",
            "description": "The `removeLiquidityETH()` function in `OneSwapRouter` contract is defined as payable, which may allow users to accidentally deposit ETH, and it is recommended to remove the `payable` keyword from the definition.",
            "severity": "Medium",
            "contract": "OneSwapRouter",
            "function": "removeLiquidityETH()",
            "lineNumber": "113-130"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "Cached/Randomized ID For Unused OrderID Lookup",
            "description": "OneSwap has a built-in order-matching engine that maintains two singly-linked lists for pending buy and sell orders. Each order has a unique ID assigned. To ensure the order uniqueness, the routine _getUnusedOrderID() is responsible for ensuring the assigned (new) order always bears an unused order ID.",
            "severity": "Low",
            "contract": "OneSwapPair",
            "function": "_getUnusedOrderID",
            "lineNumber": "704-716"
        }
    ]
}