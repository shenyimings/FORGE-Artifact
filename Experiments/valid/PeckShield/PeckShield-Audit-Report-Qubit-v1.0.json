{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-Qubit-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/PancakeBunny-finance/qubit-finance/tree/30aef6f",
        "commit_hash": "30aef6f",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/PeckShield-Audit-Report-Qubit-v1/qubit-finance"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-228"
                ]
            },
            "title": "Non ERC20-Compliance Of QToken",
            "description": "The `QToken` contract does not fully comply with the ERC20 specification, specifically with regards to emitting the `Transfer` event when tokens are minted or burned.",
            "severity": "Low",
            "contract": "QToken",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Possible Front-running For Unintended Payment In",
            "description": "The `repayBorrowBehalf()` function allows a non-borrower to repay partial or full current borrowing balance, but this functionality can be taken advantage of to launch a front-running `borrow()` operation, resulting in a higher borrowing balance for repayment.",
            "severity": "Low",
            "contract": "QToken",
            "function": "repayBorrowBehalf()",
            "lineNumber": "190-198"
        }
    ]
}