{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-Equilibria-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/eqbtech/equilibria-contracts/tree/c2dc827",
        "commit_hash": "c2dc827",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/PeckShield-Audit-Report-Equilibria-v1/equilibria-contracts"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ],
                "3": [
                    "CWE-437"
                ]
            },
            "title": "Staking Incompatibility With Deflationary Tokens in EqbMasterChef",
            "description": "In the `Equilibria` protocol, the `EqbMasterChef` contract is designed to take users\u2019 assets and deliver rewards depending on their share, but it may have staking incompatibility issues with deflationary tokens.",
            "severity": "Low",
            "contract": "EqbMasterChef",
            "function": "deposit() and withdraw()",
            "lineNumber": "219-227"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Simplified getReward() Logic in BaseRewardPool",
            "description": "The logic of `getReward()` routine in `BaseRewardPool` contract can be further optimized by avoiding duplicated calculation of caller's reward, also leading to a small beneficial reduction of associated gas cost.",
            "severity": "Low",
            "contract": "BaseRewardPool",
            "function": "getReward()",
            "lineNumber": "249-257"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "Suggested Adherence Of Checks-Effects-Interactions Pattern",
            "description": "A common coding best practice in Solidity is the adherence of `checks-effects-interactions` principle to mitigate re-entrancy attacks.",
            "severity": "Low",
            "contract": "EqbMasterChef",
            "function": "emergencyWithdraw()",
            "lineNumber": "305"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Inconsistent Pool Shutdown Logic in PendleBoosterBaseUpg",
            "description": "The shutdown logic in PendleBoosterBaseUpg contract can be improved for consistency. The callback function rewardClaimed() misses a condition that each pool may be dynamically turned off.",
            "severity": "Low",
            "contract": "PendleBoosterBaseUpg",
            "function": "rewardClaimed()",
            "lineNumber": "361-372"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Trust Issue of Admin Keys",
            "description": "In the `Equilibria` protocol, there is a privileged `owner` account that plays a critical role in governing and regulating the protocol- wide operations.",
            "severity": "Medium",
            "contract": "Multiple Contracts",
            "function": "add()",
            "lineNumber": "102-127"
        }
    ]
}