{
    "path": "./Audit_Reports_2024/PeckShield/maker_audit_report_2019_16_en_1_0.pdf",
    "project_info": {
        "url": "https://github.com/makerdao/dss/tree/526fa6afb9ea771f846b895ae0aee361876f2bdb",
        "commit_hash": "526fa6afb9ea771f846b895ae0aee361876f2bdb",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/maker_audit_report_2019_16_en_1_0/dss"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Potential Denial-of-Service in Global Settlement",
            "description": "The sixth step of 'End', thaw(), is vulnerable to a potential denial-of-service attack when vat.dai(address(vow)) > 0.",
            "severity": "Informational",
            "contract": "end.sol",
            "function": "thaw()",
            "lineNumber": "313"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-369"
                ]
            },
            "title": "Potential Divide-By-Zero in Spotter",
            "description": "The poke() function in spot.sol does not validate `par` and `ilks[ilk].mat` before dividing something by them respectively, which could lead to divide by zero exceptions.",
            "severity": "Informational",
            "contract": "Spotter",
            "function": "poke()",
            "lineNumber": "84"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Inconsistent Time Type in Debt Engine",
            "description": "The `uint256` variable, `wait`, is used to represent a specific time, but other similar variables such as `ttl` and `tau` are declared with the type `uint48` in flop.sol.",
            "severity": "Informational",
            "contract": "vow.sol",
            "function": "N/A",
            "lineNumber": "57"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-362"
                ]
            },
            "title": "approve()/transferFrom() Race Condition",
            "description": "There is a known race condition issue regarding `approve()` / `transferFrom()`. Specifically, when a user intends to reduce the allowed spending amount previously approved from, say, 10 DAI to 1 DAI. The previously approved spender might race to transfer the amount you initially approved (the 10 DAI) and then additionally spend the new amount you just approved (1 DAI).",
            "severity": "Low",
            "contract": "dai.sol",
            "function": "approve()",
            "lineNumber": "98-102"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Unhandled Auction Corner Cases",
            "description": "The current implementation of auctions (flip, flop, flap) share certain timing-related corner cases that have not been covered yet.",
            "severity": "Informational",
            "contract": "src/{flip, flop, flap}.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "CDP Fork Restrictiveness",
            "description": "The movement of related collateral and debt between two CDPs can be relaxed such that either the affected CDP becomes more safe or the owner consents.",
            "severity": "Informational",
            "contract": "src/vat.sol",
            "function": "fork()",
            "lineNumber": "197"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Drip Efficiency Improvement",
            "description": "Both `jug` and `pot` contracts implement the `drip()` op to collect either stability fees or saving interests. The `drip()` can be further improved by changing the `require` `()` to `if` condition: `if` `(ilks[ilk].rho >= now)` `return` `;` (in `jug.drip()`) or `if` `(rho >= now)` `return` `;` (in `pot.drip()`).",
            "severity": "Informational",
            "contract": "jug.sol, pot.sol",
            "function": "drip()",
            "lineNumber": "96-101, 125-130"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "Debt Auction Prevention",
            "description": "The debt engine, `vow`, is vulnerable to a potential denial-of-service attack when `vat.dai(address(vow)) > 0`. This can prevent the debt auction from proceeding.",
            "severity": "Informational",
            "contract": "src/vow.sol",
            "function": "flop()",
            "lineNumber": "119"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Missing previous step",
            "description": "The contract does not check if previous steps have been completed before proceeding.",
            "severity": "High",
            "contract": "N/A",
            "function": [
                "deployPause()",
                "N/A"
            ],
            "lineNumber": [
                "293-299",
                "268-271, 291-292"
            ]
        }
    ]
}