{
    "path": "./Audit_Reports_2024/Secure3/Pinnako_final_Secure3_Audit_Report.pdf",
    "project_info": {
        "url": "https://github.com/pinnakoex/pinnakoes_contract",
        "commit_hash": "b95ec9c57103b89ef9044c4e17ca6d529cbf739d",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/Pinnako_final_Secure3_Audit_Report/pinnakoes_contract"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect formula used in function VaultUtils.getPositionNextAveragePrice()",
            "description": "The function uses an incorrect formula to calculate the next average price, leading to higher-than-expected profits and reduced losses.",
            "severity": "Critical",
            "contract": "VaultUtils",
            "function": "getPositionNextAveragePrice()",
            "lineNumber": "401-408"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Logic error in VaultPriceFeedV3Fast contract getPythPrice function",
            "description": "The function returns variables directly if (price < 10 || upd_time < 10) without proper method, which can cause logic errors.",
            "severity": "Critical",
            "contract": "VaultPriceFeedV3Fast",
            "function": "getPythPrice()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Logical error: Inconsistent token address used when adding/removing eth liquidity",
            "description": "Inconsistent token address is used when adding or removing ETH liquidity in LpManager.sol, leading to incorrect state of WETH market within the vault.",
            "severity": "Critical",
            "contract": "LpManager",
            "function": "addLiquidity/removeLiquidity",
            "lineNumber": "88, 101-111"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Potential Liquidity Exhaustion Risk",
            "description": "A temporary decrease in `guaranteedUsd` causes the asset under management (AUM) of the vault to temporarily increase, allowing liquidity providers to take a portion of the premium fee, resulting in a loss for traders.",
            "severity": "Critical",
            "contract": "Vault",
            "function": "_decreasePoolAmount",
            "lineNumber": "524"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "The average price must not be updated when function Vault._decreasePosition() is called",
            "description": "When users intend to decrease their position, the `Vault._decreasePosition()` function is called, which subsequently executes an internal call to `Vault._updateGlobalSize()` after validating the decrease position request. However, the `Vault.getNextAveragePrice()` function should only be called when merging the prices of two positions with different prices during position increases.",
            "severity": "Critical",
            "contract": "Vault",
            "function": "_decreasePosition()",
            "lineNumber": "266-270"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Loss of Funds due to Premium Fee Implementation",
            "description": "The implementation of premiumFee in Vault._collectMarginFees function can result in a loss of funds for users when a transaction with premiumFee < 0 is called before a transaction with premiumFee > 0, allowing liquidity providers to take a portion of the premium fee.",
            "severity": "Critical",
            "contract": "Vault",
            "function": "_collectMarginFees",
            "lineNumber": "589-596"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-191"
                ]
            },
            "title": "Underflow error when calling VaultUtils.getNextAveragePrice() can prevent users from decreasing the position",
            "description": "The function `VaultUtils.getNextAveragePrice()` does not include a check if `_averagePrice * _size` is greater than `_sizeDelta * _nextPrice` before performing the subtraction, which can lead to an underflow error and prevent users from decreasing their position.",
            "severity": "Critical",
            "contract": "VaultUtils",
            "function": "getNextAveragePrice()",
            "lineNumber": "385-386"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Missing _mintOut protection can lead to user lose funds",
            "description": "When a user calls increasePosition, the amountOut is calculated without mintOut protection, which can cause users to lose funds.",
            "severity": "Critical",
            "contract": "RouterSign",
            "function": "increasePosition",
            "lineNumber": "74, 88, 135, 149"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect daily seconds used.",
            "description": "The code uses 3600 as daily seconds to accumulate the daily swap record, which can cause the daily swap amount to be 24 times bigger than maxSwapAmountPerDay.",
            "severity": "Medium",
            "contract": "Router.sol",
            "function": "N/A",
            "lineNumber": "131,154,165,178"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-362"
                ]
            },
            "title": "Open a position without updating the price to increase the winning rate",
            "description": "Malicious users can open a position before the price update and close it after the price update in the same block, resulting in profit from price fluctuations.",
            "severity": "Medium",
            "contract": "Vault",
            "function": [
                "increasePosition",
                "decreasePosition"
            ],
            "lineNumber": [
                "189",
                "259"
            ]
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-221"
                ]
            },
            "title": "Some tokens will be lost when function Router.directPoolDeposit() is called",
            "description": "The function Router.directPoolDeposit() does not affect the state of the vault, such as poolAmount or guaranteed Usd. It solely updates the reservedAmount of the token, which does not yield any profits for traders or liquidity providers. Consequently, this amount will be wasted and lost within the contracts.",
            "severity": "Medium",
            "contract": "Vault",
            "function": "directPoolDeposit()",
            "lineNumber": "385-391"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Missing event record",
            "description": "The owner can modify sensitive parameters through various functions without recording events.",
            "severity": "Informational",
            "contract": [
                "RouterSign",
                "Router",
                "LpManager",
                "Vault",
                "VaultUtils"
            ],
            "function": [
                "setPSBT",
                "setPriceFeed",
                "setVault",
                "setIsSwapOpenForPublic",
                "setMaxSwapRatio",
                "setMaxSwapAmountPerDay",
                "setValidateContract",
                "addPlugin",
                "removePlugin",
                "setLP",
                "delLP",
                "setAdd",
                "setManager",
                "setRouter",
                "setTokenConfig",
                "clearTokenConfig",
                "setMaxProfitRatio",
                "setSpreadBasis",
                "setLiquidator",
                "setInPrivateLiquidationMode",
                "setPremiumRate",
                "setFundingRate",
                "setMaxLeverage",
                "setTaxRate",
                "setFees"
            ],
            "lineNumber": [
                "43-53",
                "48-73",
                "49",
                "56",
                "64",
                "77-167",
                "96-142"
            ]
        }
    ]
}