{
    "path": "./Audit_Reports_2024/Spearbit/Morpho-Av3-Spearbit-Security-Review.pdf",
    "project_info": {
        "url": "https://github.com/morpho-dao/morpho-aave-v3/tree/76525db269a530c679a95e05144e5a6011bc0855",
        "commit_hash": "76525db269a530c679a95e05144e5a6011bc0855",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/Morpho-Av3-Spearbit-Security-Review/morpho-aave-v3"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-369"
                ]
            },
            "title": "Revert `supplyCollateralLogic` when `amount.rayDivDown(poolSupplyIndex)` is zero",
            "description": "The supplied user's amount will remain in Morpho's contract and will not be supplied to the Aave pool, leading to incorrect accounting and potential withdrawal issues.",
            "severity": "Informational",
            "contract": "PositionsManagerInternal.sol",
            "function": "supplyCollateralLogic",
            "lineNumber": "L411-L426, L512"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-233"
                ]
            },
            "title": "WETHGateway does not validate the `constructor` 's input parameters",
            "description": "The current implementation of the WETHGateway contracts does not validate the user's parameters during the constructor. In this specific case, the constructor should revert if morpho address is equal to address(0).",
            "severity": "Informational",
            "contract": "WETHGateway",
            "function": "constructor",
            "lineNumber": "31"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1059"
                ],
                "3": [
                    "CWE-1053"
                ]
            },
            "title": "Missing/wrong natspec, typos, minor refactors and renaming of variables to be more meaningful",
            "description": "The codebase lacks proper natspec documentation for functions, events, structs, or state variables. There are also suggestions for renaming variables to make them more meaningful.",
            "severity": "Informational",
            "contract": [
                "RewardsManager.sol",
                "PositionsManagerInternal.sol"
            ],
            "function": [
                "UserAssetBalance",
                "N/A"
            ],
            "lineNumber": [
                "L28",
                "L289-L297, L352-L362"
            ]
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-230"
                ]
            },
            "title": "No validation checks on the `newDefaultIterations` struct",
            "description": "The `initialize` function takes in a `newDefaultIterations` struct and does not perform validation for any of its fields.",
            "severity": "Informational",
            "contract": "Morpho",
            "function": "initialize()",
            "lineNumber": "L49"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "No validation check for `newPositionsManager` address",
            "description": "The `initialize` function does not ensure that the `newPositionsManager` is not a 0 address.",
            "severity": "Informational",
            "contract": "Morpho.sol",
            "function": "initialize()",
            "lineNumber": "L48"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-166"
                ]
            },
            "title": "Missing Natspec function documentation",
            "description": "The codebase does not cover all functions, events, structs, or state variables with proper natspec.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "23"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "`approveManagerWithSig` user experience could be improved",
            "description": "The current implementation of `approveManagerWithSig` requires signers to wait until previous signers have consumed the nonce before calling the function. This can lead to a poor user experience.",
            "severity": "Informational",
            "contract": "Morpho.sol",
            "function": "approveManagerWithSig",
            "lineNumber": "L250"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Consider hardcoding `msg.sender` as the `from` parameter for certain actions",
            "description": "The following Morpho functions have a `from` field that is always set to `msg.sender`. Generally, a parameter that is always set to the same value does not need to be a parameter and can be hardcoded further down the call graph.",
            "severity": "Informational",
            "contract": "Morpho.sol",
            "function": "_supply, _supplyCollateral, _repay (and liquidate's liquidator)",
            "lineNumber": "L283"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ],
                "4": [
                    "CWE-638"
                ],
                "5": [
                    "CWE-424"
                ],
                "6": [
                    "CWE-425"
                ]
            },
            "title": "Missing user markets check when liquidating",
            "description": "The liquidation does not check if the user who gets liquidated actually joined the collateral and borrow markets.",
            "severity": "Informational",
            "contract": "PositionsManager",
            "function": "liquidateLogic",
            "lineNumber": "238"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Consider reverting instead of returning zero inside `repayLogic`, `withdrawLogic`, `withdrawCollateralLogic` and `liquidateLogic` function",
            "description": "Position manager always checks user inputs via different validation functions. However, when re-calculated amount is still zero, it simply returns zero instead of reverting with a specific error code.",
            "severity": "Informational",
            "contract": "PositionsManager.sol",
            "function": [
                "repayLogic",
                "withdrawLogic",
                "withdrawCollateralLogic",
                "liquidateLogic"
            ],
            "lineNumber": [
                "L142",
                "L174",
                "L204"
            ]
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "`PERMIT2` operations like `transferFrom2` and `simplePermit2` will revert if `amount` is greater",
            "description": "The `PERMIT2` operations will revert when interacting with the permit2 lib if the `amount` is greater than `type(uint160).max`.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "transferFrom2, simplePermit2",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-841"
                ]
            },
            "title": "Side effects of LTV = 0 assets: Morpho's users will not be able to withdraw (collateral and pure supply), borrow and liquidate",
            "description": "When an AToken has `LTV = 0`, Aave restricts the usage of some operations. In particular, if the user owns at least one AToken as collateral that has `LTV = 0`, operations could revert.",
            "severity": "Critical Risk",
            "contract": "PositionsManager.sol",
            "function": "N/A",
            "lineNumber": "L261, L120-L121, L180, L213"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Morpho vulnerable to `LTV = 0` collateral tokens",
            "description": "Attackers can send `LTV = 0` collateral tokens, causing supply/supplyCollateral, borrow and liquidate operations to stop working.",
            "severity": "Critical Risk",
            "contract": "PositionsManager.sol",
            "function": "N/A",
            "lineNumber": "L261, L120-L121, L180, L213"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Morpho Incorrectly Handles Asset Price in `_getAssetPrice`",
            "description": "When `isInEMode` is true but `priceSource` is address(0), Morpho incorrectly handles the asset price, potentially causing reverts in price computations and affecting liquidations, collateral withdrawals, and borrows.",
            "severity": "Critical Risk",
            "contract": "MorphoInternal.sol",
            "function": "_getAssetPrice",
            "lineNumber": "L524-L536"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ]
            },
            "title": "Isolated assets are treated as collateral in Morpho",
            "description": "Morpho treats isolated assets as collateral, allowing users to borrow against them, even though Aave does not treat them as collateral. This can lead to a lower health factor and put the system at risk of liquidation on Aave.",
            "severity": "Critical",
            "contract": "PositionsManagerInternal",
            "function": "supplyCollateral",
            "lineNumber": "L408"
        }
    ]
}