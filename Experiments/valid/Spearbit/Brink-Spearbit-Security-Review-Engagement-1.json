{
    "path": "./Audit_Reports_2024/Spearbit/Brink-Spearbit-Security-Review-Engagement-1.pdf",
    "project_info": {
        "url": "https://github.com/brinktrade/brink-core/",
        "commit_hash": "feef7d92d2888e1ee062038f55a7301a2300ba3e",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/Brink-Spearbit-Security-Review-Engagement-1/brink-core"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Implement SafeERC20 to avoid non-zero to non-zero approvals",
            "description": "Current function allows for non-zero to non-zero approvals, however, some ERC20 tokens would revert in such cases.",
            "severity": "Low Risk",
            "contract": "TransferHelper.sol",
            "function": "N/A",
            "lineNumber": "L12-L13"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ]
            },
            "title": "Some Architectural Changes",
            "description": "Implemented constants ACCOUNT_IMPLEMENTATION and OWNER to make values fully immutable after deployment.",
            "severity": "High Risk",
            "contract": "Proxy.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1120"
                ],
                "3": [
                    "CWE-1060"
                ]
            },
            "title": "Use calldata instead of memory for function parameters Gas optimization",
            "description": "In some cases, having function arguments in `calldata` instead of `memory` is more optimal. This can avoid intermediate memory operations and reduce gas costs.",
            "severity": "Gas Optimization",
            "contract": "Account.sol, DeployAndExecute.sol, LimitSwapVerifier.sol, EIP712SignerRecovery.sol",
            "function": "metaDelegateCall_EIP1271(), deployAndExecute, tokenToToken, ethToToken, tokenToEth, _recoverSigner",
            "lineNumber": "L109-L116, L23, L33-L34, L19"
        }
    ]
}