{
    "path": "./Audit_Reports_2024/Spearbit/MapleV2.pdf",
    "project_info": {
        "url": "https://github.com/maple-labs/maple-core-v2/tree/912fb38d924efdee4676d8a7d9ae9e85d82dcf60",
        "commit_hash": "912fb38d924efdee4676d8a7d9ae9e85d82dcf60",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/MapleV2/maple-core-v2"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "First pool depositor can be front-run and have part of their deposit stolen",
            "description": "The first deposit with a totalSupply of zero shares will mint shares equal to the deposited amount. This makes it possible to deposit the smallest unit of a token and profit off a rounding issue in the computation for the minted shares of the next depositor.",
            "severity": "High Risk",
            "contract": "Pool.sol",
            "function": "N/A",
            "lineNumber": "L73"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Users depositing to a pool with unrealized losses will take on the losses",
            "description": "The pool share price used for deposits is always the totalAssets() / totalSupply, however the pool share price when redeeming is totalAssets() - unrealizedLosses() / totalSupply. This leads to a time window where deposits use a much higher share price than current redemptions and future deposits.",
            "severity": "Medium Risk",
            "contract": "Pool.sol",
            "function": "N/A",
            "lineNumber": "L275, L278"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "TransitionLoanManager.add does not account for accrued interest since last call",
            "description": "The TransitionLoanManager.add advances the domain start but the accrued interest since the last domain start is not accounted for. It therefore wrongly tracks the _accountedInterest variable.",
            "severity": "Medium Risk",
            "contract": "pool-v2::TransitionLoanManager.sol",
            "function": "add",
            "lineNumber": "L74"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Unaccounted collateral is mishandled in triggerDefault",
            "description": "In liquidating repossessions, a similar issue causes the code to call the liquidator's `collateralAsset` `setCollateralRemaining` function with only accounted collateral, meaning unaccounted collateral will be unused/stuck in the liquidator.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "triggerDefault",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Initial cycle time is wrong when queuing several config updates",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}