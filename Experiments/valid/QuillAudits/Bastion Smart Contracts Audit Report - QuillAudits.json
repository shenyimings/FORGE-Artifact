{
    "path": "./Audit_Reports_2024/QuillAudits/Bastion Smart Contracts Audit Report - QuillAudits.pdf",
    "project_info": {
        "url": "https://github.com/bastion-wallet/kernel/tree/79dc2ff67117c8e34f0a1559e35966a259b12b48",
        "commit_hash": "79dc2ff67117c8e34f0a1559e35966a259b12b48",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/Bastion Smart Contracts Audit Report - QuillAudits/kernel"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1173"
                ]
            },
            "title": "Solidity version incompatibility",
            "description": "The Kernel smart wallets may experience compatibility issues on certain EVM-based chains like Arbitrum due to Solidity pragma versions above 0.8.19, which do not support the PUSH0 opcode.",
            "severity": "Low",
            "contract": "Kernel",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Array update pattern",
            "description": "Repeated addresses can cost extra gas when iterating over owners array",
            "severity": "Medium",
            "contract": "BatchActions.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-282"
                ],
                "3": [
                    "CWE-708"
                ]
            },
            "title": "Single-step ownership transfer",
            "description": "No description provided.",
            "severity": "Low",
            "contract": "Bastion Wallet",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ],
                "3": [
                    "CWE-115"
                ]
            },
            "title": "Kernel can interact with an EOA instead of a contract",
            "description": "In Kernel, it is expected that the execute() function is called with the target contract `to` being an external contract. The risk here is that an EOA can be delegatecalled or called and returns true as though it were a successful contract call.",
            "severity": "Low",
            "contract": "Kernel",
            "function": "execute()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Unchecked logic address in EIP1967 constructor",
            "description": "No description provided.",
            "severity": "High",
            "contract": "EIP1967Proxy",
            "function": "constructor()",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Risk of stuck funds in proxy contracts",
            "description": "Discrepancy between OpenZeppelin and EIP1967Proxy implementations may cause stuck funds due to unchecked msg.value when data length is 0.",
            "severity": "High",
            "contract": "EIP1967Proxy",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}