{
    "path": "./Audit_Reports_2024/QuillAudits/QuillAudit-Rocket_Global_Smart_Contract_Audit_Report.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0xba07134eda453bbefa4c538c81441574fe65db63",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.6+commit.11564f7e"
        ],
        "project_path": {
            "RocketVest1": "Experiments/contracts/QuillAudit-Rocket_Global_Smart_Contract_Audit_Report/RocketVest1"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1127"
                ]
            },
            "title": "Mismatch and outdated compiler version",
            "description": "Using an outdated and mismatched compiler version can be problematic, especially if publicly disclosed bugs and issues affect the current compiler version.",
            "severity": "Low",
            "contract": "RocketVest1, CoinToken",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "SWC 103: Floating Pragma",
            "description": "Contracts should be deployed with the same compiler version and flags that they have been tested with thoroughly. Locking the pragma helps ensure that contracts do not accidentally get deployed using, for example, an outdated compiler version that might negatively introduce bugs that affect the contract system.",
            "severity": "Low",
            "contract": "RocketVest1, CoinToken",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ],
                "3": [
                    "CWE-302"
                ]
            },
            "title": "Using the approve function of the token standard",
            "description": "The approve function of ERC-20 is vulnerable to front-running attacks, allowing an attacker to spend approved tokens before the change of allowance value.",
            "severity": "High",
            "contract": [
                "RocketVest1",
                "CoinToken"
            ],
            "function": "approve()",
            "lineNumber": [
                "52",
                "55, 269, 420"
            ]
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-330"
                ],
                "3": [
                    "CWE-331"
                ],
                "4": [
                    "CWE-332"
                ]
            },
            "title": "Potential use of block.timestamp as a source of randomness",
            "description": "Contracts often need access to time values to perform certain types of functionality. Values such as block.timestamp, and block.number can give you a sense of the current time or a time delta; however, they are not safe to use for most purposes.",
            "severity": "High",
            "contract": "RocketVest1.sol",
            "function": "N/A",
            "lineNumber": "121-122, 156, 167, 206, 224-227"
        }
    ]
}