{
    "path": "./Audit_Reports_2024/Techrate/GenshinFlokiInu.pdf",
    "project_info": {
        "url": "https://github.com/GenshinFloki/GenshinFloki",
        "commit_hash": "854d6bac4278d12f838eceff3c5fe1166dd242fd",
        "address": "N/A",
        "is_exists": true,
        "project_path": "Experiments/contracts/GenshinFlokiInu/GenshinFloki"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "DoS with block gas limit",
            "description": "The function may be aborted with OUT_OF_GAS exception if there will be a long addresses list.",
            "severity": "Low",
            "contract": "N/A",
            "function": "bulkSetBot() and manage_blacklist()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Integer Overflow and Underflow",
            "description": "N/A",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Arithmetic accuracy",
            "description": "Rounding error due to division before multiplication, causing precision loss.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Design Logic",
            "description": "At each calculation with division, it goes first which can cause rounding errors due to lack of floating points in Solidity. Recommendation is to do division after multiplication.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}