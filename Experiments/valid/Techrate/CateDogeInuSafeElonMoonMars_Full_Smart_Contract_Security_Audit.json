{
    "path": "./Audit_Reports_2024/Techrate/CateDogeInuSafeElonMoonMars_Full_Smart_Contract_Security_Audit.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x385ca01bbc634a984c46d71031b35b581f16f57b",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.7+commit.e28d00a7"
        ],
        "project_path": {
            "CDISEMM": "Experiments/contracts/CateDogeInuSafeElonMoonMars_Full_Smart_Contract_Security_Audit/CDISEMM"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "Out of gas",
            "description": "The functions includeInReward() and _getCurrentSupply() use loops to find and remove addresses from the _excluded list and evaluate total supply respectively, which can cause an OUT_OF_GAS exception if there is a long excluded addresses list.",
            "severity": "Low",
            "contract": "N/A",
            "function": [
                "includeInReward()",
                "_getCurrentSupply()"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Rounding error",
            "description": "At some calculation with division, it goes first. In Solidity we don\u2019t have floating points, but instead we get rounding errors.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}