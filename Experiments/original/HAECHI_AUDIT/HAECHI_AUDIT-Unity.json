{"path": "./Audit_Reports_2024/HAECHI_AUDIT/HAECHI_AUDIT-Unity.pdf", "project_info": {"url": "https://github.com/kaym0/unity", "commit_hash": "1a10b3b1eeadf1a3c356afd519b110b05da1b089", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "Inconsistent Reflection Values", "description": "The assigned values of UnityToken#_stakeReflection and UnityToken#_liquidityReflection may differ from their intended values of 1% and 3%, respectively.", "severity": "Medium", "contract": "UnityToken", "function": "N/A", "lineNumber": "30-31"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-862"], "4": ["CWE-638"], "5": ["CWE-424"], "6": ["CWE-425"]}, "title": "An external contract can call the Locker#withdraw() function", "description": "The withdraw function of Locker allows external contracts to call it.", "severity": "Minor", "contract": "Locker", "function": "withdraw()", "lineNumber": "45-53"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Account Balance Overwrite in addAmountToAccount() Function", "description": "The Locker#addAmountToAccount() function overwrites the account balance instead of adding to it, resulting in unintended behavior.", "severity": "High", "contract": "Locker", "function": "addAmountToAccount(address,uint256)", "lineNumber": "41-43"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Out-of-gas may occur in the MasterLocker#withdrawFromAll() function", "description": "The MasterLocker#withdrawFromAll() function traverses all Locker Contracts of MasterLocker to withdraw all claimable amounts of msg.sender, which can cause out-of-gas if the number of Locker Contracts increases limitlessly.", "severity": "Minor", "contract": "MasterLocker", "function": "withdrawFromAll()", "lineNumber": "66-70"}]}