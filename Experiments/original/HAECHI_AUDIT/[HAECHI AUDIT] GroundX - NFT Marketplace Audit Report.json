{"path": "./Audit_Reports_2024/HAECHI_AUDIT/[HAECHI AUDIT] GroundX - NFT Marketplace Audit Report.pdf", "project_info": {"url": "https://github.com/ground-x/kas-nft-marketplace-api/", "commit_hash": "c673cae8cd0b8be4f0a5923138ed1826c3f1598e", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-693"], "2": ["CWE-807"]}, "title": "Malicious suggester may launch a DoS via throwing on call", "description": "A malicious suggester may launch a DoS attack by leveraging the refund logic of the SalesForEOA contract, preventing the seller and buyer from selling or purchasing the product (KIP17 Token), or declining all the suggestions.", "severity": "High", "contract": "SalesForEOA", "function": "transferKLAY", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Sellers can delude the suggesters by modifying token IDs.", "description": "A malicious seller can manipulate token IDs on the Product contract's setTokenIds function, allowing them to accept a suggestion made before the token IDs were modified and transfer less quantity of KIP17 tokens or different KIP17 tokens to the suggester.", "severity": "Critical", "contract": "Product.sol", "function": "setTokenIds(uint[] memory newTokenIds)", "lineNumber": "109"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Incorrect parameter used on setContract event emission.", "description": "The `setContract` event emits with an incorrect second parameter `_msgSender()` instead of the new contract address in the `__KIP17Marketplace_init` function of `KIP17Marketplace.sol` and `__Sale_init` function of `Sale.sol` contracts.", "severity": "Tips", "contract": "KIP17Marketplace, Sale", "function": "__KIP17Marketplace_init, __Sale_init", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-179"], "4": ["CWE-180"]}, "title": "The structure hashing is not based on the EIP-712.", "description": "The signature used on the `mintAndTransfer` function does not follow the EIP-712 standard, making it susceptible to a replay attack on another chain.", "severity": "High", "contract": "KIP17Marketplace", "function": "mintAndTransfer()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Validation of commission ratio is weak.", "description": "The setCommission and setCommissionAt functions of Commission.sol contract do not guarantee that the sum of each ratio is less than 1e18.", "severity": "Informational", "contract": "Commission.sol", "function": "setCommission, setCommissionAt", "lineNumber": "122, 143"}, {"id": 5, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Incorrect array variable deletion on the Marketplace contract.", "description": "The admin of the `Marketplace` contract may be unable to add KIP17 and Sales contract addresses to the storage variables of the `Marketplace` contract because the length value of the array has not been updated correctly upon deletion.", "severity": "Low", "contract": "Marketplace", "function": "deleteKIP17AndSale(address,address)", "lineNumber": "141"}, {"id": 6, "category": {"1": ["CWE-284"]}, "title": "Malicious users can launch a DoS attack using the public deployIfNotExist function.", "description": "The `deployIfNotExist` function of the `SalesForEOA` contract is callable by any user, allowing a malicious user to reallocate the `Product` address of token IDs and launch a DoS attack.", "severity": "High", "contract": "SalesForEOA", "function": "deployIfNotExists(address, uint[] memory)", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-693"]}, "title": "Reentrancy on the buySale function leads to asset theft.", "description": "The `SalesForEOA` contract's `buySale` and `deleteAllData` functions include refund logic that transfers the suggester's bid value, allowing a malicious user to drain the value of other suggesters by constructing a malicious contract with a fallback function that calls the `buySale` or `deleteAllData` functions again.", "severity": "Critical", "contract": "SalesForEOA.sol", "function": "buySale() and deleteAllData()", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-682"]}, "title": "cancelPutOnSale function may cause unintended behavior.", "description": "The cancelPutOnSale function needs to be reconsidered as it may exclude expected executions, resulting in unexpected behavior due to lack of Product addresses update and refund implementation.", "severity": "Tips", "contract": "SalesForEOA.sol", "function": "cancelPutOnSale(address,uint256[])", "lineNumber": "232"}, {"id": 9, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1173"]}, "title": "No KLAY transfer when the SaleForEOA contract uses the KIP17 contract rather than the KIP17Marketplace contract.", "description": "If the `SaleForEOA` contract uses the KIP17 contract which does not implement the `IKIP17Marketplace` interface, the KIP17 token purchase only transfers the KIP17 token to the buyer, without transferring the KLAY to the seller.", "severity": "Critical", "contract": "SalesForEOA", "function": "transferTokens", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Free purchase of KIP17 token is possible when the SALE_MAX_TIME is set to 0 and cancelPutOnSale is called.", "description": "When the SALE_MAX_TIME variable of the SalesForEOA contract is set to 0 and the seller canceled the sale, an arbitrary user can purchase the KIP17 token with zero amount of KLAY.", "severity": "Critical", "contract": "SalesForEOA", "function": "buySale", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "A suggester cannot cancel the suggestion if the token owner has been changed.", "description": "A suggester may not be able to cancel the suggestion and receive a refund if the token owner corresponding to the product has changed.", "severity": "High", "contract": "Sale.sol", "function": "findSaleContractByTokenId()", "lineNumber": "N/A"}]}