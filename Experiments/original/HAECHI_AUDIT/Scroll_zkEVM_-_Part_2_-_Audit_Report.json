{
    "path": "./Audit_Reports_2024/HAECHI_AUDIT/Scroll_zkEVM_-_Part_2_-_Audit_Report.pdf",
    "project_info": {
        "url": "https://github.com/scroll-tech/zkevm-circuits/tree/2e422878e0d78f769e08f0b1ad1275ee039362d5",
        "commit_hash": "2e422878e0d78f769e08f0b1ad1275ee039362d5",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "RLP Circuit data table\u2019s byte_rev_idx is underconstrained",
            "description": "The RlpFsmDataTable's byte_rev_idx is underconstrained, potentially leading to incorrect values being used for constraints and lookups.",
            "severity": "Medium",
            "contract": "RLP Circuit",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-697"
                ]
            },
            "title": "The sv_address is not constrained to be equal throughout a single transaction",
            "description": "The sv_address value is not checked to be equal throughout the rows representing the same transaction, allowing an attacker to use different addresses for the caller address and the ECDSA signature's recovered address.",
            "severity": "Critical",
            "contract": "Tx Circuit",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect constraints in configure_nonce",
            "description": "In configure_nonce, when the segment type is AccountLeaf3 and the path type is Comm on, there is a missed check on the size of the new nonce. This is because the old value of the nonce is mistakenly checked.",
            "severity": "High",
            "contract": "MPT Circuit",
            "function": "configure_nonce",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Conflicting constraints in configure_code_size",
            "description": "In configure_code_size, there are conflicting constraints conditioned on path types being either PathType:)ExtensionOld or PathType:)ExtensionNew, which cannot be true and lead to dead code and unnecessary complexity.",
            "severity": "Low",
            "contract": "MPT Circuit",
            "function": "configure_code_size()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-128"
                ]
            },
            "title": "ByteRepresentation:index is not properly constrained",
            "description": "In the ByteRepresentation gadget, there is a constraint which ensures that the index always increases by 1 or is 0. However, at the first row, a rotation to the previous row will wrap around to the last row of the table, allowing the value of the index to be controlled by values in the last row.",
            "severity": "Medium",
            "contract": "MPT Circuit",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ]
            },
            "title": "Miscellaneous typos in comments and constraint descriptions",
            "description": "There are miscellaneous typos in comments and constraint descriptions in multiple files including byte_representation.rs, mpt_update.rs, and account.rs.",
            "severity": "Informational",
            "contract": "MPT Circuit",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "ChainId is not mapped to it\u2019s corresponding RLP Tag in Tx Circuit",
            "description": "In the Tx Circuit, the Chain ID value is incorrectly set to Null even though it is part of the RLP encoded transaction (Tag: ChainId), allowing an attacker to forge the Chain ID value for a given transaction with an existing signature.",
            "severity": "High",
            "contract": "Tx Circuit",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "Highest tx_id must be equal to cum_num_txs in Tx Circuit",
            "description": "In the Tx Circuit, there is a check to ensure that tx_id is less than the cum_num_txs value which is looked up from the block table. However, there is no constraint which ensures that the highest tx_id is equal to the cum_num_txs.",
            "severity": "High",
            "contract": "Tx Circuit",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Multiple RLP encodings share the same RLC value",
            "description": "The formula to calculate RLP Tag using Random Linear Combination (RLC) allows an adversary to add zero bytes to existing fields in a RLP encoded signing data for a transaction without changing the RLCed value in the circuit.",
            "severity": "Critical",
            "contract": "RLP Circuit",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ]
            },
            "title": "Account destruction and selfdestruct in MPT Circuit",
            "description": "Conflicting implementations of various parts of the MPT Circuit design regarding account destruction and selfdestruct operations.",
            "severity": "N/A",
            "contract": "MPT Circuit",
            "function": "configure_common_path, configure_code_size, configure_nonce, configure_balance",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Support of various EIPs in TX Circuit",
            "description": "The TxType enum in geth_types.rs contains different EIPs referring to different transaction types, but the current RLP circuit only supports decoding of RLP-encoded payloads where the maximum depth is 1, restricting support to only three EIPs: Eip155, PreEip155, and L1Msg.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Invalid RLP handling",
            "description": "The RLP circuit using a finite state machine has many failing cases in the RLP decoding, including when the first byte is less than 0xc0 when decoding a BeginList tag. The documentation suggests adding a column 'has_succeed' to the circuit and an InvalidRLP state to handle issues such as this.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}