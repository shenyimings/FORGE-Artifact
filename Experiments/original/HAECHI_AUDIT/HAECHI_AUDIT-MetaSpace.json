{"path": "./Audit_Reports_2024/HAECHI_AUDIT/HAECHI_AUDIT-MetaSpace.pdf", "project_info": {"url": "https://gitlab.com/mspace.ai/mspace-swap", "commit_hash": "affa1ee7c5b7eafec47f92f05955f3b3d285e69b", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-710"], "2": ["CWE-1120"], "3": ["CWE-1060"]}, "title": "Inefficient storage usage in UniswapV2Factory", "description": "N/A", "severity": "N/A", "contract": "UniswapV2Factory", "function": "createPair", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-693"], "2": ["CWE-807"]}, "title": "Possible sandwich/MEV attack", "description": "A large-scale transaction can be sandwiched by prior selling to lower market prices, and there can be a tailgate buyback that adds the same amount to the transaction amount. This sandwich attack can cause losses and brings less profit to trading users as expected.", "severity": "N/A", "contract": "UniswapV2Factory", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "Meaningless guard statement in BoringHelper#getMETARate()", "description": "The guard statement to check the zero address of token0 is meaningless because token0 is declared and must be a zero address.", "severity": "Tip", "contract": "BoringHelper", "function": "getMETARate()", "lineNumber": "L84"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "MiningHill#emergencyWithdraw() does not follow the checks-effects-interactions", "description": "The emergencyWithdraw function does not adhere to the checks-effects-interactions pattern.", "severity": "N/A", "contract": "MiningHill", "function": "emergencyWithdraw(uint256 pid)", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-710"], "2": ["CWE-1120"], "3": ["CWE-1060"]}, "title": "Inefficient Storage Usage", "description": "token0 and token1 are sorted values, which can lead to inefficient storage usage when finding a pair by comparing two addresses.", "severity": "Medium", "contract": "UniswapV2Factory", "function": "createPair()", "lineNumber": "L60-L79"}, {"id": 5, "category": {"1": ["CWE-693"]}, "title": "Reentrancy Vulnerability in MiningHill#emergencyWithdraw()", "description": "The value user.amount is not zeroed until after the external call to pool.lpToken.safeTransfer(), allowing reentrancy and potential token theft if a compromised LP token is added.", "severity": "High", "contract": "MiningHill", "function": "emergencyWithdraw(uint256 pid)", "lineNumber": "N/A"}]}