{
    "path": "./Audit_Reports_2024/Techrate/Metaloop Tech Full Smart Contract Security Audit.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x90bb4c7824182e6f37c97cad683f46bc68894907"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "Out of gas",
            "description": "The functions includeInReward() and _getCurrentSupply() use loops to find and remove addresses from the _excluded list, which can cause an OUT_OF_GAS exception if the excluded addresses list is too long.",
            "severity": "Low",
            "contract": "N/A",
            "function": [
                "includeInReward()",
                "_getCurrentSupply()"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Rounding error",
            "description": "At some calculation with division, it is goes first. In Solidity we don\u2019t have floating points, but instead we get rounding errors.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Fee checking",
            "description": "The swapAndLiquify() function distributes marketing balance as part of liquidity fee but there is no checking of marketing fee to be less than liquidity fee.",
            "severity": "Low",
            "contract": "N/A",
            "function": "swapAndLiquify()",
            "lineNumber": "N/A"
        }
    ]
}