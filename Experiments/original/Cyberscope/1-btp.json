{"path": "./Audit_Reports_2024/Cyberscope/1-btp.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "ST - Stops Transactions", "description": "The contract owner has the authority to stop the sales for all users excluding the owner, which may lead to a honeypot scenario if `_maxTxAmount` is set to zero.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "ELFM - Exceeds Fees Limit", "description": "The contract owner has the authority to increase over the allowed limit of 25%. The owner may take advantage of it by calling the `setTaxFeePercent` and `setLiquidityFeePercent` functions with a high percentage value.", "severity": "High", "contract": "N/A", "function": "`setTaxFeePercent` and `setLiquidityFeePercent`", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "BC - Blacklists Addresses", "description": "The contract owner has the authority to stop addresses from transactions, which can be exploited by calling the `addBotToBlackList` function.", "severity": "Medium", "contract": "N/A", "function": "addBotToBlackList", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "FRV - Fee Restoration Vulnerability", "description": "The contract demonstrates a potential vulnerability upon removing and restoring the fees when they have been set to zero, potentially causing incorrect fee calculations or unexpected behavior within the contract.", "severity": "High", "contract": "N/A", "function": "remove fees and restore fees", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "FSA - Fixed Swap Address", "description": "The swap address is assigned once and cannot be changed, which may prevent the contract from migrating to a new liquidity pool pair or decentralized exchange.", "severity": "Medium", "contract": "BITCHIP", "function": "setSwapAndLiquifyEnabled", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-682"]}, "title": "MEM - Misleading Error Message", "description": "The `addBotToBlackList` function contains a `require` statement with an incorrect address, protecting the owner's wallet instead of the Uniswap Router, leading to misleading error messages.", "severity": "Medium", "contract": "N/A", "function": "addBotToBlackList", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "RES - Redundant Event Statement", "description": "The event `MinTokensBeforeSwapUpdated` is not emitted in the contract's implementation, hence it is redundant.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1288"]}, "title": "RRS - Redundant Require Statement", "description": "The contract utilizes a `require` statement within the `add` function aiming to prevent overflow errors, but this check is redundant in Solidity version 0.8.0 and later as arithmetic operations revert on overflow and underflow.", "severity": "Medium", "contract": "N/A", "function": "add()", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "RSML - Redundant SafeMath Library", "description": "The usage of the SafeMath library adds complexity, overhead and increases gas consumption unnecessarily since Solidity versions 0.8.0 and later have native functionality for arithmetic operations that revert to underflow and overflow.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "OCTD - Transfers Contract's Tokens", "description": "The contract owner has the authority to claim all the balance of the contract by calling the `rescueBEP20` function.", "severity": "High", "contract": "N/A", "function": "rescueBEP20()", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-664"], "2": ["CWE-665"], "3": ["CWE-909"], "4": ["CWE-456"]}, "title": "L02 - State Variables could be Declared Constant", "description": "State variables can be declared as constant using the constant keyword to ensure that the value of the state variable cannot be changed after it has been set, which decreases gas consumption.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-710"]}, "title": "L04 - Conformance to Solidity Naming Conventions", "description": "The code does not adhere to the Solidity style guide, which can lead to decreased readability and maintainability.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-682"]}, "title": "L07 - Missing Events Arithmetic", "description": "Events are a way to record and log information about changes or actions that occur within a contract.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 13, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-561"]}, "title": "L09 - Dead Code Elimination", "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 14, "category": {"1": ["CWE-682"]}, "title": "L17 - Usage of Solidity Assembly", "description": "Using assembly can be useful for optimizing code, but it can also be error-prone and may contain errors such as Syntax, Type, Out-of-bounds, Stack, and Revert.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 15, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "L19 - Stable Compiler Version", "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version (i.e., any version that is a higher minor or patch version) can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 16, "category": {"1": ["CWE-682"]}, "title": "L20 - Succeeded Transfer Check", "description": "According to the ERC20 specification, the transfer methods should be checked if the result is successful. Otherwise, the contract may wrongly assume that the transfer has been established.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}