{"path": "./Audit_Reports_2024/Cyberscope/1-kworld.pdf", "project_info": {"url": "https://github.com/cyberscope-io/audits", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-710"]}, "title": "L04 - Conformance to Solidity Naming Conventions", "description": "The Solidity style guide is a set of guidelines for writing clean and consistent Solidity code. Adhering to a style guide can help improve the readability and maintainability of the Solidity code, making it easier for others to understand and work with.", "severity": "Minor / Informative", "contract": "Token.sol", "function": "N/A", "lineNumber": "81,234,245,261,262,547,560,565"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "L07 - Missing Events Arithmetic", "description": "Events are a way to record and log information about changes or actions that occur within a contract. They are often used to notify external parties or clients about events that have occurred within the contract, such as the transfer of tokens or the completion of a task.", "severity": "Minor / Informative", "contract": "Token.sol", "function": "N/A", "lineNumber": "562, 567"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "L13 - Divide before Multiply Operation", "description": "It is important to be aware of the order of operations when performing arithmetic calculations. This is especially important when working with large numbers, as the order of operations can affect the final result of the calculation. Performing divisions before multiplications may cause loss of prediction.", "severity": "Minor / Informative", "contract": "Token", "function": "N/A", "lineNumber": "454-457,464-467"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "L16 - Validate Variable Setters", "description": "The contract performs operations on variables configured with user-supplied input without proper checks for zero values, leading to potential problems during execution.", "severity": "Minor / Informative", "contract": "Token.sol", "function": "N/A", "lineNumber": "292,296,298,300"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-237"], "4": ["CWE-238"]}, "title": "L19 - Stable Compiler Version", "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.", "severity": "Minor / Informative", "contract": "Token.sol", "function": "N/A", "lineNumber": "8"}]}