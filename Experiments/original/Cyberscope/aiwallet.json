{
    "path": "./Audit_Reports_2024/Cyberscope/aiwallet.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "3e08fca346948c22441dfa8c8443b3da9cfa45d82425bb71d18ea4eca643a4c0",
        "address": "0x309d43cb7bb1e07371eee4947103aa019121a973",
        "chain": "bsc",
        "compilerVersion": [
            "v0.8.17+commit.8df45f5f"
        ],
        "project_path": {
            "AiWallet": "Experiments/contracts\\aiwallet\\AiWallet"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ],
                "3": [
                    "CWE-437"
                ]
            },
            "title": "PTRP - Potential Transfer Revert Propagation",
            "description": "The contract does not tolerate potential reverts from underlying contracts when interaction is part of the main transfer flow.",
            "severity": "Minor / Informative",
            "contract": "AiWallet.sol",
            "function": "N/A",
            "lineNumber": "753"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1076"
                ],
                "3": [
                    "CWE-1078"
                ],
                "4": [
                    "CWE-1099"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The code does not follow Solidity naming convention guidelines, which can decrease readability and maintainability.",
            "severity": "Minor / Informative",
            "contract": "AiWallet.sol",
            "function": "N/A",
            "lineNumber": "33,34,51,71,642,650,658,665,722"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.",
            "severity": "Minor / Informative",
            "contract": "AiWallet.sol",
            "function": "N/A",
            "lineNumber": "227,238,242,250,258,269,273,282,286,295,313,325,499"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L14 - Uninitialized Variables in Local Scope",
            "description": "Using an uninitialized local variable can lead to unpredictable behavior and potentially cause errors in the contract. It's important to always initialize local variables with appropriate values before using them.",
            "severity": "Minor / Informative",
            "contract": "AiWallet.sol",
            "function": "N/A",
            "lineNumber": "L574"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "L15 - Local Scope Variable Shadowing",
            "description": "Local scope variable shadowing occurs when a local variable with the same name as a variable in an outer scope is declared within a function or code block.",
            "severity": "Minor / Informative",
            "contract": "AiWallet.sol",
            "function": "N/A",
            "lineNumber": "L572"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L17 - Usage of Solidity Assembly",
            "description": "Using assembly can be useful for optimizing code, but it can also be error-prone. It's important to carefully test and debug assembly code to ensure that it is correct and does not contain any errors.",
            "severity": "Minor / Informative",
            "contract": "AiWallet.sol",
            "function": "N/A",
            "lineNumber": "L330"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L20 - Succeeded Transfer Check",
            "description": "According to the ERC20 specification, the transfer methods should be checked if the result is successful. Otherwise, the contract may wrongly assume that the transfer has been established.",
            "severity": "Minor / Informative",
            "contract": "AiWallet.sol",
            "function": "N/A",
            "lineNumber": "626"
        }
    ]
}