{
    "path": "./Audit_Reports_2024/Cyberscope/ogb.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x0da87c6180d5609b5d0d5b8094f27cb5231499a3"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1288"
                ]
            },
            "title": "RPF - Redundant Pausable Functionality",
            "description": "The contract inherits functionality from the Pausable contract but none of its functions use the `whenNotPaused` and `whenPaused` modifiers, making them redundant.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-237"
                ],
                "4": [
                    "CWE-240"
                ]
            },
            "title": "RFD - Redundant Function Declarations",
            "description": "The contract contains redundant custom transfer functions (inGameTransaction, upgradeItems, payMarketplaceFees, buyNFT, and sellNFT) that replicate the functionality of the standard ERC20 transfer function with additional validation.",
            "severity": "Medium",
            "contract": "OpenGames",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "UM - Unused Modifier",
            "description": "The contract defines a `hasMinimumBalance` modifier intended to ensure that the caller has a minimum balance of tokens before executing certain functions. However, instead of consistently applying this modifier where needed, the contract redundantly contains direct `require` statements within the functions, performing the same balance check as the modifier.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "CO - Contract Optimization",
            "description": "There are code segments that could be optimized to reduce size, consume less memory, execute more rapidly, or perform fewer operations.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "balanceOfUser",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-185"
                ]
            },
            "title": "MNF - Misleading NFT Functionality",
            "description": "Several functions within the contract have names that imply they facilitate the buying, selling, or renting of NFTs but are primarily used for transferring tokens rather than handling actual NFTs.",
            "severity": "N/A",
            "contract": "N/A",
            "function": [
                "buyNFT",
                "sellNFT",
                "rentNFT"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "MU - Modifiers Usage",
            "description": "The contract uses repetitive statements on some methods to validate some preconditions instead of using modifiers which can reduce code duplication and improve readability.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RSML - Redundant SafeMath Library",
            "description": "The usage of the SafeMath library adds complexity, overhead and increases gas consumption unnecessarily since Solidity versions greater than or equal to 0.8.0 have native functionality that replaces it.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L17 - Usage of Solidity Assembly",
            "description": "Using assembly can be error-prone and requires careful testing and debugging to ensure correctness.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-237"
                ],
                "4": [
                    "CWE-238"
                ]
            },
            "title": "L19 - Stable Compiler Version",
            "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version (i.e., any version that is a higher minor or patch version) can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}