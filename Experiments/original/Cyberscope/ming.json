{
    "path": "./Audit_Reports_2024/Cyberscope/ming.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0xfd7671cd438ef91ab797bde0c910d7123471e7e6"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "CO - Code Optimization",
            "description": "The `balanceOf` function of an ERC20 token checks if its balance is greater than zero, which can be improved by using the `!=` operator.",
            "severity": "N/A",
            "contract": "ERC20",
            "function": "balanceOf()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-191"
                ]
            },
            "title": "PSU - Potential Subtraction Underflow",
            "description": "The contract subtracts two values, the second value may be greater than the first value if the contract owner misuses the configuration. As a result, the subtraction may underflow and cause the execution to revert.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "setWithdrawFeeInterval",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "NR - Non-Guaranteed Reward",
            "description": "The contract does not guarantee the users will get their rewards. The deposited amounts are transferred to the contract's balance, but the claimable rewards are transferred to the users from the `Reserve` contract.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1120"
                ],
                "3": [
                    "CWE-1060"
                ]
            },
            "title": "GO - Gas Optimization",
            "description": "The `MAXIMUM_HARVEST_INTERVAL` and `harvestInterval` variables are declared as `uint256`, which takes up more storage space and increases gas costs. They can be optimized to `uint32`.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RV - Redundant Variable",
            "description": "The `BONUS_MULTIPLIER` is a constant variable with a value of 1 and is only used for multiplication, hence the variable is redundant.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "RI - Reward Inconsistency",
            "description": "The reward mechanism of the platform is not consistent due to the owner's authority to claim the balance of the Reserve contract, which may result in users receiving a zero reward amount.",
            "severity": "High",
            "contract": "Reserve",
            "function": "safeTransfer",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "SS - State Synchronization",
            "description": "The contract's state is not being synchronized with what the user sees and the actual values. The `pendingToken` function will return the reward the user is actually entitled to, but in reality, the reward may be much less or even zero.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "pendingToken()",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RSML - Redundant SafeMath Library",
            "description": "The usage of the SafeMath library adds complexity, overhead and increases gas consumption unnecessarily since Solidity versions greater than or equal to 0.8.0 provide native functionality for arithmetic operations that revert to underflow and overflow.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "RSK - Redundant Storage Keyword",
            "description": "The contract uses the `storage` keyword in a view function. The `storage` keyword is used to persist data on the contract's storage. View functions are functions that do not modify the state of the contract and do not perform any actions that cost gas (such as sending a transaction). As a result, the use of the `storage` keyword in view functions is redundant.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "IDI - Immutable Declaration Improvement",
            "description": "The contract declares state variables that their value is initialized once in the constructor and are not modified afterwards.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1076"
                ],
                "3": [
                    "CWE-1078"
                ],
                "4": [
                    "CWE-1099"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The code does not adhere to the Solidity naming conventions, which can affect readability and maintainability.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.",
            "severity": "Unresolved",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-241"
                ]
            },
            "title": "L17 - Usage of Solidity Assembly",
            "description": "Using assembly can be error-prone and requires careful testing and debugging to ensure correctness and avoid errors such as Syntax, Type, Out-of-bounds, Stack, and Revert.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "L19 - Stable Compiler Version",
            "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version (i.e., any version that is a higher minor or patch version) can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.",
            "severity": "Unresolved",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "L20 - Succeeded Transfer Check",
            "description": "The transfer methods do not check if the result is successful according to the ERC20 specification, which may cause the contract to wrongly assume that the transfer has been established.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}