{"path": "./Audit_Reports_2024/Cyberscope/smartswap.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "PTAI - Potential Transfer Amount Inconsistency", "description": "The `transfer()` and `transferFrom()` functions may produce inconsistency between the expected and actual behavior due to the fee or tax charged to the sender of an ERC20 token when tokens are transferred to another address.", "severity": "Medium", "contract": "N/A", "function": "transfer() and transferFrom()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-693"], "2": ["CWE-358"]}, "title": "CCF - Contradictory Contract Functionality", "description": "The `DP2PTokenLegacyUSDT` contract's `startDeal` function does not enforce the use of the USDT token, allowing deals with any ERC20 token, which contradicts its name and functionality.", "severity": "Critical", "contract": "DP2PTokenLegacyUSDT", "function": "startDeal()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "RPF - Redundant Payable Function", "description": "The contract's function `startDeal` has a `payable` modifier which means a user pays with the native token. The function does not use the `msg.value` variable anywhere inside the function to indicate the usage of the `payable` modifier.", "severity": "N/A", "contract": "SMARTSWAP", "function": "startDeal()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-697"], "2": ["CWE-1025"], "3": ["CWE-595"], "4": ["CWE-597"]}, "title": "MTP - Misleading Token Parameter", "description": "The contract's `startDeal` function accepts a `DealData` struct as an input parameter, which includes the variable `deal.token`. However, this variable is not utilized when initiating a deal with native tokens, leading to potential confusion for users.", "severity": "Medium", "contract": "N/A", "function": "startDeal()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "CFGO - Cancel Functionality Gas Optimization", "description": "The cancelation process requires the buyer to pay the amount of gas needed for the transaction. This gas cost can be a deterrent for the buyer users, discouraging them from canceling deals even if they want to cancel them.", "severity": "Critical", "contract": "N/A", "function": "cancelDealBuyer", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-391"]}, "title": "MEE - Missing Events Emission", "description": "The contract performs actions and state mutations from external methods that do not result in the emission of events.", "severity": "N/A", "contract": "SMARTSWAP", "function": "N/A", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1288"]}, "title": "RSV - Redundant Struct Variable", "description": "The `DealData` struct has a redundant `bytes32` variable `extra` that is not utilized in any of the contract's functions or state changes, leading to increased gas costs for operations involving the struct.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "RED - Redundant Enum Declarations", "description": "The contract includes redundant enum declarations that are not used in any part of the contract's functions or state transitions, leading to unnecessary gas consumption during contract deployment and causing confusion about the contract's actual state management logic.", "severity": "Medium", "contract": "IDP2PStateMachine", "function": "N/A", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-561"]}, "title": "L09 - Dead Code Elimination", "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-241"]}, "title": "L17 - Usage of Solidity Assembly", "description": "Using assembly can be error-prone and may lead to Syntax, Type, Out-of-bounds, Stack, and Revert errors if not carefully tested and debugged.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-682"]}, "title": "L18 - Multiple Pragma Directives", "description": "If the contract includes multiple conflicting pragma directives, it may produce unexpected errors.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "L19 - Stable Compiler Version", "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version (i.e., any version that is a higher minor or patch version) can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}