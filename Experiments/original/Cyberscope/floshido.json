{
    "path": "./Audit_Reports_2024/Cyberscope/floshido.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x87e04a05499cb8d352c2e367870d4cf0ead460f0",
        "chain": "bsc",
        "compilerVersion": [
            "v0.8.18+commit.87f61d96"
        ],
        "project_path": {
            "FLOSHIDOINU": "Experiments/contracts\\floshido\\FLOSHIDOINU"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1076"
                ],
                "3": [
                    "CWE-1078"
                ],
                "4": [
                    "CWE-1099"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The code does not follow Solidity naming convention guidelines, which can decrease readability and maintainability.",
            "severity": "Minor / Informative",
            "contract": "FLOSHIDOINU",
            "function": "N/A",
            "lineNumber": "33,115,118,127,128,129,130,131,146,152,159,160,161,162,163,187,412,481"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L07 - Missing Events Arithmetic",
            "description": "N/A",
            "severity": "Minor / Informative",
            "contract": "FLOSHIDOINU.sol",
            "function": "N/A",
            "lineNumber": "449,461,471,488"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can occur due to conditional statements that are always false, functions that are never called, or unreachable code, making a contract harder to understand and maintain.",
            "severity": "Minor / Informative",
            "contract": "FLOSHIDOINU",
            "function": "N/A",
            "lineNumber": "L527"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-232"
                ]
            },
            "title": "L12 - Using Variables before Declaration",
            "description": "The contract is using a variable before the declaration. This is usually happening either if it has not been declared yet or if the variable has been declared in a different scope.",
            "severity": "Minor / Informative",
            "contract": "FLOSHIDOINU",
            "function": "N/A",
            "lineNumber": "L640,652"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L13 - Divide before Multiply Operation",
            "description": "It is important to be aware of the order of operations when performing arithmetic calculations. This is especially important when working with large numbers, as the order of operations can affect the final result of the calculation. Performing divisions before multiplications may cause a loss of prediction.",
            "severity": "Minor / Informative",
            "contract": "FLOSHIDOINU",
            "function": "N/A",
            "lineNumber": "715,716"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L14 - Uninitialized Variables in Local Scope",
            "description": "Using an uninitialized local variable can lead to unpredictable behavior and potentially cause errors in the contract.",
            "severity": "Minor / Informative",
            "contract": "FLOSHIDOINU.sol",
            "function": "N/A",
            "lineNumber": "640,651,652"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L20 - Succeeded Transfer Check",
            "description": "According to the ERC20 specification, the transfer methods should be checked if the result is successful. Otherwise, the contract may wrongly assume that the transfer has been established.",
            "severity": "Minor / Informative",
            "contract": "FLOSHIDOINU",
            "function": "N/A",
            "lineNumber": "752"
        }
    ]
}