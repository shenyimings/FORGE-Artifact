{
    "path": "./Audit_Reports_2024/Cyberscope/dc-pets.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "main",
        "address": "0xd2b4b586d7e3aff58d2686ee2dacf3d690be76ff",
        "chain": "bsc",
        "compilerVersion": [
            "v0.8.16+commit.07a7930e"
        ],
        "project_path": {
            "MicroPets": "Experiments/contracts\\dc-pets\\MicroPets"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "OTUT - Transfers User's Tokens",
            "description": "The contract allows users to migrate their token balances from an external address using the `migrate` function, which can lead to inconsistencies in the token balances of this address and artificially inflate the value of the tokens.",
            "severity": "High",
            "contract": "N/A",
            "function": "migrate()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1288"
                ]
            },
            "title": "RV - Redundant Variable",
            "description": "The contract contains the `autoSwapTier` variable within the `Configs` struct which is set to `500` through the `setShares` function but is not utilized in any of the contract's functionalities, making it redundant and leading to higher gas consumption.",
            "severity": "Medium",
            "contract": "MicroPets",
            "function": "setShares()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "PTAI - Potential Transfer Amount Inconsistency",
            "description": "The `transfer()` and `transferFrom()` functions may produce inconsistency between the expected and actual behavior due to the fee or tax charged to the sender of an ERC20 token when tokens are transferred.",
            "severity": "N/A",
            "contract": "MicroPets",
            "function": "transfer() and transferFrom()",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1288"
                ]
            },
            "title": "RCI - Redundant Code Implementation",
            "description": "The contract declares the `enableUniSwap` variable, which is initialized to `true` within the constructor. The contract also includes the `enableUniswap` function, which sets the `enableUniSwap` to true. However, since the `enableUniSwap` variable is already initialized to true the function cannot be invoked effectively.",
            "severity": "Medium",
            "contract": "MicroPets",
            "function": "constructor",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RSML - Redundant SafeMath Library",
            "description": "The usage of the SafeMath library adds complexity, overhead and increases gas consumption unnecessarily since Solidity versions greater than or equal to 0.8.0 have native functionality for arithmetic operations that revert to underflow and overflow.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "L02 - State Variables could be Declared Constant",
            "description": "State variables can be declared as constant using the constant keyword to ensure they cannot be changed after being set, which decreases gas consumption of the corresponding transaction.",
            "severity": "Informational",
            "contract": "MicroPets",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The code does not adhere to the Solidity style guide, which can affect readability and maintainability.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L07 - Missing Events Arithmetic",
            "description": "Events are a way to record and log information about changes or actions that occur within a contract.",
            "severity": "N/A",
            "contract": "MicroPets",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.",
            "severity": "N/A",
            "contract": "MicroPets",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L17 - Usage of Solidity Assembly",
            "description": "Using assembly can be error-prone and requires careful testing and debugging to ensure correctness.",
            "severity": "N/A",
            "contract": "MicroPets",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "L19 - Stable Compiler Version",
            "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version (i.e., any version that is a higher minor or patch version) can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L20 - Succeeded Transfer Check",
            "description": "According to the ERC20 specification, the transfer methods should be checked if the result is successful. Otherwise, the contract may wrongly assume that the transfer has been established.",
            "severity": "Medium",
            "contract": "MicroPets",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}