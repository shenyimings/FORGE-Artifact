{
    "path": "./Audit_Reports_2024/Cyberscope/1-mkd.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "030392f8a92bcfa0e78b49dc0d542c05fe057a0f4f66ec4c78eb48075cfa68ee",
        "address": "0xbca00c0e5d1f62f6877179398ca58b3d9a30bf17"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "DDP - Decimal Division Precision",
            "description": "Division of decimal (fixed point) numbers can result in rounding errors due to the way that division is implemented in Solidity. This can lead to rounding errors, as the result may not be able to be accurately represented as an integer with the specified number of decimal places.",
            "severity": "Minor / Informative",
            "contract": "MKD",
            "function": "N/A",
            "lineNumber": "1010"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "TSD - Total Supply Diversion",
            "description": "The total supply of a token and the balances of individual accounts are two separate concepts managed by different variables in a smart contract. These two entities should be equal to each other.",
            "severity": "Minor / Informative",
            "contract": "MKD",
            "function": "N/A",
            "lineNumber": "1030"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RSML - Redundant SafeMath Library",
            "description": "The usage of the SafeMath library adds complexity and overhead, increasing gas consumption unnecessarily, as Solidity versions greater than or equal to 0.8.0 provide native functionality for arithmetic operations.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RSK - Redundant Storage Keyword",
            "description": "Avoid using the `storage` keyword in view functions because it is unnecessary and can make the code less readable.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "L1572,1576,1583,1587"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "L02 - State Variables could be Declared Constant",
            "description": "State variables can be declared as constant using the constant keyword. This means that the value of the state variable cannot be changed after it has been set. Additionally, the constant variables decrease gas consumption of the corresponding transaction.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "L556"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The Solidity style guide is a set of guidelines for writing clean and consistent Solidity code. Adhering to a style guide can help improve the readability and maintainability of the Solidity code, making it easier for others to understand and work with.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "37,38,50,106,360,442,496,500,504,508,556,569,630,755,774,840,1216,1330"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1288"
                ]
            },
            "title": "L05 - Unused State Variable",
            "description": "An unused state variable is a state variable that is declared in the contract, but is never used in any of the contract's functions.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "L307"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L07 - Missing Events Arithmetic",
            "description": "Missing events arithmetic operation.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "757,763,770,783,788,1124"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can occur due to conditional statements that are always false, functions that are never called, or unreachable code, making a contract harder to understand and maintain.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "338, 478, 514, 1572"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-232"
                ]
            },
            "title": "L12 - Using Variables before Declaration",
            "description": "The contract is using a variable before the declaration. This is usually happening either if it has not been declared yet or if the variable has been declared in a different scope.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "L1050"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "L13 - Divide before Multiply Operation",
            "description": "Performing divisions before multiplications may cause a loss of precision.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa.sol",
            "function": "N/A",
            "lineNumber": "1011, 1012, 1013, 1014, 1149, 1153, 1165, 1166, 1167"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L14 - Uninitialized Variables in Local Scope",
            "description": "Using an uninitialized local variable can lead to unpredictable behavior and potentially cause errors in the contract.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "930,931,932,933,934,1028,1050,1140,1141,1145,1146,1485,1531"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "L15 - Local Scope Variable Shadowing",
            "description": "Local scope variable shadowing occurs when a local variable with the same name as a variable in an outer scope is declared within a function or code block.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "451, 1231"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-233"
                ],
                "4": [
                    "CWE-236"
                ]
            },
            "title": "L16 - Validate Variable Setters",
            "description": "N/A",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "280,723,1236,1475"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L20 - Succeeded Transfer Check",
            "description": "According to the ERC20 specification, the transfer methods should be checked if the result is successful. Otherwise, the contract may wrongly assume that the transfer has been established.",
            "severity": "Minor / Informative",
            "contract": "MeeKyunDosa",
            "function": "N/A",
            "lineNumber": "L1504"
        }
    ]
}