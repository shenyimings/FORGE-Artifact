{
    "path": "./Audit_Reports_2024/Cyberscope/guitarist.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0xa249d8f280ba32ab3e95bddf4f3dbde059d62ac3"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "PRE - Potential Reentrance Exploit",
            "description": "The contract makes an external call to transfer funds to recipients using the payable transfer method. The recipient could be a malicious contract that has an untrusted code in its fallback function that makes a recursive call back to the original contract.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "_safeMint and mint",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "MSB - Max Supply Bypass",
            "description": "The contract allows the owner to potentially exceed the predefined `MAX_SUPPLY` limit of tokens through the `airdrop` function.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "airdrop()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-923"
                ],
                "3": [
                    "CWE-300"
                ]
            },
            "title": "CCR - Contract Centralization Risk",
            "description": "The contract's functionality and behavior are heavily dependent on external parameters or configurations, posing centralization risks such as Single Point of Control, Vulnerability to Attacks, Operational Delays, Trust Dependencies, and Decentralization Erosion.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-435"
                ]
            },
            "title": "DFI - Duplicated Function Implementation",
            "description": "The contract contains two separate functions, `airdrop` and `partnerMint`, both of which essentially serve the same purpose to allow the owner to mint NFTs for specific addresses.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "airdrop() and partnerMint()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "MC - Missing Check",
            "description": "The contract is processing variables that have not been properly sanitized and checked that they form the proper shape, which could lead to inconsistencies and unintended behavior in the token distribution process.",
            "severity": "High",
            "contract": "N/A",
            "function": "setMax_per_wallet()",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "RF - Redundant Functions",
            "description": "The contract contains redundant functions `setWallet2` and `setWallet3` which update address variables only utilized within the constructor.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "setWallet2, setWallet3",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "FO - Function Optimization",
            "description": "The current implementation of both the `toggleReveal` and `toggle_public_mint_status` functions in the contract utilizes an `if-else` statement to toggle the state of the `revealed` and `public_mint_status` variables respectively. However, this approach, while functional, is more verbose than necessary.",
            "severity": "N/A",
            "contract": "Guitarist",
            "function": [
                "toggleReveal",
                "toggle_public_mint_status"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "MEE - Missing Events Emission",
            "description": "The contract performs actions and state mutations from external methods that do not result in the emission of events.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "RPF - Redundant Payable Function",
            "description": "The contract's function `airdrop` and `partnerMint` have the `payable` modifier which means that the contract owner pays with the native token. The function does not use the `msg.value` variable anywhere inside the function to indicate the usage of the payable modifier.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "airdrop, partnerMint",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "EIS - Excessively Integer Size",
            "description": "The contract uses a bigger unsigned integer data type than necessary, consuming more storage space and requiring additional computational resources, leading to higher transaction costs, longer execution times, and potential scalability bottlenecks.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-909"
                ],
                "4": [
                    "CWE-456"
                ]
            },
            "title": "L02 - State Variables could be Declared Constant",
            "description": "State variables can be declared as constant using the constant keyword to ensure they cannot be changed after being set, which decreases gas consumption.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The Solidity style guide is a set of guidelines for writing clean and consistent Solidity code. Adhering to a style guide can help improve the readability and maintainability of the Solidity code, making it easier for others to understand and work with.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-697"
                ]
            },
            "title": "L11 - Unnecessary Boolean equality",
            "description": "Boolean equality is unnecessary when comparing two boolean values.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L14 - Uninitialized Variables in Local Scope",
            "description": "Using an uninitialized local variable can lead to unpredictable behavior and potentially cause errors in the contract.",
            "severity": "N/A",
            "contract": "Guitarist",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L16 - Validate Variable Setters",
            "description": "The contract performs operations on variables configured by user-supplied input without proper checks for zero values, leading to potential problems during execution.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 16,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L17 - Usage of Solidity Assembly",
            "description": "Using assembly can be useful for optimizing code, but it can also be error-prone. It's important to carefully test and debug assembly code to ensure that it is correct and does not contain any errors.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}