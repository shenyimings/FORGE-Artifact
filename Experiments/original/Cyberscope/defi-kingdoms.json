{"path": "./Audit_Reports_2024/Cyberscope/defi-kingdoms.pdf", "project_info": {"url": "https://github.com/o0ragman0o/LibCLL", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "RECC - Redundant External Contract Calls", "description": "Redundant contract external calls refers to instances in a Solidity smart contract where external contract calls are made in a way that may cause unnecessary gas consumption, potential security vulnerabilities, and/or blockchain bloat.", "severity": "Minor / Informative", "contract": "AuctionHouseMainFacet.sol", "function": "_executeOrder", "lineNumber": "161,190,192,198,204"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "SAO - Storage Access Optimization", "description": "The function `getBestOrder` retrieves information for an OrderBook from a deeply nested mapping more than once. The order book information could be searched only once and reused where needed.", "severity": "Minor / Informative", "contract": "AuctionHouseBase.sol", "function": "getBestOrder", "lineNumber": "139"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "RC - Redundant Calculations", "description": "Redundant calculations can occur in various forms in a smart contract, such as repetitive calculations for the same result, the recalculation of unchanging values, and the repeated execution of complex computations. These redundant calculations can significantly increase the gas cost of executing the smart contract.", "severity": "Minor / Informative", "contract": "AuctionHouseMainFacet.sol", "function": "_executeOrder() and _addOrder()", "lineNumber": "182,194,198,202,222,226"}, {"id": 3, "category": {"1": ["CWE-682"], "2": ["CWE-369"]}, "title": "ZD - Zero Division", "description": "The contract is using variables that may be set to zero as denominators. This can lead to unpredictable and potentially harmful results, such as a transaction revert.", "severity": "Minor / Informative", "contract": "AuctionHouseMainFacet.sol", "function": "N/A", "lineNumber": "139"}, {"id": 4, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "OO - OrderId Override", "description": "The `init` function can be called more than once and by any user without restrictions, allowing a user to reinitialize the auction house with a `nextOrderId` value smaller than the contract's current, overriding several orders.", "severity": "Minor / Informative", "contract": "AuctionHouseInit", "function": "init()", "lineNumber": "L15"}, {"id": 5, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "RSK - Redundant Storage Keyword", "description": "The contract uses the `storage` keyword in a view function. The `storage` keyword is used to persist data on the contract's storage. View functions are functions that do not modify the state of the contract and do not perform any actions that cost gas (such as sending a transaction). As a result, the use of the `storage` keyword in view functions is redundant.", "severity": "Minor / Informative", "contract": "AuctionHouseGettersFacet", "function": "N/A", "lineNumber": "157, 206, 241"}, {"id": 6, "category": {"1": ["CWE-664"], "2": ["CWE-665"], "3": ["CWE-909"], "4": ["CWE-456"]}, "title": "L02 - State Variables could be Declared Constant", "description": "State variables can be declared as constant using the constant keyword to ensure they cannot be changed after being set and decrease gas consumption.", "severity": "Minor / Informative", "contract": "AuctionHouseBase.sol", "function": "N/A", "lineNumber": "L87"}, {"id": 7, "category": {"1": ["CWE-710"], "2": ["CWE-1076"], "3": ["CWE-1078"], "4": ["CWE-1099"]}, "title": "L04 - Conformance to Solidity Naming Conventions", "description": "The code does not adhere to the Solidity naming conventions, which can affect readability and maintainability.", "severity": "Minor / Informative", "contract": ["AuctionHouseInit", "AuctionHouseGettersFacet", "AuctionHouseBase", "AuctionHouseAdminFacet"], "function": "N/A", "lineNumber": ["15", "19,34,35,36,37,68,69,70,88,89,90,91,123,141,154,181,182,183,201,202,203,204,226,239", "126,139,157", "26,39,46"]}, {"id": 8, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1288"]}, "title": "L05 - Unused State Variable", "description": "An unused state variable is a state variable that is declared in the contract, but is never used in any of the contract's functions.", "severity": "Minor / Informative", "contract": "AuctionHouseBase.sol", "function": "N/A", "lineNumber": "L83,89"}, {"id": 9, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-561"]}, "title": "L09 - Dead Code Elimination", "description": "Dead code can make a contract more difficult to understand and maintain, and can also increase the size of the contract and the cost of deploying and interacting with it.", "severity": "Minor / Informative", "contract": "AuctionHouseBase.sol", "function": "N/A", "lineNumber": "L113"}, {"id": 10, "category": {"1": ["CWE-682"], "2": ["CWE-1339"]}, "title": "L13 - Divide before Multiply Operation", "description": "Performing divisions before multiplications may cause loss of precision.", "severity": "Minor / Informative", "contract": "AuctionHouseMainFacet", "function": "N/A", "lineNumber": "139,140"}, {"id": 11, "category": {"1": ["CWE-682"]}, "title": "L14 - Uninitialized Variables in Local Scope", "description": "Using an uninitialized local variable can lead to unpredictable behavior and potentially cause errors in the contract.", "severity": "Minor / Informative", "contract": "AuctionHouseMainFacet, AuctionHouseGettersFacet", "function": "N/A", "lineNumber": "319, 42, 96, 97"}, {"id": 12, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-237"], "4": ["CWE-238"]}, "title": "L19 - Stable Compiler Version", "description": "The `^` symbol indicates that any version of Solidity that is compatible with the specified version can be used to compile the contract. The version lock is a mechanism that allows the author to specify a minimum version of the Solidity compiler that must be used to compile the contract code.", "severity": "Minor / Informative", "contract": ["AuctionHouseMainFacet", "AuctionHouseInit", "AuctionHouseGettersFacet", "AuctionHouseBase", "AuctionHouseAdminFacet"], "function": "N/A", "lineNumber": ["L3", "L2", "L3", "L3", "L3"]}, {"id": 13, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "L20 - Succeeded Transfer Check", "description": "According to the ERC20 specification, the transfer methods should be checked if the result is successful. Otherwise, the contract may wrongly assume that the transfer has been established.", "severity": "Minor / Informative", "contract": "AuctionHouseMainFacet.sol", "function": "N/A", "lineNumber": "117,192,199,223,299,317"}]}