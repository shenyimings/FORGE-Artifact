{
    "path": "./Audit_Reports_2024/PeckShield/bella_audit_report_2020_48_en_1_0.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "N/A"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Constructor Mismatch",
            "description": "Whether the contract name and its constructor are not identical to each other.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-282"
                ],
                "3": [
                    "CWE-708"
                ]
            },
            "title": "Ownership Takeover",
            "description": "The `_newOwner` variable can be set by anyone, allowing an attacker to take ownership of the contract.",
            "severity": "Critical",
            "contract": "Ownable",
            "function": "_transferOwnership() and _updateOwnership()",
            "lineNumber": "69-81"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Redundant Fallback Function",
            "description": "Whether the contract has a redundant fallback function.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Overflows & Underflows",
            "description": "Whether the contract has general overflow or underflow vulnerabilities",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-1265"
                ]
            },
            "title": "Reentrancy",
            "description": "The invest() function can be re-entered by an external contract with hidden logic, violating the checks-effects-interactions principle.",
            "severity": "Critical",
            "contract": "YCurveStaking",
            "function": "invest()",
            "lineNumber": "322-333"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Money-Giving Bug",
            "description": "Whether the contract returns funds to an arbitrary address.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ],
                "4": [
                    "CWE-401"
                ]
            },
            "title": "Blackhole",
            "description": "Whether the contract locks ETH indefinitely: merely in without out.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "Unauthorized Self-Destruct",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "20"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improving Sanity Checks in claim()",
            "description": "In the `YCurveStaking` contract, the `claim()` function allows users to claim their rewards based on the amount and time they have staked. When a user has not staked or has already unstaked all yCRV tokens, the `claim()` function still performs all the calculation with zero reward transfers and `Claimed` event emitted.",
            "severity": "Informational",
            "contract": "YCurveStaking.sol",
            "function": "claim()",
            "lineNumber": "125-126"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Suggested Adherence of Checks-Effects-Interactions",
            "description": "The principle of checks-effects-interactions is violated, which can lead to re-entrancy attacks.",
            "severity": "Low",
            "contract": "YCurveStaking.sol",
            "function": "invest()",
            "lineNumber": "331"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1287"
                ]
            },
            "title": "Improved Address Validation in _transferOwnership()",
            "description": "The `_transferOwnership()` function in Ownable contract allows the current admin to transfer her privileges to another address. However, inside `_transferOwnership()`, the `newOwner` is directly stored into the storage, `_owner`, after validating the `newOwner` is a non-zero address, which may not be enough.",
            "severity": "Low",
            "contract": "Ownable.sol",
            "function": "_transferOwnership()",
            "lineNumber": "69-73"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ],
                "3": [
                    "CWE-437"
                ]
            },
            "title": "Business Logic Error in the Interactions with Voting Escrow",
            "description": "In YCurveStaking, some functions are implemented for boosting the CRV rewards. However, the create_lock() call to the voting_escrow contract is likely to be reverted due to the fact that voting_escrow tends to prevent contract accounts from calling the function unless the caller contract address is in its whitelist.",
            "severity": "Low",
            "contract": "YCurveStaking.sol",
            "function": "lock_crv()",
            "lineNumber": "407"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1284"
                ]
            },
            "title": "Avoid Use of Variadic Byte Array",
            "description": "Use fixed-size byte array is better than that of `byte[]`, as the latter is a waste of space.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1061"
                ],
                "3": [
                    "CWE-766"
                ]
            },
            "title": "Make Visibility Level Explicit",
            "description": "Assign explicit visibility specifiers for functions and state variables.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Make Type Inference Explicit",
            "description": "Do not use keyword 'var' to specify the type, i.e., it asks the compiler to deduce the type, which is not safe especially in a loop.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-237"
                ],
                "4": [
                    "CWE-239"
                ]
            },
            "title": "Adhere To Function Declaration Strictly",
            "description": "Solidity compiler (version 0._._4._._23) enforces strict ABI length checks for return data from `calls()` which may break the execution if the function implementation does NOT follow its declaration (e.g., no return in implementing `transfer()` of ERC20 tokens).",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}