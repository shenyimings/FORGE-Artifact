{"path": "./Audit_Reports_2024/PeckShield/PeckShield-add.xyz.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Constructor Mismatch", "description": "Whether the contract name and its constructor are not identical to each other.", "severity": "Critical", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-282"], "3": ["CWE-708"]}, "title": "Ownership Takeover", "description": "In ADD.xyz V1, when the contract owner needs to transfer the ownership to another address, she could invoke the `changeOwner()` function with a `_newOwner` address. However, if the `_newOwner` is not the exact address of the new owner (e.g., due to a typo), nobody could own that contract anymore.", "severity": "Low", "contract": "Owned, AAVEInvest", "function": "changeOwner(), changeFeeOwner()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Redundant Fallback Function", "description": "Whether the contract has a redundant fallback function.", "severity": "Critical", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Overflows & Underflows", "description": "N/A", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-691"], "2": ["CWE-1265"]}, "title": "Reentrancy", "description": "Reentrancy [16] is an issue when code can call back into your contract and change state, such as withdrawing ETHs.", "severity": "Critical", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-284"]}, "title": "Money-Giving Bug", "description": "Whether the contract returns funds to an arbitrary address.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-664"], "2": ["CWE-404"], "3": ["CWE-772"], "4": ["CWE-401"]}, "title": "Blackhole", "description": "Whether the contract locks ETH indefinitely: merely in without out.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-862"]}, "title": "Unauthorized Self-Destruct", "description": "The finding 'Unauthorized Self-Destruct' was not found in the provided audit report fragments.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-284"], "2": ["CWE-749"]}, "title": "Revert DoS", "description": "A malicious or compromised module can disable all wallet modules and launch a Denial-of-Service (DoS) attack.", "severity": "Critical", "contract": "BaseWallet", "function": "authoriseModule", "lineNumber": "73-95"}, {"id": 9, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Unchecked External `Call`", "description": "The contract delegates calls to authorised DeFi modules without proper sanity checks, which can lead to unauthorised access.", "severity": "Low", "contract": "BaseWallet", "function": "enableStaticCall()", "lineNumber": "159-163"}, {"id": 10, "category": {"1": ["CWE-284"]}, "title": "Gasless `Send`", "description": "N/A", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-682"]}, "title": "Send Instead Of Transfer", "description": "Using `send` instead of `transfer` can lead to issues with token transfers due to certain ERC20 token contracts lacking return values in their `transfer` functions.", "severity": "Medium", "contract": "BaseModule", "function": "N/A", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-682"]}, "title": "Semantic Consistency Checks", "description": "Manually check the logic of implemented smart contracts and compare with the description in the white paper.", "severity": "Critical", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 13, "category": {"1": ["CWE-703"], "2": ["CWE-393"]}, "title": "Unsafe ERC20 transfer() Calls", "description": "In the `BaseWallet` contract, the `withdrawToOwner()` function allows privileged users to withdraw `_amount` of `_token` to the `owner`. The token transfers are conducted via ERC20-compatible transfer() calls. However, while calling `IERC20(_token).transfer()`, the `BaseWallet` contract fails to check the return value.", "severity": "Informational", "contract": "BaseWallet", "function": "withdrawToOwner()", "lineNumber": "64"}, {"id": 14, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-250"]}, "title": "Over-Privileged Operator in Tornado", "description": "The verifier contract has high privileges and is very important as it verifies the _proof which could verify the _recipient, the _relayer, etc.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}