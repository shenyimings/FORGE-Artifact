{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Atlendis.pdf",
    "project_info": {
        "url": "https://github.com/Atlendis/priv-contracts/tree/db7f5e1",
        "commit_hash": "db7f5e1",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "Proper Initialization Logic in BorrowerPools",
            "description": "Abuse of initializer() modifier in BorrowerPools contract's initialize function, which needs to be corrected by protecting subcalls with internal onlyInitializing() modifiers as recommended by Openzeppelin.",
            "severity": "Low",
            "contract": "BorrowerPools",
            "function": "initialize()",
            "lineNumber": "25"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "3.2 Proper Role Management in BorrowerPools",
            "description": "The `initialize()` function from the `BorrowerPools` contract does not explicitly grant the role admin of `POSITION_ROLE` to `GOVERNANCE_ROLE`, which may lead to unnecessary confusion and impact readability and maintenance.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect Amount Of Rewards Used in closePool()",
            "description": "The closePool() function does not compute the right token amount to withdraw from the underlying yield provider due to incorrect normalization of the remainingNormalizedLiquidityRewardsReserve, leading to an incorrect withdrawal amount.",
            "severity": "Medium",
            "contract": "PoolsController",
            "function": "closePool()",
            "lineNumber": "368"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "3.4 Improved Validation on Function Arguments",
            "description": "The `PoolsController` contract does not enforce borrower-specific pool management, which may lead to unexpected consequences.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Trust Issue of Admin Keys",
            "description": "In the Atlendis protocol, there are privileged accounts (with various roles) that play a critical role in governing and regulating system-wide operations.",
            "severity": "Medium",
            "contract": "PoolsController",
            "function": "allow()",
            "lineNumber": "298"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improved yieldProviderLiquidityRatio Update in BorrowerPools",
            "description": "The `pool.state.yieldProviderLiquidityRatio` is updated every time when the `collectFees()` routine is invoked, even the pool has available funds on several ticks, impacting fees collection for following ticks.",
            "severity": "Medium",
            "contract": "BorrowerPools",
            "function": "collectFees()",
            "lineNumber": "515-517"
        }
    ]
}