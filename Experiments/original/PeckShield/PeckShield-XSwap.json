{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-XSwap.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "N/A"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Missing Same Token Swapping Checks",
            "description": "If the admin accidentally sets the price of the same token, the trade() function would allow users to swap between two identical tokens.",
            "severity": "Informational",
            "contract": "contracts/USR.sol",
            "function": "trade()",
            "lineNumber": "62"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Potential Integer Overflow in trade()",
            "description": "In `trade()` , the `_inputAmount` is scaled up to a number with 18 decimal places before calculating the `_amountToUser`. Within the calculation, the amount of `_amountToUser` less than 1 `_output` token is removed. This causes a precision problem that more than enough `_input` tokens are taken to swap for the `_output` tokens.",
            "severity": "Informational",
            "contract": "contracts/XSwap.sol",
            "function": "trade()",
            "lineNumber": "75"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ],
                "4": [
                    "CWE-638"
                ],
                "5": [
                    "CWE-424"
                ],
                "6": [
                    "CWE-425"
                ]
            },
            "title": "Missing Owner Check in transferOwnership()",
            "description": "In the DSAuth contract, the transferOwnership() function does not validate the newOwner_ against the newOwner, which is a waste of gas.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Missing Assets Migration in setLendFMe()",
            "description": "The `setLendFMe()` function allows the authenticated user to change the `lendFMe` to a new address. However, the old address may have some states and digital assets belongs to the X-Swap contract which should be migrated to the new `lendFMe` before setting the global address to the new one.",
            "severity": "Low",
            "contract": "XSwap.sol",
            "function": "setLendFMe()",
            "lineNumber": "96"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Insufficient Approval in enableLending()",
            "description": "In `enableLending()` , an ERC20 `_token` is put in the list of assets for lending such that all the following `trade()` and `transferIn()` calls with `_token` will be supplied into LendFMe. However, in line 110, `allowance == 0` is checked before setting the maximum allowance.",
            "severity": "Low",
            "contract": "XSwap",
            "function": "enableLending()",
            "lineNumber": "110"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ],
                "3": [
                    "CWE-561"
                ]
            },
            "title": "Excessive Fallback Logic",
            "description": "Remove the `_fallback()` call.",
            "severity": "Informational",
            "contract": "BaseAdminUpgradeabilityProxy",
            "function": "ifAdmin()",
            "lineNumber": "34-40"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Business Logic Issue in trade()",
            "description": "When users call `trade()` with a `_output` token which is in `supportLending[]`, the amount of `_output` token inside LendFMe would be withdrew to complete the trading, but if LendFMe does not have enough amount withheld, the withdrawal simply reverts even when the `XSwap` contract has some token balance.",
            "severity": "Low",
            "contract": "contracts/XSwap.sol",
            "function": "trade()",
            "lineNumber": "81 and 85"
        }
    ]
}