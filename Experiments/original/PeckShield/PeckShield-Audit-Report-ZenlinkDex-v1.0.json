{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-ZenlinkDex-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/zenlinkpro/Zenlink-DEX-Module",
        "commit_hash": "c147a07",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improved Implementation Logic for MetaPool",
            "description": "The `MetaPool` and `BasePool` use the same implementation logic, which may cause issues as `LP` token of a `BasePool` is not a stablecoin.",
            "severity": "High",
            "contract": "zenlink-stable-amm/lib.rs",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Improved Sanity Checks Of System/Function Parameters",
            "description": "The remove_liquidity() function can benefit from additional sanity checks, specifically restricting input argument lp_amount to prevent users from removing liquidity with lp_amount set to 0, which is a waste of gas.",
            "severity": "Low",
            "contract": "zenlink-stable-amm",
            "function": "remove_liquidity()",
            "lineNumber": "484-500"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Revisited Logic in inner_remove_liquidity_imbalance()",
            "description": "The `Zenlink Stable AMM` provides a public `remove_liquidity_imbalance()` function for users to remove liquidity from a pool, but it has a possible precision loss source due to mixed uses of multiplication and division.",
            "severity": "Low",
            "contract": "zenlink-stable-amm",
            "function": "inner_remove_liquidity_imbalance()",
            "lineNumber": "1608-1612, 1236, 1240"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Trust Issue of Admin Keys",
            "description": "In `Zenlink Stable AMM`, there is a privileged account, i.e., `root`. This account plays a critical role in governing and regulating the system-wide operations.",
            "severity": "Medium",
            "contract": "zenlink-stable-amm/lib.rs",
            "function": "create_pool()",
            "lineNumber": "147-157"
        }
    ]
}