{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-Pandora-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/PandoraDigital/smart-contract/tree/b3b7db8",
        "commit_hash": "b3b7db8",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Timely Minting of Rewards Before Allocation/Rate Update",
            "description": "The reward pools can be dynamically added via `add()` and the weights of supported pools can be adjusted via `set()`. When analyzing the pool weight update routine `set()`, we notice the need of timely invoking `massUpdatePools()` to update the reward distribution before the new pool weight becomes effective.",
            "severity": "Low",
            "contract": "Farming, PSRStaking",
            "function": "set()",
            "lineNumber": "81-85"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Possible Randomness Perturbance in Random::computeSeed()",
            "description": "The `computeSeed()` function in the `Random` contract is vulnerable to perturbance due to the miner's capability of adjusting block timestamp, gaslimit, and other factors, which could greatly affect the generated seed.",
            "severity": "Low",
            "contract": "Random",
            "function": "computeSeed()",
            "lineNumber": "20-41"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Improved Sanity Checks For System Parameters",
            "description": "Corner cases may lead to undesirable consequences due to mis-configuration of system parameters such as createPandoBoxFee, which can bring high cost for protocol users and hurt the protocol adoption.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ]
            },
            "title": "Possible Sandwich/MEV For Reduced Returns",
            "description": "The `Pandora` protocol's token-swapping logic may be improved to prevent possible sandwich/MEV attacks for reduced returns.",
            "severity": "Medium",
            "contract": "Treasury",
            "function": "_swap()",
            "lineNumber": "224-238"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "System Fee Bypass With Direct safeTransferFrom()",
            "description": "The `NftMarket` contract allows buyers and sellers to bypass system fees by directly negotiating prices and using `safeTransferFrom()` instead of the `buy()` function, resulting in a loss of revenue for the admin wallet.",
            "severity": "Low",
            "contract": "NftMarket",
            "function": "buy()",
            "lineNumber": "289-293"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "Trust Issue of Admin Keys",
            "description": "In the Pandora protocol, there is a special administrative account, i.e., `owner`, which plays a critical role in governing and regulating system-wide operations but lacks proper governance structure.",
            "severity": "High",
            "contract": "Multiple Contracts",
            "function": "setMigrator() and migrate()",
            "lineNumber": "93-108"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Proper Withdrawal Logic in Farming",
            "description": "The withdrawAll() function calls the withdraw() function with an amount of 0 to withdraw all current deposits, but the withdraw() function does not interpret 0 as a full withdrawal, leading to inconsistency and potential confusion for farming users.",
            "severity": "Medium",
            "contract": "Multiple Contracts",
            "function": "withdraw() and withdrawAll()",
            "lineNumber": "238-241,164-181"
        }
    ]
}