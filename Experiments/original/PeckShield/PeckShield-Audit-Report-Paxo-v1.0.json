{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-Paxo-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/paxo-finance/paxo-protocol/tree/8847888",
        "commit_hash": "8847888",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Improper Approval to Drain Market Funds in CErc20",
            "description": "The increaseMarketAllowance function in CErc20 does not validate the input asset, which may be exploited to grant spend allowance to an untrusted address.",
            "severity": "Critical",
            "contract": "CErc20",
            "function": "increaseMarketAllowance()",
            "lineNumber": "304-306"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-665"
                ],
                "3": [
                    "CWE-908"
                ],
                "4": [
                    "CWE-457"
                ]
            },
            "title": "Uninitialized State Index DoS From Reward Activation",
            "description": "The `setCompSpeedInternal()` logic does not properly set up the default supply-side index and the default borrow-side index due to uninitialized state indexes, causing a denial-of-service (DoS) from reward activation.",
            "severity": "High",
            "contract": "Comptroller",
            "function": "setCompSpeedInternal()",
            "lineNumber": "1090"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "Suggested Adherence Of Checks-Effects-Interactions Pattern",
            "description": "A common coding best practice in Solidity is the adherence of `checks-effects-interactions` principle to mitigate re-entrancy attacks.",
            "severity": "Low",
            "contract": "Multiple Contracts",
            "function": "borrowFresh()",
            "lineNumber": "1022, 1027-1029"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Accommodation of Non-ERC20-Compliant Tokens",
            "description": "The `transfer` function does not comply with the ERC20 standard, as it does not revert the transaction when the balance check fails.",
            "severity": "Low",
            "contract": "Multiple Contracts",
            "function": "transfer()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Trust Issue of Admin Keys",
            "description": "In the Paxo protocol, there is a privileged `owner` account that plays a critical role in governing and regulating the system-wide operations.",
            "severity": "Medium",
            "contract": "Multiple Contracts",
            "function": "_supportBuy",
            "lineNumber": "1381-1390"
        }
    ]
}