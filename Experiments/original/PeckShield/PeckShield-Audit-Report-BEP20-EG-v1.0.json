{"path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-BEP20-EG-v1.0.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Revisited Logic of _validateIfLiquidityAdd()", "description": "The `_validateIfLiquidityAdd()` routine has a logic flaw allowing a bad actor to bypass the check and add liquidity even when not from the owner.", "severity": "Informational", "contract": "EG", "function": "_validateIfLiquidityAdd() / balanceOf()", "lineNumber": "205-222, 259-262"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Trust Issue of Admin Keys", "description": "In the `EG` token protocol, there is a special administrative account, i.e., `owner`. This `owner` account plays a critical role in governing and regulating the protocol-wide operations and has the privilege to control or govern the flow of assets managed by this protocol.", "severity": "Low", "contract": "EG", "function": "setImplementation() and addClientsToBlackList()", "lineNumber": "19-33"}]}