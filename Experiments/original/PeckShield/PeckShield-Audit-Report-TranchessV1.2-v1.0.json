{"path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-TranchessV1.2-v1.0.pdf", "project_info": {"url": "https://github.com/tranchess/contract-core.git", "commit_hash": "f557f5a", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Meaningful Events For Important States Change", "description": "In `Ethereum`, the `event` is an indispensable part of a contract and is mainly used to record a variety of runtime dynamics. In particular, when an `event` is emitted, it stores the arguments passed in transaction logs and these logs are made accessible to external analytics and reporting tools. Events can be emitted in a number of scenarios. One particular case is when system-wide parameters or settings are being changed. Another case is when tokens are being minted, transferred, or burned. In the following, we use the `PrimaryMarketV2` contract as an example. This contract is designed to create new markets for `Tranchess`. While examining the events that reflect the `PrimaryMarketV2` dynamics, we notice there is a lack of emitting important events that reflect important state changes. Specifically, when various fee parameters are being updated, there are no respective events being emitted to reflect the dynamics.", "severity": "Low", "contract": "PrimaryMarketV2", "function": "updateFundCap(), updateRedemptionFeeRate()", "lineNumber": "418-420"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Trust Issue of Admin Keys", "description": "In the Tranchess protocol, there is a privileged owner account that plays a critical role in governing and regulating the protocol-wide operations, which needs to be scrutinized.", "severity": "Medium", "contract": "Multiple Contracts", "function": ["updateFundCap()", "updateRedemptionFeeRate()"], "lineNumber": ["418-420", "422-423", "438-439"]}]}