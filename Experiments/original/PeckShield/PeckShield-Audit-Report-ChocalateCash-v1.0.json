{"path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-ChocalateCash-v1.0.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-691"], "2": ["CWE-1265"]}, "title": "Improved Reentrancy Protection in ContractGuard::onlyOneBlock()", "description": "The `checks-effects-interactions` principle is violated in the `onlyOneBlock()` modifier of `ContractGuard`, allowing potential re-entrancy attacks.", "severity": "Undetermined", "contract": "ContractGuard", "function": "onlyOneBlock()", "lineNumber": "24, 26-27"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Potential Overflow Mitigation in notifyRewardAmount()", "description": "The `rewardPerToken()` routine involves the multiplication of three `uint256` integers, which is possible for their multiplication to have an undesirable overflow, especially when the `rewardRate` is largely controlled by an external entity, i.e., `rewardDistribution` through the `notifyRewardAmount()` function.", "severity": "Medium", "contract": "Multiple Contracts", "function": "notifyRewardAmount()", "lineNumber": "61-67"}, {"id": 2, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Redundant Logic Removal in LLCUSDTLPTokenSharePool", "description": "The `LLCUSDTLPTokenSharePool` smart contract has redundant logic that can be safely removed, specifically a redundant check on the `referer` presence for the calling user in the `stake()` function.", "severity": "Low", "contract": "LLCUSDTLPTokenSharePool", "function": "stake()", "lineNumber": "106"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "Simplified Logic in getReward()", "description": "The `getReward()` routine has a modifier, i.e., `updateReward(` `msg` `.sender`)`, which timely updates the calling user's (earned) rewards in `rewards[` `msg` `.sender`]`. The current implementation logic can be further optimized.", "severity": "Low", "contract": "Multiple Contracts", "function": "getReward()", "lineNumber": "141-148"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Improved Logic in Router::swapAndAddLiquidity()", "description": "The approve() routine may have idiosyncrasies from current widely-used token contracts and requires reducing the allowance to 0 first before setting the proper allowance to mitigate the known approve()/transferFrom() race condition.", "severity": "Low", "contract": "Router", "function": "swapAndAddLiquidity()", "lineNumber": "31,35"}, {"id": 5, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Trust Issue of Admin Keys", "description": "In the `ChocolateCash` contract, there is a privileged `admin` account that plays a critical role in governing and regulating the system- wide operations.", "severity": "Medium", "contract": "ChocolateCash", "function": "executeTransaction()", "lineNumber": "175-185"}]}