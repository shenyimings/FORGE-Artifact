{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-USR.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "N/A"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Missing Address Validation in changeAdmin()",
            "description": "The `changeAdmin()` function in USRProxy allows the current admin to transfer her privileges to another address without proper validation of the new admin address.",
            "severity": "Medium",
            "contract": "USRProxy",
            "function": "changeAdmin()",
            "lineNumber": "105-109"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1061"
                ],
                "3": [
                    "CWE-766"
                ]
            },
            "title": "Wrong Function Types",
            "description": "The `initialize()` function in USR contract is not necessary a public function due to the fact that it is only called once in the `constructor`.",
            "severity": "Informational",
            "contract": "contracts/USR.sol",
            "function": "initialize()",
            "lineNumber": "69, 74"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-166"
                ]
            },
            "title": "Missing takeOut() Function",
            "description": "In the USR design document, the USR contract provides the `takeOut()` function for the manager to take out some tokens and transfer them to the receiver. However, `takeOut()` is not implemented in the code.",
            "severity": "Informational",
            "contract": "contracts/USR.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Excessive Return Statement in transferOut()",
            "description": "In USR contract, `transferout()` is designed to provide the token transfer function for other modules (e.g., DIP001). However, the function always returns `true` whether transfer succeed or not, which makes the return code meaningless.",
            "severity": "Informational",
            "contract": "contracts/USR.sol",
            "function": "transferOut()",
            "lineNumber": "145"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Gas Optimization in drip()",
            "description": "In USR contract, `drip()` updates `exchangeRate` and `lastTriggerTime` even in the condition of `now` `==` `lastTriggerTime`, which is a waste of gas.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-362"
                ]
            },
            "title": "approve()/transferFrom() Race Condition",
            "description": "There is a known race condition issue regarding approve()/transferFrom(). Specifically, when a user intends to reduce the allowed spending amount previously approved from, say, 10 USR to 1 USR.",
            "severity": "Low",
            "contract": "contracts/USR.sol",
            "function": "approve()",
            "lineNumber": "283-287"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Wrong Variable Name",
            "description": "In USR contract, `equity()` could be used to retrieve the current contract debts. However, the variable `_banance` for keeping the balance of USDx is spelled wrong.",
            "severity": "Informational",
            "contract": "contracts/USR.sol",
            "function": "equity()",
            "lineNumber": "294-300"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Flawed Fee Calculation",
            "description": "In `draw()` and exit(), originationFee is used to calculate the amount that the user needs to pay for management fee, but USR does not consider the time keeping the user\u2019s digital assets in fee calculation.",
            "severity": "Low",
            "contract": "contracts/USR.sol",
            "function": "draw() and exit()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Constructor Mismatch",
            "description": "Whether the contract name and its constructor are not identical to each other.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-282"
                ],
                "3": [
                    "CWE-708"
                ]
            },
            "title": "Ownership Takeover",
            "description": "In Ownable contract, the transferOwnership() function does not validate the _newOwner against the pendingOwner, which is a waste of gas.",
            "severity": "Informational",
            "contract": "Ownable",
            "function": "transferOwnership()",
            "lineNumber": "57-59"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Redundant Fallback Function",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Overflows & Underflows",
            "description": "Whether the contract has general overflow or underflow vulnerabilities",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "20, 21, 22, 23, 25"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-1265"
                ]
            },
            "title": "Reentrancy",
            "description": "Reentrancy is an issue when code can call back into your contract and change state, such as withdrawing ETHs.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "Money-Giving Bug",
            "description": "Whether the contract returns funds to an arbitrary address.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ],
                "4": [
                    "CWE-401"
                ]
            },
            "title": "Blackhole",
            "description": "Whether the contract locks ETH indefinitely: merely in without out.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "Unauthorized Self-Destruct",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}