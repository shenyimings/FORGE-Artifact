{"path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-Nearth-MasterStaker-v1.0.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Timely massUpdatePools During Pool Weight Changes", "description": "The `MasterStaker` contract's reward pool weight update routine `set()` requires timely invocation of `massUpdatePools()` to update the reward distribution before the new pool weight becomes effective.", "severity": "Medium", "contract": "MasterStaker", "function": "set()", "lineNumber": "189-200"}, {"id": 1, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Duplicate Pool Detection and Prevention", "description": "The addition of a new pool in `add()` function does not perform necessary sanity checks in preventing a new pool with a duplicate token from being added.", "severity": "Low", "contract": "MasterStaker", "function": "add()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Incompatibility With Deflationary/Rebasing Tokens", "description": "The MasterStaker contract is incompatible with deflationary/rebasing tokens due to its assumption that internal asset balances are consistent with actual token balances maintained in individual ERC20 token contracts.", "severity": "Low", "contract": "MasterStaker", "function": "depositERC20()", "lineNumber": "297-313"}, {"id": 3, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Trust Issue Of Admin Keys", "description": "In the `MasterStaker` contract, there is a privileged `owner` account that plays a critical role in governing and regulating the protocol-wide operations.", "severity": "Medium", "contract": "MasterStaker", "function": "setMigrator()", "lineNumber": "203-207"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Recommended Explicit Pool Validity Checks", "description": "The current implementation relies on implicit bound-checks of arrays to ensure pool index stays within array range. It is recommended to introduce explicit sanity checks by introducing a new modifier, say validatePool, to ensure given _pool_id or _pid indeed points to a valid, live pool.", "severity": "N/A", "contract": "MasterStaker", "function": "depositERC20()", "lineNumber": "297-307"}]}