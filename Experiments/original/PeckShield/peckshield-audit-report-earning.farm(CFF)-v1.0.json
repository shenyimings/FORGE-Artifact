{
    "path": "./Audit_Reports_2024/PeckShield/peckshield-audit-report-earning.farm(CFF)-v1.0.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "N/A"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incompatibility With Deflationary Tokens in CRVExchange::handleExtraToken()",
            "description": "The `CRVExchange::handleExtraToken()` function sells `CRV` with specified DEXs and paths through `swapExactTokensForTokens()`. It swaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path.",
            "severity": "Low",
            "contract": "CRVExchange",
            "function": "handleExtraToken()",
            "lineNumber": "43-61"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-393"
                ]
            },
            "title": "Unsafe ERC20 transfer() Calls",
            "description": "The earning.farm protocol pools together users\u2019 assets and deposits them into Curve to earn CRV token. The earn_crv() function in the IUSDCPoolBase contract will be called at least every 24 hours to harvest CRV and transfer them to the controller. This function will call handleExtraToken() to sell the tokens. However, while calling IERC20(_token).transferFrom(), the CRVExchange contract fails to check the return value as shown in line 61 below.",
            "severity": "Informational",
            "contract": "CRVExchange",
            "function": "handleExtraToken()",
            "lineNumber": "61"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "Non-Governance-Based Admin of TimeLock And Related Privileges",
            "description": "In earning.farm protocol, the owner of `CFController` contract has critical roles in configuring parameters and withdrawing tokens without governance-based administration.",
            "severity": "Informational",
            "contract": "CFController",
            "function": [
                "pauseAndTransferTo()",
                "changeFeePool()"
            ],
            "lineNumber": "434-443, 445-447"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-282"
                ],
                "3": [
                    "CWE-708"
                ]
            },
            "title": "Unsafe Ownership Transition",
            "description": "In earning.farm, the `Ownable` contract is widely used for ownership management many contracts such as `CFETHController`, `CFController`, etc. When the contract owner needs to transfer the ownership to another address, she could invoke the `transferOwnership()` function with a `newOwner` address.",
            "severity": "Low",
            "contract": "Ownable",
            "function": "transferOwnership()",
            "lineNumber": "36-44"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Unsafe Minout Parameter in CRVExchange::handleExtraToken()",
            "description": "The `amountOutMin` parameter of `swapExactTokensForTokens()` is set to an unsafe value, which may cause the transaction to revert.",
            "severity": "Medium",
            "contract": "CRVExchange",
            "function": "handleExtraToken()",
            "lineNumber": "N/A"
        }
    ]
}