{"path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-TranchessV2-v1.0.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "Improved Logic in SwapReward::updateReward()", "description": "The update logic in SwapReward contract's updateReward function can be improved to accommodate different configurations.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "Revisited Logic in InterestRateBallot::syncWithVotingEscrow()", "description": "The current implementation of syncWithVotingEscrow() function can be improved as it simply returns when the user does not have any locked balance, and there is a need to continue the execution to reset the voter amount.", "severity": "Low", "contract": "InterestRateBallot", "function": "syncWithVotingEscrow()", "lineNumber": "122-125"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Revisited Reentrancy Protection in VestingEscrow", "description": "The protocol has taken into consideration re-entrancy protection in current contracts, but unnecessary use of nonReentrant modifier is identified in VestingEscrow::claim() function.", "severity": "Informational", "contract": "VestingEscrow", "function": "claim()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Redundant State/Code Removal", "description": "The `FundV3` smart contract has unused code or unnecessary redundancies that can be safely removed, including events that are defined but not used.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Consistent Fee Calculation in StableSwap", "description": "Inconsistent fee calculation in getQuoteOut()/getQuoteIn() functions, where the first function computes the fee on the output token and the second function computes the fee on the input token.", "severity": "Informational", "contract": "StableSwap", "function": "getQuoteOut()/getQuoteIn()", "lineNumber": "181-205"}, {"id": 5, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Trust Issue of Admin Keys", "description": "In the TranchessV2 protocol, there is a privileged owner account that plays a critical role in governing and regulating the protocol-wide operations, having the privilege to control or govern the flow of assets managed by this protocol.", "severity": "Medium", "contract": "TranchessV2", "function": "_updateFundCap, updateFundCap, _updateRedemptionFeeRate", "lineNumber": "569-572, 574-576, 578-579"}]}