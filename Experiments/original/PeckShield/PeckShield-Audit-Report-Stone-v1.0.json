{"path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-Stone-v1.0.pdf", "project_info": {"url": "N/A", "commit_hash": "fcb4d854a1e4fd7f11f32d29c59fbe69f562a029", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-691"], "2": ["CWE-1265"]}, "title": "Reentrancy Risk in yVault", "description": "The `checks-effects-interactions` principle is violated in the `deposit()` function of the `yVault` contract, making it vulnerable to re-entrancy attacks.", "severity": "Informational", "contract": "yVault", "function": "deposit()", "lineNumber": "77"}, {"id": 1, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Incompatibility with Deflationary/Rebasing Tokens", "description": "The yVault contract does not properly handle deflationary/rebasing tokens, which may cause inconsistent internal asset balances and actual token balances.", "severity": "Informational", "contract": "yVault", "function": ["deposit()", "earn()", "depositAll()"], "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Possible Costly yVault LPs From Improper Liquidity Initialization", "description": "The `deposit()` function may cause the pool token to become extremely expensive or even result in losses for later depositors due to improper liquidity initialization, especially when the pool is being initialized under the assumption that the current pool is empty.", "severity": "Medium", "contract": "Vault", "function": "deposit()", "lineNumber": "74-80"}, {"id": 3, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-862"]}, "title": "Suggested Governance-Restricted earn()", "description": "In the `Stone` protocol, a public function `earn()` can be invoked by anyone to kick off the investment, which has been exploited in recent incidents and needs to be restricted to trusted entities.", "severity": "Medium", "contract": "yVault", "function": "earn()", "lineNumber": "64-68"}, {"id": 4, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Potential Front-Running/MEV With Reduced Buyback", "description": "The strategist or governance can call harvest() that basically collects any pending rewards and swaps them to the designated 'want' for the next round of investment.", "severity": "Low", "contract": "Strategies", "function": "harvest()", "lineNumber": "128-145"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Improved Sanity Checks For System Parameters", "description": "The update logic on fee parameters can be improved by applying more rigorous sanity checks to prevent corner cases.", "severity": "Low", "contract": "StrategyDForceUSDC", "function": ["setWithdrawalFee()", "setPerformanceFee()"], "lineNumber": "53-61"}, {"id": 6, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Improved Asset Consistency Among Vaults, Controller, and Strategies", "description": "In the Stone protocol, there is a one-to-one mapping between a vault and its strategy. To properly link a vault with its strategy, it is natural for the two to operate on the same underlying asset. However, if we examine the constructor of various strategy contracts (e.g., StrategyDForceUSDC and StrategyDForceUSDT), the requirement of having the same underlying asset is not enforced.", "severity": "Low", "contract": "Controller", "function": "setStrategy()", "lineNumber": "98"}, {"id": 7, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Revisited Assumption on Trusted Governance", "description": "The governance account has critical privilege to control system-wide operations but lacks a DAO-like structure, making it vulnerable to compromise and potential theft of funds.", "severity": "Medium", "contract": "Vault, Controller", "function": "N/A", "lineNumber": "N/A"}]}