{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-Swing-v1.2.pdf",
    "project_info": {
        "url": "https://github.com/polkaswitch/AggregatorContracts/tree/8ed20a",
        "commit_hash": "8ed20a",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Accommodation Of Non-ERC20-Compliant Tokens",
            "description": "The finding examines the approve() routine and analyzes possible idiosyncrasies from current widely-used token contracts. It highlights a requirement to reduce the allowance to 0 first before setting the proper allowance, mitigating the known approve()/transferFrom() race condition.",
            "severity": "Informational",
            "contract": "Multiple contracts",
            "function": "approve()",
            "lineNumber": "194-195"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Revisited Implementation Logic in SwitchNxtp::setTransactionManager()",
            "description": "The `SwitchNxtp` contract provides an external `setTransactionManager()` function for the privileged `owner` account to change the `transactionManagerAddress`. While reviewing its logic, we notice the current implementation needs to be revisited.",
            "severity": "Low",
            "contract": "SwitchNxtp",
            "function": "setTransactionManager()",
            "lineNumber": "66-68"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-400"
                ],
                "3": [
                    "CWE-405"
                ]
            },
            "title": "Lack of Slippage Control In Switch",
            "description": "The `swapByNxtp()` function of the `SwitchNxtp` contract lacks slippage control, which opens up the possibility for front-running and potentially results in a smaller `returnAmount`.",
            "severity": "Medium",
            "contract": "Multiple contracts (SwitchNxtp, SwitchStargateSender, SwitchStargateReceiver, SwitchCelerReceiver)",
            "function": "swapByNxtp()",
            "lineNumber": "131"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Improved Sanity Checks in SwitchCelerSender::swapByCeler()",
            "description": "The `swapByCeler()` function in the `SwitchCelerSender` contract lacks sanity checks for the input argument `transferArgs.srcSwap.dstToken`. If the given `transferArgs.srcSwap.dstToken` is the native token, the `MessageSenderLib.sendMessageWithTransfer()` execution will revert.",
            "severity": "Low",
            "contract": "SwitchCelerSender",
            "function": "swapByCeler()",
            "lineNumber": "335-346"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect Implementation Logic in executeMessageWithTransfer()",
            "description": "The `executeMessageWithTransfer()` handler of the `SwitchCelerDepositReceiver` contract has incorrect implementation logic, resulting in an incorrect native token amount being transferred if `_token` is the native token.",
            "severity": "Low",
            "contract": "SwitchCelerDepositReceiver",
            "function": "executeMessageWithTransfer()",
            "lineNumber": "114"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Trust Issue of Admin Keys",
            "description": "In the `Swing` protocol, there is a privileged `owner` account that plays a critical role in governing and regulating the system- wide operations (e.g., parameter setting and owner adjustment). It also has the privilege to control or govern the flow of assets managed by this protocol.",
            "severity": "Medium",
            "contract": "SwitchCelerSender",
            "function": [
                "setCelerMessageBus",
                "cBridgeSet",
                "setPriceTracker",
                "setExecutorFee"
            ],
            "lineNumber": "151-164"
        }
    ]
}