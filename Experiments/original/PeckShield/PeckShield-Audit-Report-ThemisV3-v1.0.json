{
    "path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-ThemisV3-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/Themis-protocol/audit-contract/tree/ee75e720ea34ddc4de3290a43965fd1fdd85a92b",
        "commit_hash": "ee75e720ea34ddc4de3290a43965fd1fdd85a92b",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Improper Design For ThemisEarlyFarmingNFT(ERC721) Transfer",
            "description": "In the `ThemisEarlyFarming` protocol, the improper implementation of `safeTransferFrom()` function in `ThemisEarlyFarmingNFT` contract may cause unexpected state inconsistencies between the `ThemisEarlyFarming` and `ThemisEarlyFarmingNFT` contracts, leading to withdrawal failure for the `NFT` corresponding deposit.",
            "severity": "High",
            "contract": "ThemisEarlyFarmingNFT",
            "function": "safeTransferFrom()",
            "lineNumber": "169"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-400"
                ],
                "3": [
                    "CWE-405"
                ],
                "4": [
                    "CWE-1050"
                ]
            },
            "title": "Timely Update Pool Reward During Pool Weight Changes",
            "description": "The `setPeriodAllocPoint()` function in `ThemisEarlyFarming` contract does not timely invoke `_updatePeriodRewardShare()` for all staking pools when updating pool weights, leading to unfair reward distribution and potential hidden pools claiming unreasonable shares of rewarded tokens.",
            "severity": "Medium",
            "contract": "ThemisEarlyFarming",
            "function": "setPeriodAllocPoint()",
            "lineNumber": "121-133"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Potential DoS In ThemisAuction::doAuction()",
            "description": "The doAuction() function is exposed to potential Denial of Service (DoS) risks due to the implementation of _payToken.safeTransfer() which can be exploited if the _payToken faithfully implements the ERC777-like standard.",
            "severity": "Low",
            "contract": "ThemisAuction",
            "function": "doAuction()",
            "lineNumber": "167"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improper Borrow Interest Calculation In userReturn()",
            "description": "The borrowed interests calculation needs to be improved in the `userReturn()` function of the `ThemisBorrowCompound` contract, as `_borrowPool.globalBowShare` is not updated to the latest before calculating the borrowed interests.",
            "severity": "High",
            "contract": "ThemisBorrowCompound",
            "function": "userReturn()",
            "lineNumber": "244"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improper Logic Of settlementBorrow()",
            "description": "The settlementBorrow() function has an improper implementation where borrower related information is removed twice, during the call to transferToAuction() and again in the settlementBorrow() function.",
            "severity": "Medium",
            "contract": "ThemisBorrowCompound",
            "function": "settlementBorrow()",
            "lineNumber": "373-396"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Duplicate Pool Detection and Prevention",
            "description": "The `addPool()` function does not perform necessary sanity checks to prevent a new pool with a duplicate token from being added.",
            "severity": "Low",
            "contract": "ThemisLendCompound",
            "function": "addPool()",
            "lineNumber": "105"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incompatibility With Deflationary/Rebasing Tokens",
            "description": "The `ThemisLendCompound` contract does not account for deflationary/rebasing tokens which can cause inconsistencies in asset balances, affecting portfolio management and protocol operation.",
            "severity": "Low",
            "contract": "ThemisLendCompound",
            "function": "userLend()",
            "lineNumber": "144-150"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Trust Issue Of Admin Keys",
            "description": "In the Themis V3 protocol, there is a privileged `_governance` account that plays a critical role in governing and regulating the protocol-wide operations.",
            "severity": "Medium",
            "contract": "Multiple Contracts",
            "function": [
                "setThemisEarlyFarmingNFT()",
                "transferLendPoolReward()",
                "setSpecial721BorrowRate()",
                "abortiveAuction()"
            ],
            "lineNumber": [
                "85-87",
                "89-91",
                "133",
                "238-240"
            ]
        }
    ]
}