{"path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-PegasusDollar-v1.0.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "Improper Calculation Of getBurnableDollarLeft()", "description": "In the `Pegasus Dollar` protocol, the `getBurnableDollarLeft()` function calculates the burnable dollar left incorrectly using the spot price `dollarPrice`, instead of `getBondDiscountRate()`. ", "severity": "Medium", "contract": "Treasury", "function": "getBurnableDollarLeft()", "lineNumber": "1028-1031"}, {"id": 1, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Improved Logic On bond::burnFrom() And boardroom::_sacrificeReward()", "description": "Unnecessary logic removal from PBond contract's burnFrom() function and Boardroom contract's _sacrificeReward() function", "severity": "Low", "contract": "PBond & Boardroom", "function": "burnFrom() & _sacrificeReward()", "lineNumber": "906-916, 803"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Proper pSharePerSecond Calculation In PShareRewardPool", "description": "The `pSharePerSecond` parameter is initialized with an incorrect value due to mismatched `runningTime` used for calculation.", "severity": "Medium", "contract": "PShareRewardPool", "function": "N/A", "lineNumber": "847"}, {"id": 3, "category": {"1": ["CWE-707"], "2": ["CWE-228"], "3": ["CWE-229"], "4": ["CWE-232"]}, "title": "Accommodation Of Non-ERC20-Compliant Tokens", "description": "The transfer function does not follow the ERC20 standard specification and may cause issues if not handled properly.", "severity": "Low", "contract": "Multiple Contracts", "function": "transfer()", "lineNumber": "923"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Generation Of Meaningful Events Upon Protocol Parameters", "description": "In Ethereum, events are used to record runtime dynamics and are accessible to external analytics tools. However, there is a lack of emitting important events that reflect important state changes, such as when protocol-wide parameters or settings are being changed.", "severity": "Low", "contract": "Treasury", "function": "setMaxDiscountRate()", "lineNumber": "1230"}, {"id": 5, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Trust Issue Of Admin Keys", "description": "In the `Pegasus Dollar` protocol, there exist certain privileged accounts that play critical roles in governing and regulating the protocol- wide operations.", "severity": "Medium", "contract": "Multiple contracts", "function": "boardroomSetOperator, boardroomSetReserveFund, boardroomSetLockUp", "lineNumber": "1461-1469"}, {"id": 6, "category": {"1": ["CWE-682"]}, "title": "Revisited Logic on allocateSeigniorage()/getDollarExpansionRate()", "description": "The function `allocateSeigniorage()` in the `Treasury` contract uses the spot price instead of TWAP price, which can be manipulated to influence the reserve adjustment.", "severity": "High", "contract": "Treasury", "function": "allocateSeigniorage()", "lineNumber": "1398-1400"}, {"id": 7, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1287"]}, "title": "Staking Incompatibility With Deflationary Tokens", "description": "In the Pegasus Dollar protocol, the PShareRewardPool contract is designed to take users\u2019 assets and deliver rewards depending on their share. However, it may have issues with deflationary tokens.", "severity": "Undetermined", "contract": "PShareRewardPool", "function": "deposit() and withdraw()", "lineNumber": "1071-1084"}]}