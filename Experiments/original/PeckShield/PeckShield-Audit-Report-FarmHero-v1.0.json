{"path": "./Audit_Reports_2024/PeckShield/PeckShield-Audit-Report-FarmHero-v1.0.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1287"]}, "title": "Accommodation of Non-ERC20-Compliant Tokens", "description": "The `transfer` function does not comply with ERC20 standard and may cause issues if not handled properly.", "severity": "Low", "contract": "Multiple Contracts", "function": "transfer()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Suggested Adherence Of Checks-Effects-Interactions Pattern", "description": "The adherence of `checks-effects-interactions` principle is effective in mitigating a serious attack vector known as `re-entrancy`. A violation of this principle was found in the `withdarwReard()` function.", "severity": "Low", "contract": "Playerbook", "function": "withdarwReard()", "lineNumber": "398"}, {"id": 2, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Timely massUpdatePools During Pool Weight Changes", "description": "The `set()` function does not timely invoke `massUpdatePools()` to update the reward distribution before the new pool weight becomes effective, which may lead to unfair reward distribution.", "severity": "Low", "contract": "HeroFarmV3", "function": "set()", "lineNumber": "185-199"}, {"id": 3, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Proper Withdraw Fee Collection in withdraw()", "description": "The current implementation collects the withdraw fee as long as one condition is satisfied, but it requires both conditions to be met at the same time.", "severity": "Medium", "contract": "HeroFarmV3", "function": "withdraw()", "lineNumber": "647"}, {"id": 4, "category": {"1": ["CWE-664"], "2": ["CWE-372"]}, "title": "Proper Share Accounting in emergencyWithdrawNFT()", "description": "The `emergencyWithdrawNFT` function fails to properly record internal states including user shares, rewardDebt, and gracePeriod.", "severity": "High", "contract": "HeroFarmV3", "function": "emergencyWithdrawNFT()", "lineNumber": "782-784"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Improved Sanity Checks For System Parameters", "description": "DeFi protocols typically have a number of system-wide parameters that can be dynamically configured on demand.", "severity": "Low", "contract": "HeroFarmV3", "function": "setRates()", "lineNumber": "883"}, {"id": 6, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-354"]}, "title": "Improved Logic in inCaseTokensGetStuck()", "description": "The function `inCaseTokensGetStuck()` only validates the input token is not the `HERO` token and fails to ensure the token should not be any staked pool token, which may put staked funds from participating users at risk.", "severity": "High", "contract": "HeroFarmV3", "function": "inCaseTokensGetStuck()", "lineNumber": "797-803"}, {"id": 7, "category": {"1": ["CWE-284"]}, "title": "Possible Sandwich/MEV Attacks For Reduced Returns", "description": "The `StratX2_HERO_QuickV2` contract's `_safeSwap()` function is vulnerable to possible front-running attacks due to lack of restriction on slippage, resulting in a smaller gain for the trading user.", "severity": "Low", "contract": "StratX2_HERO_QuickV2", "function": "_safeSwap()", "lineNumber": "2623-2643"}]}