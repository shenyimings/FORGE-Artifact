{"path": "./Audit_Reports_2024/Trail_of_Bits/2022-10-GSquared-securityreview.pdf", "project_info": {"url": "https://github.com/groLabs/GSquared", "commit_hash": "b0cf03fa18b4549bd85c571c00e18ddf3218de59", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Unbounded loop can cause denial of service", "description": "Under certain conditions, the withdrawal code will loop, permanently blocking users from getting their funds.", "severity": "High", "contract": "GVault", "function": "beforeWithdraw()", "lineNumber": "648-662"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"]}, "title": "Lack of two-step process for contract ownership changes", "description": "The owner can change contract ownership without a two-step verification process, which may lead to unauthorized or unintended changes.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Non-zero token balances in the GRouter can be stolen", "description": "A non-zero balance of 3CRV, DAI, USDC, or USDT in the router contract can be stolen by an attacker.", "severity": "Informational", "contract": "GRouter", "function": "withdrawFromTrancheForCaller", "lineNumber": "421-468"}, {"id": 3, "category": {"1": ["CWE-697"]}, "title": "Uninformative implementation of maxDeposit and maxMint from EIP-4626", "description": "The current implementation of `maxDeposit` and `maxMint` does not provide any valuable information to the user and may lead to faulty integrations with third-party systems.", "severity": "Informational", "contract": "GVault", "function": ["maxDeposit", "maxMint"], "lineNumber": "294-301,315-318"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "moveStrategy runs out of gas for large inputs", "description": "The loop in the moveStrategy function will never finish without running out of gas if a large number of steps is used.", "severity": "N/A", "contract": "GVault/StrategyQueue", "function": "move/moveStrategy", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-693"], "2": ["CWE-807"]}, "title": "GVault withdrawals from ConvexStrategy are vulnerable to sandwich attacks", "description": "The withdraw function of ConvexStrategy contract is vulnerable to sandwich attacks because it does not specify a minimum-amount-out value.", "severity": "High", "contract": "ConvexStrategy", "function": "withdraw()", "lineNumber": "771-784"}, {"id": 6, "category": {"1": ["CWE-682"]}, "title": "7. Stop loss primer cannot be deactivated", "description": "The stop loss primer cannot be deactivated because the keeper contract uses the incorrect function to check whether or not the meta pool has become healthy again.", "severity": "Medium", "contract": "GStrategyResolver", "function": "taskStopStopLossPrimer()", "lineNumber": "46-58"}, {"id": 7, "category": {"1": ["CWE-682"]}, "title": "getYieldTokenAmount uses convertToAssets instead of convertToShares", "description": "The `getYieldTokenAmount` function does not properly convert a 3CRV token amount into a G3CRV token amount, which may allow a user to withdraw more or less than expected or lead to imbalanced tranches after a migration.", "severity": "Medium", "contract": "GTranche", "function": "getYieldTokenAmount", "lineNumber": "169-175"}, {"id": 8, "category": {"1": ["CWE-682"]}, "title": "convertToShares can be manipulated to block deposits", "description": "The convertToShares function can be exploited to prevent deposits by manipulating its return value.", "severity": "High", "contract": "GVault", "function": "convertToShares()", "lineNumber": "396-404"}, {"id": 9, "category": {"1": ["CWE-703"]}, "title": "Harvest operation could be blocked if eligibility check on a strategy reverts", "description": "During harvest, if any of the strategies in the queue were to revert, it would prevent the loop from reaching the end of the queue and also block the entire harvest operation.", "severity": "Denial of Service", "contract": "GStrategyGuard", "function": "harvest()", "lineNumber": "317-319"}, {"id": 10, "category": {"1": ["CWE-682"]}, "title": "Incorrect rounding direction in GVault", "description": "Integer division before multiplication might truncate, causing loss of precision. This can lead to a function favoring the user instead of the protocol.", "severity": "N/A", "contract": "GVault", "function": "withdraw()", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-682"]}, "title": "Protocol migration is vulnerable to front-running and a loss of funds", "description": "The migration from Gro protocol to GSquared protocol is vulnerable to being front-run with a share price manipulation attack, which may lead to a significant loss of funds.", "severity": "Critical", "contract": "GVault", "function": "N/A", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-682"]}, "title": "Incorrect Slippage Calculation During Strategy Investments and Divestitures", "description": "The incorrect arithmetic calculation for slippage tolerance during strategy investments and divestitures can lead to an increased rate of failed profit-and-loss (PnL) reports and withdrawals.", "severity": "Medium", "contract": "ConvexStrategy", "function": ["invest", "divest"], "lineNumber": "1170-1174"}, {"id": 13, "category": {"1": ["CWE-682"], "2": ["CWE-369"]}, "title": "Potential division by zero in _calcTrancheValue", "description": "Junior tranche withdrawals may fail due to an unexpected division by zero error.", "severity": "Informational", "contract": "GTranche.sol", "function": "_calcTrancheValue()", "lineNumber": "559-568"}, {"id": 14, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Token withdrawals from GTranche are sent to the incorrect address", "description": "In the withdraw function of GTranche, token withdrawals are performed by the GRouter contract on behalf of the user, but a direct call to GTranche.withdraw by a user could lead to unexpected consequences.", "severity": "Informational", "contract": "GTranche", "function": "withdraw()", "lineNumber": "L219-259"}, {"id": 15, "category": {"1": ["CWE-682"]}, "title": "Solidity compiler optimizations can be problematic", "description": "A latent or future bug in Solidity compiler optimizations causes a security vulnerability in the GSquared Protocol contracts.", "severity": "N/A", "contract": "GSquared Protocol", "function": "N/A", "lineNumber": "N/A"}]}