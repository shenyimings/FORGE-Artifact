{
    "path": "./Audit_Reports_2024/Trail_of_Bits/2023-03-atlendis-atlendissmartcontracts-securityreview.pdf",
    "project_info": {
        "url": "https://github.com/Atlendis/priv-contracts-v2",
        "commit_hash": "19634e2ccae22e35634f336d2acd7f48d1647ea9",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Borrower can drain lender assets by withdrawing the cancellationFee multiple times",
            "description": "The borrower can drain the assets deposited by lenders by withdrawing his cancellation fee multiple times if a loan product is canceled by governance and the cancellation fee that the borrower is able to withdraw is non-zero.",
            "severity": "High",
            "contract": "LoanBorrower.sol",
            "function": "withdrawRemainingEscrow()",
            "lineNumber": "77-80"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect fee calculation on withdrawal can lead to DoS of withdrawals or loss of assets",
            "description": "Incorrect fee calculation in the `withdraw` function of the `LoanLender` contract can lead to inflated fees if the asset used does not have 18 decimals of precision.",
            "severity": "High",
            "contract": "LoanLender",
            "function": "withdraw()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-170"
                ]
            },
            "title": "Lack of zero-address checks",
            "description": "N/A",
            "severity": "N/A",
            "contract": "LoanLogic",
            "function": "N/A",
            "lineNumber": "268"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Problematic approach to data validation",
            "description": "The codebase uses a problematic approach to data validation which can lead to potential security issues.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Borrower can skip the last coupon payment",
            "description": "The borrower can repay the principal and transition the loan to the 'REPAID' state, allowing them to keep the last coupon payment for themselves.",
            "severity": "High",
            "contract": "LoanLogic.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-923"
                ],
                "3": [
                    "CWE-300"
                ]
            },
            "title": "Initialization functions can be front-run",
            "description": "The `initialize` function of the `FactoryRegistry` contract is vulnerable to front-running by an attacker who can monitor the public mempool and send their own transaction with a higher gas cost, calling the `initialize` function with their controlled address.",
            "severity": "Informational",
            "contract": "FactoryRegistry",
            "function": "initialize()",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Lenders' unborrowed deposits can be locked up by a borrower",
            "description": "A borrower can front-run a lender's detachment transaction and prevent them from withdrawing some or all of their assets, effectively locking up the lender's unborrowed deposits.",
            "severity": "High",
            "contract": "N/A",
            "function": "deposit()",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-400"
                ],
                "3": [
                    "CWE-770"
                ]
            },
            "title": "optOut can be called multiple times",
            "description": "Lenders are allowed to trigger an opt out operation multiple times over the same loan, with unclear implications.",
            "severity": "High",
            "contract": "TickLogic.sol",
            "function": "validateOptOut",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Risks related to deflationary, inflationary, or rebasing tokens",
            "description": "Deflationary tokens can lead to unexpected behavior if fees are taken during transfer and transferFrom functions.",
            "severity": "Medium",
            "contract": "N/A",
            "function": [
                "transfer()",
                "transferFrom()"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Rounding down when computing fees benefits users",
            "description": "Fees are computed using an incorrect rounding direction that reduces the amount collected by the protocol.",
            "severity": "Low",
            "contract": "LoanBorrower, RCLBorrowers",
            "function": "borrow()",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ]
            },
            "title": "Lenders can prevent each other from earning interest",
            "description": "A lender can front-run another lender's deposit or rate update transaction to prevent them from earning interest.",
            "severity": "High",
            "contract": "TickLogic.sol",
            "function": "deposit() and updateRate()",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect calculation in getPositionRepartition can lock a user\u2019s position",
            "description": "The getPositionRepartition function has incorrect calculations that can cause a user's position to be locked.",
            "severity": "High",
            "contract": "TickLogic.sol",
            "function": "getPositionRepartition()",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Detached positions are incorrectly calculated",
            "description": "When fees are registered, the difference between a detached position\u2019s adjusted amount and the detached amount borrowed are now registered as accruals.",
            "severity": "N/A",
            "contract": "TickLogic",
            "function": "getPositionRepartition",
            "lineNumber": "126-140"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Borrower can reduce lender accruals",
            "description": "A borrower can reduce the accrued interest of lenders by borrowing a smaller amount of assets multiple times.",
            "severity": "Medium",
            "contract": "TickLogic.sol",
            "function": "N/A",
            "lineNumber": "955-959"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Borrower can start a lending cycle before deposits are made",
            "description": "A borrower can initiate a lending cycle before lenders make their deposits, allowing them to front-run and gain an unfair advantage.",
            "severity": "High",
            "contract": "LoanBorrower",
            "function": "borrow()",
            "lineNumber": "N/A"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1059"
                ]
            },
            "title": "Documentation and naming conventions can be improved",
            "description": "Improve documentation and naming conventions across the codebase to increase readability and maintainability.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}