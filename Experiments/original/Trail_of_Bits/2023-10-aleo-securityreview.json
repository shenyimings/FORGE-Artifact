{"path": "./Audit_Reports_2024/Trail_of_Bits/2023-10-aleo-securityreview.pdf", "project_info": {"url": "https://github.com/AleoHQ/snarkVM/tree/testnet3-audit-tob", "commit_hash": "9fcb15fc501ae9734b1a8fe513b90a2e8f9cda5f", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Potential block reward truncation and overflow", "description": "The result of `block_reward + coinbase_reward / 2` can overflow and lead to a smaller than expected block reward.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "20-34"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Saturated additions and subtractions can cause inconsistencies", "description": "If an addition saturates, subsequent subtractions can cause the count to hit zero while outbound puzzle requests are still outstanding, leading to incorrect results.", "severity": "Unresolved", "contract": "cache.rs", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "IndexSet::remove does not preserve the order of the IndexSet", "description": "The `IndexSet::remove` function changes the order of the index set, which might result in an unintended order of the index sets.", "severity": "Informational", "contract": "N/A", "function": "remove_certificate", "lineNumber": "677-680"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "The batch certificate ID calculation does not include the number of signatures in the preimage", "description": "In the compute_batch_id function of BatchHeader, the batch certificate ID calculation does not include the number of signatures in the preimage.", "severity": "Informational", "contract": "BatchHeader", "function": "compute_batch_id", "lineNumber": "L150-L166"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Missing validations in block metadata and header validation functions", "description": "The block header validation function is missing a non-zero validation for the `solutions_root` field element.", "severity": "Unresolved", "contract": "N/A", "function": "header validation functions", "lineNumber": "89-113"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Denial-of-service vectors in FromBytes implementations", "description": "Several implementations of the `FromBytes::read_le` function use an unvalidated number of elements to allocate a vector with the `Vec::with_capacity` function, allowing an attacker to crash the application if the binary architecture is 32 bits.", "severity": "Low", "contract": "N/A", "function": "FromBytes::read_le", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Faulty validation enables more than the intended number of inputs on finalize commands", "description": "The `add_input` functions for the `FinalizeCore` and `ClosureCore` structures allow one element to be inserted above the `N::MAX_INPUTS` value due to an off-by-one error in the inequality.", "severity": "Informational", "contract": "synthesizer/program/src/{finalize/mod.rs, closure/mod.rs}", "function": "add_input()", "lineNumber": "79\u201386"}, {"id": 7, "category": {"1": ["CWE-682"]}, "title": "Parsing differences between the aleo.abnf grammar and the implementation", "description": "Several differences were identified between the formal grammar in the `aleo.abnf` file and the Rust implementation.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Function, closure, and finalize deserialization routines allow large memory allocations", "description": "The function, closure, and finalize deserialization routines do not validate the number of input and output objects described in the serialized data, allowing an attacker to use enough memory for 2^16-1 input and 2^16-1 output objects.", "severity": "Informational", "contract": "synthesizer/program/src/{function, closure, finalize}/bytes.rs", "function": "read_le", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1287"]}, "title": "Unvalidated destination type for commit instructions", "description": "The constructor of CommitInstruction fails to validate the destination type, allowing bytes to be serialized to a CommitInstruction with an invalid destination type.", "severity": "Informational", "contract": "N/A", "function": "CommitInstruction::new", "lineNumber": "synthesizer/program/src/logic/instruction/operation/commit.rs#64-72"}, {"id": 10, "category": {"1": ["CWE-682"], "2": ["CWE-369"]}, "title": "Unnecessary overflow checks", "description": "There are unnecessary overflow checks for the unsigned division and unsigned remainder operations because these operations error out only when the second argument is zero.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Missing upper bound validation with MAX_STRUCT_ENTRIES", "description": "When casting a series of values to a struct, the code validates that there are at least `MIN_STRUCT_ENTRIES` values before fetching the structure. For completeness, the code should also ensure that the number of values is at most `MAX_STRUCT_ENTRIES`.", "severity": "Informational", "contract": "N/A", "function": "cast_to_struct", "lineNumber": "661-674"}, {"id": 12, "category": {"1": ["CWE-682"]}, "title": "Discrepancy between the matches_ record function implementation and its documentation", "description": "The `matches_ record` function documentation states that, besides the `owner` field, the remaining record fields could be out of order. However, the function implementation relies on the same iterator order of each entry to ensure that the record matches the record layout.", "severity": "Informational", "contract": "N/A", "function": "matches_ record", "lineNumber": "100-108"}, {"id": 13, "category": {"1": ["CWE-697"], "2": ["CWE-183"]}, "title": "The /testnet3/node/env API endpoint provides binary path and repository information", "description": "The `/testnet3/node/env` REST API endpoint leaks certain information about the system that the node is running on, such as the path to the snarkOS binary, Git repository branch name, or commit ID.", "severity": "Informational", "contract": "snarkos/node/env", "function": "N/A", "lineNumber": "N/A"}, {"id": 14, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Maximum peer message limit is off by one", "description": "The Inbound::inbound function allows for only 999 messages instead of 1000 due to the num_messages >= 1000 check.", "severity": "Informational", "contract": "snarkos/node/router/src/inbound.rs", "function": "Inbound::inbound", "lineNumber": "N/A"}, {"id": 15, "category": {"1": ["CWE-284"], "2": ["CWE-923"], "3": ["CWE-291"]}, "title": "The peers request/response flow allows for local IP with non-node port", "description": "The PeerResponse handler filters out the peers list sent by another node but does not filter out special addresses such as 0.0.0.0 or 255.255.255.255, allowing a malicious node to cause another node to connect to its localhost address with a different port than a node port.", "severity": "Low", "contract": "snarkos", "function": "inbound", "lineNumber": "45-57"}, {"id": 16, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "The refresh_and_insert function may not return previously seen timestamp", "description": "Due to the behavior of the refresh_and_insert function, checks for whether a given entry has been seen recently can be bypassed. If the map exceeds its capacity, an entry that has been seen recently will be removed from the map and will be treated as if it had not been seen.", "severity": "Medium", "contract": "N/A", "function": "refresh_and_insert", "lineNumber": "N/A"}, {"id": 17, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Structure Serialization with the Incorrect Number of Fields", "description": "Serializing a structure with an incorrect declared number of fields that could lead to issues depending on the serialization format in use.", "severity": "ERROR", "contract": "N/A", "function": "serialize_struct", "lineNumber": "19-41, 49-58"}, {"id": 18, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Copy-pasted code", "description": "Several places throughout the codebase have code similar to figure C.2, making it easy to miss functions that need changes.", "severity": "Medium", "contract": "N/A", "function": ["start_atomic", "atomic_checkpoint"], "lineNumber": ["mod.rs#20", "N/A"]}]}