{"path": "./Audit_Reports_2024/Trail_of_Bits/2023-03-eleutherai-huggingface-safetensors-securityreview.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Tensor offsets are not checked against the total size of the tensor data", "description": "The `Metadata::validate` function does not check tensor offsets against the total size of the input buffer, which could allow constructing polyglots or lead to a panic when accessing tensors.", "severity": "Medium", "contract": "safetensors", "function": "Metadata::validate", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Tensor size calculations may overflow in Metadata::validate", "description": "The `Metadata::validate` method computes the serialized size of each tensor by multiplying the size of the data by the product of the tensor's dimensions. Since Rust does not check for integer overflows in release builds, this computation may overflow and produce the wrong result.", "severity": "Medium", "contract": "safetensors", "function": "Metadata::validate", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "The safetensors library allows zero-sized tensors", "description": "The safetensors library allows creation of zero-sized tensors which may lead to compatibility issues with other libraries such as PyTorch.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-354"]}, "title": "The SliceIterator type does not validate tensor indexers against the tensor shape", "description": "The `SliceIterator::new` method fails to validate the interval endpoints, which may cause panic when indexing into the tensor data and lead to overflows when calculating offsets into the data sections.", "severity": "Low", "contract": "safetensors", "function": "SliceIterator::new", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Insufficient test coverage against adversarial inputs", "description": "The library does not contain enough tests for adversarial inputs that target the codebase\u2019s failing code paths, so the library\u2019s behavior on malicious inputs is largely untested.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-241"]}, "title": "Serialization can panic on malformed JSON", "description": "The serialization data preparation function `prepare` performs an unchecked call to `unwrap` on an option that will be `None` if the `data_info` mapping cannot be serialized to JSON.", "severity": "Informational", "contract": "safetensors", "function": "prepare()", "lineNumber": "179"}, {"id": 6, "category": {"1": ["CWE-682"]}, "title": "Underspecified JSON behavior can lead to parser differentials", "description": "The risk of differentials between safetensors implementations is not solely based on discrepancies in duplicate key handling. JSON implementations have historically differed on interpretation of Unicode escapes, large numbers, and representations of infinity (Inf) and not-a-number (NaN).", "severity": "Low", "contract": "pysafetensors", "function": "N/A", "lineNumber": "7\u201310"}, {"id": 7, "category": {"1": ["CWE-707"], "2": ["CWE-74"], "3": ["CWE-94"]}, "title": "PyTorch conversion utility is vulnerable to arbitrary code execution", "description": "The PyTorch conversion script invokes torch.load() in an unsafe manner, allowing an attacker to execute arbitrary code on the system when a maliciously crafted model is converted.", "severity": "Undetermined", "contract": "N/A", "function": "convert.py", "lineNumber": "112-118"}, {"id": 8, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-354"]}, "title": "Python dependencies are not semantically versioned", "description": "The majority of Python dependencies for the safetensors library are not constrained to a minimum version, allowing the package resolution engine to install older, vulnerable versions of dependencies.", "severity": "Low", "contract": "safetensors/bindings/python/setup.py", "function": "N/A", "lineNumber": "7-25"}, {"id": 9, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "The safetensors library does not check for exceptional values", "description": "Floating point tensors may contain NaN or \u00b1Inf values which is not documented anywhere and may lead to issues for downstream consumers of the safetensors API.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}