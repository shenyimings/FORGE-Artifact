{"path": "./Audit_Reports_2024/Trail_of_Bits/2023-10-yolov7-securityreview.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-707"], "2": ["CWE-74"], "3": ["CWE-77"], "4": ["CWE-78"]}, "title": "Multiple uses of subprocess.check_output with shell=True could allow command injection", "description": "The codebase relies on various shell commands to obtain relevant information for the user, but uses subprocess.check_output with shell=True which allows arbitrary commands to be run and can lead to command injection attacks.", "severity": "High", "contract": "N/A", "function": ["git_describe", "check_git_status"], "lineNumber": "54-60, 81, 82, 83, 114, 15, 31, 58"}, {"id": 1, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Models are stored and loaded as pickle files throughout the YOLO codebase", "description": "Throughout the YOLOv7 codebase, models are serialized and loaded using functions such as `torch.load` and `torch.save`, which rely on pickle files. Pickle files have become prevalent in the machine learning space for serializing models because their flexibility makes it possible to serialize several kinds of models without much effort. However, pickle files are known to be insecure, as they allow the execution of arbitrary code.", "severity": "High", "contract": "N/A", "function": "torch.load and torch.save", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-707"], "2": ["CWE-74"], "3": ["CWE-94"], "4": ["CWE-95"]}, "title": "Parsing of YAML config file can lead to arbitrary code execution", "description": "The parse_model function in models/yolo.py uses an eval function on lines in the configuration file without proper validation, allowing an attacker to inject malicious code to execute on a victim's machine.", "severity": "High", "contract": "N/A", "function": "parse_model", "lineNumber": "744"}, {"id": 3, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Untrusted pre-trained models can lead to arbitrary code execution", "description": "The loading of untrusted pre-trained models using torch.load can lead to arbitrary code execution if an attacker is able to compromise the site that hosts these models.", "severity": "Critical", "contract": "N/A", "function": "create", "lineNumber": "6-11"}, {"id": 4, "category": {"1": ["CWE-707"], "2": ["CWE-74"], "3": ["CWE-77"], "4": ["CWE-78"]}, "title": "Multiple uses of os.system could allow command injection", "description": "The use of `os.system` is vulnerable to command injection, allowing arbitrary commands to be executed as the current user.", "severity": "High", "contract": "N/A", "function": ["train", "check_dataset"], "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-693"], "2": ["CWE-311"], "3": ["CWE-319"], "4": ["CWE-5"]}, "title": "Use of unencrypted HTTP protocol", "description": "Instances where HTTP is used instead of HTTPS.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Insecure origin check", "description": "Instances where HTTP is used instead of HTTPS.", "severity": "Undetermined", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Arbitrary URL Download and Unzip in check_dataset Function", "description": "The check_dataset function downloads and unzips files from arbitrary URLs, which could lead to a denial of service attack by injecting a malicious download URL that results in a zip bomb, halting the execution of the model.", "severity": "N/A", "contract": "N/A", "function": "check_dataset()", "lineNumber": "156-173"}, {"id": 8, "category": {"1": ["CWE-703"]}, "title": "Insufficient input validation in triton inference server could result in uncaught exception at runtime", "description": "The triton inference server component lacks proper input validation, allowing crafted inputs to cause execution halts due to uncaught exceptions or errors.", "severity": "N/A", "contract": "triton-inference-server", "function": ["preprocess", "postprocess"], "lineNumber": "6-18"}, {"id": 9, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Improper use of TorchScript tracing leads to model differentials", "description": "The improper use of TorchScript tracing can introduce differentials that enable the creation of backdoors, allowing an attacker to craft a malicious model that behaves differently when deployed.", "severity": "N/A", "contract": "yolov7/utils/torch_utils.py", "function": "N/A", "lineNumber": "362"}, {"id": 10, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Project lacks adequate testing framework", "description": "The project did not have sufficient time to perform a detailed review of every model component and utilities, resulting in inadequate testing coverage.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-682"]}, "title": "Flaw in detect.py will cause runtime exceptions to occur when using a traced model", "description": "The `detect.py` file provides command-line arguments for using the trained YOLO models. However, when the model is traced, the original input size is passed to the model instead of the updated size, resulting in a runtime error when an invalid image size is passed.", "severity": "Low", "contract": "N/A", "function": "check_img_size()", "lineNumber": "38"}]}