{
    "path": "./Audit_Reports_2024/Trail_of_Bits/2023-09-lisksdk-securityreview.pdf",
    "project_info": {
        "url": "https://github.com/LiskHQ/lips/tree/c7d59b177cdd74553d5995298afce3a835dd67f7",
        "commit_hash": "c7d59b177cdd74553d5995298afce3a835dd67f7",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Impossible to send cross-chain NFT transfers in certain configurations",
            "description": "The `isNFTSupported` function may return incorrect results because the `getCollectionID` function enforces that an NFT must be stored before returning the corresponding collection ID.",
            "severity": "Low",
            "contract": "lisk-sdk/framework/src/modules/nft/method.ts",
            "function": "getCollectionID",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-435"
                ]
            },
            "title": "NFT module has repeated transfer functionality",
            "description": "The NFT module\u2019s transfer command functions, `verify` and `execute`, together have the same checks and function calls as the `transfer` method, which is bad practice and can lead to exploitable bugs.",
            "severity": "Critical",
            "contract": "NFT module",
            "function": "transfer, verify, execute",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "NFT lock method does not check if module is NFT_NOT_LOCKED",
            "description": "The NFT lock method does not check that the module attempting to lock the NFT is not equal to the magic value that represents an unlocked NFT, the `NFT_NOT_LOCKED` constant.",
            "severity": "Informational",
            "contract": "lisk-sdk/framework/src/modules/nft/method.ts",
            "function": "lock()",
            "lineNumber": "339-397"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "NFT methods API could be improved",
            "description": "The NFT methods API lacks a purposely built function to create and update NFTs, which can lead to security problems due to incorrect properties.",
            "severity": "Medium",
            "contract": "lisk-sdk/framework/src/modules/nft/cc_commands",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ]
            },
            "title": "Checks done manually instead of using schema validation",
            "description": "In two locations in the proof of authority module, checks are done manually when schema validation could be used instead.",
            "severity": "Informational",
            "contract": "lisk-sdk/framework/src/modules/poa/schemas",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Update authority command allows validators to have 0 weight",
            "description": "When the proof of authority module initializes its genesis state, it checks that all active validators have nonzero (and positive) weights, but this check is not made by the update authority command.",
            "severity": "Informational",
            "contract": "lisk-sdk/framework/src/modules/poa/commands/update_authority.ts",
            "function": "N/A",
            "lineNumber": "33-37"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Incorrect MIN_SINT_32 constant",
            "description": "The MIN_SINT_32 constant is incorrectly defined, potentially leading to unexpected behavior or errors.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Event errors are reverted",
            "description": "The `DestroyEvent` and the `LockEvent` classes\u2019 error methods do not call the `BaseEvent` class\u2019s `add` method with the `noRevert` argument set to `true`, preventing emission of error events that describe the error that caused the execution failure.",
            "severity": "Low",
            "contract": "lisk-sdk/framework/src/modules/nft/events/{destroy.ts,lock.ts}",
            "function": "error()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "Unspecified and poorly named NFT endpoints",
            "description": "The getCollectionIDs, collectionExists, and isNFTSupported endpoints of the NFT module exist in the code but are not defined in LIP-0052.",
            "severity": "Medium",
            "contract": "NFT module",
            "function": "getCollectionIDs, collectionExists, isNFTSupported",
            "lineNumber": "1183\u20131191"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "The removeSupportAllNFTs function may not remove support for all NFTs",
            "description": "The call to `removeSupportAllNFTs` fails to remove support for all NFTs, allowing an attacker to exploit this fact to break the module\u2019s assumptions and exploit the sidechain.",
            "severity": "Informational",
            "contract": "lisk-sdk/framework/Modules/NFT",
            "function": "removeSupportAllNFTs()",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Bug in removeSupportAllNFTs tests",
            "description": "The test for the `removeSupportAllNFTs` function incorrectly saves a random wrong value to the `supportedNFTsStore` store.",
            "severity": "Informational",
            "contract": "lisk-sdk/framework/Modules/Nft",
            "function": "removeSupportAllNFTs()",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Bounced NFT transfers may cause events to contain incorrect data",
            "description": "Events emitted by the NFT module do not include sending and receiving chainID data, causing confusion during auditing processes.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-237"
                ],
                "4": [
                    "CWE-240"
                ]
            },
            "title": "An NFT's attributesArray can have duplicate modules",
            "description": "The NFT module defines the `createNFTEntry` function, which is responsible for creating a new NFT and ensuring that the NFT\u2019s `attributesArray` array does not have duplicate modules.",
            "severity": "Low",
            "contract": "NFT",
            "function": "createNFTEntry()",
            "lineNumber": "N/A"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Bounced messages may be abused to bypass NFT fees",
            "description": "Malicious sidechains can initiate a CCM with any status, enabling them to transfer NFTs cross-chain without paying the fee.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "NFT recover function may crash",
            "description": "The native chain's `recover` function crashes when a malicious sidechain sends a fake recovered NFT that does not exist on its native chain.",
            "severity": "Resolved",
            "contract": "lisk-sdk/framework/src/modules/nft/method.ts",
            "function": "recover()",
            "lineNumber": "#940-941"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-354"
                ]
            },
            "title": "NFT recover function does properly validate NFT attributes array",
            "description": "The NFT recover function correctly validates the NFT attributes array.",
            "severity": "Low",
            "contract": "N/A",
            "function": "recover()",
            "lineNumber": "N/A"
        },
        {
            "id": 16,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Users may bypass an NFTs creation fee by faking bounced messages.",
            "description": "Malicious sidechains can initiate a CCM with any status, enabling them to transfer NFTs cross-chain without paying the fee.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 17,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "The function that removes all supported NFTs may fail to remove support for all NFTs.",
            "description": "The `removeSupportAllNFTs` function fails to remove support for all NFTs, allowing an attacker to exploit this fact and break the module's assumptions and exploit the sidechain.",
            "severity": "Informational",
            "contract": "lisk-sdk/framework/ modules/nft/",
            "function": "removeSupportAllNFTs()",
            "lineNumber": "N/A"
        }
    ]
}