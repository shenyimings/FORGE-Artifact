{"path": "./Audit_Reports_2024/Trail_of_Bits/YearnV2Vaults.pdf", "project_info": {"url": "https://github.com/vyperlang/vyper", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Shares are indirectly transferable to 0x0", "description": "Users can bypass the transfer protections to send shares to the `0x0` address, burning them.", "severity": "Low", "contract": "Vault.vy", "function": "_issueSharesForAmount()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-369"]}, "title": "Use of zero or contract address as rewards address can block fee computations", "description": "If governance tries to disable the payment of rewards by setting the recipient's address to `0x0` or the address of the contract, it can block the fee computation.", "severity": "Low", "contract": "Vault.vy", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Division rounding may affect issuance of shares", "description": "Users might not receive shares in exchange for their deposits if the total asset amount is manipulated by another user through a large 'donation.' The `_issueSharesForAmount` function calculates the amount of shares to be issued.", "severity": "Medium", "contract": "Vault.vy", "function": "_issueSharesForAmount(to: address, amount: uint256)", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "revokeStrategy function can be error-prone", "description": "The function to revoke strategies may cause errors because of issues in its implementation and documentation.", "severity": "Low", "contract": "Vault", "function": "revokeStrategy()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Vault initialize function does not validate ERC20 decimals", "description": "The function to initialize a vault uses the `decimals` function from the ERC20 interface without validation, which may lead to unexpected results if the `decimals` value changes.", "severity": "Informational", "contract": "Vault.vy", "function": "initialize()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Vault deposits can bypass guest list deposit limits", "description": "A user can easily bypass the deposit limits defined by the guest list by making multiple calls to the deposit function.", "severity": "Informational", "contract": "Vault", "function": "deposit()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Strategy owner can reduce or bypass loss penalty", "description": "The vaults penalize strategies that report losses, but a strategy owner can reduce or bypass a penalty using a flash loan.", "severity": "High", "contract": "Vault", "function": "report()", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-693"], "2": ["CWE-358"]}, "title": "setWithdrawalQueue allows for duplicated strategies", "description": "The function to set the order of the withdrawal queue does not check for duplicated strategies, which can force a vault into an invalid state.", "severity": "Low", "contract": "Vault.vy", "function": "setWithdrawalQueue()", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Strategy migrations can be problematic and should be avoided", "description": "If they are not performed manually, strategy migrations can have serious effects on the security and correctness of the vaults.", "severity": "High", "contract": "Vault", "function": "migrateStrategy", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-664"], "2": ["CWE-400"], "3": ["CWE-770"]}, "title": "Large withdrawals can block other users from making withdrawals", "description": "When a user calls the `withdraw` function, the amount withdrawn is determined using the total number of free tokens in the vault and the amount of `totalDebt` of each strategy in the `withdrawalQueue`. A large withdrawal can block other vault users from making subsequent withdrawals.", "severity": "Medium", "contract": "Vault.vy", "function": "withdraw()", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-682"]}, "title": "Current debt calculations can differ depending on context", "description": "The vault extends credit to a strategy based on both the `debtRatio` of the strategy and the number of available excess tokens (as determined by the vault\u2019s `debtRatio`).", "severity": "Medium", "contract": "Vault.vy", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Registry cache is not verified when registry address is updated", "description": "Updates to the registry address made by a wrapper contract will not be properly applied to the old registry cache. This can cause the contract to produce outdated results.", "severity": "High", "contract": "BaseWrapper.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "name, symbol, and decimals functions can change during the lifetime of yToken", "description": "The `yToken` contract allows users to update the values used by ERC20 functions (such as `name`, `symbol`, and `decimals`), which can produce unexpected behavior in Yearn vaults and third-party contracts.", "severity": "Medium", "contract": "yToken.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 13, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "A strategy declaring a loss can keep excess debt", "description": "Strategies are extended credit by the vault and can declare a gain or loss when reporting results. If a strategy declares a gain, the strategy must have a token balance of at least the amount of the gain, as the funds will be redistributed by the vault. However, if it incurs a loss and its credit is clawed back, the vault contract will not require it to repay its debt.", "severity": "Informational", "contract": "Vault.vy", "function": "N/A", "lineNumber": "N/A"}, {"id": 14, "category": {"1": ["CWE-682"]}, "title": "Performance fees can exceed 100%", "description": "The vault contract assumes that the sum of the vault performance fee and the performance fee of a given strategy will be at most 100%. However, this assumption may not always hold true.", "severity": "Informational", "contract": "Vault.vy", "function": "assessFees()", "lineNumber": "N/A"}, {"id": 15, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Management fees can be avoided", "description": "If a strategy owner can take out credit, use it to turn a profit, and then repay the debt in the same block, the management fee will be eliminated.", "severity": "Low", "contract": "Vault", "function": "N/A", "lineNumber": "N/A"}, {"id": 16, "category": {"1": ["CWE-435"]}, "title": "Front-running opportunities", "description": "Several interactions between the vault and strategies create opportunities for transaction front-running.", "severity": "Low", "contract": "Vault.vy", "function": "N/A", "lineNumber": "N/A"}, {"id": 17, "category": {"1": ["CWE-682"]}, "title": "PR 273 introduces multiple issues", "description": "The Yearn Finance team asked Trail of Bits to review changes introduced in pull request 273. We uncovered several issues in our review. The first issue involves the locked profit calculation, which occurred after the `lastReport` timestamp was updated to the current `block.timestamp`. As a result, calls to the new `_calculateLockedProfit` function always returned the total `lockedProfit` amount without any degradation over time. The second issue also relates to locked profits; if they are not fully dispensed before a call to the `report` function, locked profits can be carried forward for significantly longer periods than anticipated.", "severity": "Low", "contract": "Vault.vy", "function": "N/A", "lineNumber": "N/A"}]}