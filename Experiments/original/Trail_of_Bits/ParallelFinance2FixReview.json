{"path": "./Audit_Reports_2024/Trail_of_Bits/ParallelFinance2FixReview.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-237"], "4": ["CWE-238"]}, "title": "Unconventional test structure", "description": "Aspects of the Paraspace tests make them difficult to run due to high initialization costs and unnecessary token deployments.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-391"]}, "title": "2. Insufficient event generation", "description": "Events generated during contract execution aid in monitoring, baselining of behavior, and detection of suspicious activity. Without events, users and blockchain-monitoring systems cannot easily detect behavior that falls outside the baseline conditions.", "severity": "Low", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-166"]}, "title": "3. Missing supportsInterface functions", "description": "According to EIP-165, a contract\u2019s implementation of the `supportsInterface` function should return `true` for the interfaces that the contract supports.", "severity": "Low", "contract": "Multiple contracts (MoonBirdsGateway, UniswapV3Gateway, WPunkGateway, NToken)", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "ERC1155 asset type is defined but not implemented", "description": "The asset type ERC1155 is defined in DataTypes.sol but is not otherwise supported.", "severity": "Informational", "contract": "PoolLogic.sol, DataTypes.sol", "function": "N/A", "lineNumber": "contracts/protocol/libraries/{logic/PoolLogic.sol, types/DataTypes.sol}"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "executeMintToTreasury silently skips non-ERC20 tokens", "description": "The `executeMintToTreasury` function silently ignores non-ERC20 assets passed to it. Such behavior could allow erroneous calls to `executeMintToTreasury` to go unnoticed.", "severity": "Low", "contract": "PoolLogic", "function": "executeMintToTreasury", "lineNumber": "L98\u2013L134"}, {"id": 5, "category": {"1": ["CWE-664"], "2": ["CWE-665"], "3": ["CWE-909"], "4": ["CWE-456"]}, "title": "getReservesData does not set all AggregatedReserveData fields", "description": "The `getReservesData` function fills in an `AggregatedReserveData` structure for the reserve handled by an `IPoolAddressesProvider`, but it does not set the structure's `name` and `assetType` fields, resulting in uninitialized data.", "severity": "Low", "contract": "UiPoolDataProvider/IUiPoolDataProvider", "function": "getReservesData()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Excessive type repetition in returned tuples", "description": "Several functions return tuples that contain many fields of the same type adjacent to one another, which is error-prone and could lead to disastrous consequences.", "severity": "Informational", "contract": "GenericLogic.sol, ReserveConfiguration.sol", "function": "calculateUserAccountData, getParams", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "8. Incorrect grace period could result in denial of service", "description": "Setting the grace period parameter too high could result in a denial-of-service condition.", "severity": "Low", "contract": "PriceOracleSentinel", "function": "_isUpAndGracePeriodPassed, isBorrowAllowed, isLiquidationAllowed", "lineNumber": "69-88"}, {"id": 8, "category": {"1": ["CWE-682"]}, "title": "Incorrect accounting in _transferCollaterizable", "description": "The code does not correctly update user states when transferring NToken, leading to incorrect collateralization.", "severity": "High", "contract": "NToken", "function": "_transferCollaterizable(address, address, uint256)", "lineNumber": "300-324"}, {"id": 9, "category": {"1": ["CWE-710"], "2": ["CWE-1164"]}, "title": "IPriceOracle interface is used only in tests", "description": "The `IPriceOracle` interface is used only in tests, yet it appears alongside production code. Its location increases the risk that a developer will try to use it in production code.", "severity": "Informational", "contract": "contracts/interfaces/IPriceOracle.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Manual ERC721 transfers could be claimed as NTokens by anyone", "description": "The `PoolCore` contract's external function `supplyERC721FromNToken` has inadequate access controls, allowing unauthorized users to claim ownership of manually transferred ERC721 assets.", "severity": "High", "contract": "contracts/protocol/tokenization/NToken.sol", "function": "supplyERC721FromNToken", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-435"], "2": ["CWE-436"]}, "title": "Inconsistent behavior between NToken and PToken liquidations", "description": "When a user liquidates another user\u2019s ERC20 tokens and opts to receive PTokens, the PTokens are automatically registered as collateral. However, when a user liquidates another user\u2019s ERC721 token and opts to receive an NToken, the NToken is not automatically registered as collateral.", "severity": "Informational", "contract": "LiquidationLogic", "function": "_liquidatePTokens", "lineNumber": "L310\u2013L312"}, {"id": 12, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Missing asset type checks in ValidationLogic library", "description": "Some validation functions involving assets do not check the given asset's type. Such checks should be added to ensure defense in depth.", "severity": "Informational", "contract": "ValidationLogic", "function": "validateRepay()", "lineNumber": "403-447"}, {"id": 13, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Uniswap v3 NFT flash claims may lead to undercollateralization", "description": "By leveraging the flash claim system, a user could claim the Uniswap v3 NFT temporarily and withdraw liquidity directly, returning a valueless NFT, which could lead to undercollateralization.", "severity": "Critical", "contract": "NTokenUniswapV3", "function": "onERC721Received", "lineNumber": "38-51"}, {"id": 14, "category": {"1": ["CWE-697"]}, "title": "Non-injective hash encoding in getClaimKeyHash", "description": "The function getClaimKeyHash uses abi.encodePacked which can cause collisions, leading to off-chain clients mistakenly believing an unclaimed airdrop has already been claimed.", "severity": "Medium", "contract": "AirdropFlashClaimReceiver", "function": "getClaimKeyHash()", "lineNumber": "247-257"}]}