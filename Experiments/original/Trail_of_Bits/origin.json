{"path": "./Audit_Reports_2024/Trail_of_Bits/origin.pdf", "project_info": {"url": "https://github.com/OriginProtocol/origin", "commit_hash": "edf58336b16a3200141afdb4b6b8b7cd8a52bf92", "address": "0x698ff47b84837d3971118a369c570172ee7e54c2"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Marketplace OGN balance is drainable through withdrawListing", "description": "The Marketplace contract allows users to submit and withdraw listings, but lacks a check on whether a listing has been withdrawn previously, enabling repeated withdrawals by deposit managers, draining the Marketplace OGN account balance.", "severity": "High", "contract": "Marketplace", "function": "withdrawListing()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Disputes are front-unnable by a buyer", "description": "When a listing's offer has been accepted, there is a period of time in which only the buyer may finalize the offer (finalization window). However, either the buyer or the seller has the ability to initiate a dispute during the finalization window. A buyer could trick a seller into accepting an offer.", "severity": "Medium", "contract": "Marketplace", "function": "dispute(uint listingID, uint offerID, bytes32 _ipfsHash)", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-707"], "2": ["CWE-74"], "3": ["CWE-94"]}, "title": "Remote code execution through arbitrary ERC20 implementation", "description": "When a user creates an offer, the address to a deployed implementation of the ERC20 interface is accepted as the _currency parameter.", "severity": "High", "contract": "Marketplace", "function": "makeOffer()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-691"], "2": ["CWE-362"]}, "title": "ERC20 approve race conditions", "description": "Origin conforms to the ERC20 token standard, which contains an unavoidable race condition. This race condition is only exploitable by sophisticated attackers, but could result in loss of funds for Origin users.", "severity": "Informational", "contract": "OriginToken", "function": "approve() and transferFrom()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Marketplace contract can trap funds if the whitelist is disabled", "description": "The Marketplace contract protects listings from receiving offers from unauthorized affiliates through the use of an affiliate whitelist. The makeOffer function checks to see if the provided affiliate is 0x0 to prevent trapping tokens in the Marketplace contract.", "severity": "Medium", "contract": "Marketplace", "function": "makeOffer()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-435"], "2": ["CWE-436"], "3": ["CWE-437"]}, "title": "OriginToken contract migration breaks Marketplace offer references", "description": "The OriginToken has a TokenMigration contract which performs a migration of balances from the previous version of the OriginToken to the newly deployed contract. During the migration, users are unable to interact with the previously deployed OriginToken; the contract is in a paused state. While users may resume operations on the newly deployed OriginToken after migration, the Marketplace contract does not update the references to the previously deployed OriginToken address to the newly deployed address, resulting in broken functionality for listings and offers.", "severity": "High", "contract": "origin-contracts/contracts/token/TokenMigration.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-664"], "2": ["CWE-404"], "3": ["CWE-772"], "4": ["CWE-775"]}, "title": "Withdrawn listing prevents seller from withdrawing submitted offers", "description": "When withdrawing a listing, the listing should be deleted from the array of listings similar to how offers are deleted after withdrawal in the withdrawOffer function.", "severity": "Low", "contract": "Marketplace", "function": "withdrawListing()", "lineNumber": "116-123"}, {"id": 7, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Seller finalization of an offer with an affiliate and commission results in trapped funds", "description": "When a seller finalizes an offer in place of the buyer, the affiliate does not receive the commission, resulting in trapped funds in the Marketplace contract balance.", "severity": "Medium", "contract": "Marketplace", "function": "finalize()", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "OriginToken migration while unpaused leads to inconsistent state", "description": "Comments in the TokenMigration source code indicate a migration should only performed while both source and destination tokens contracts are in a paused state. However, the migration contract does not check or enforce this condition which may lead to inconsistencies in OriginToken balances after the migration.", "severity": "Medium", "contract": "OriginToken", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-691"], "2": ["CWE-841"]}, "title": "Marketplace cannot be paused", "description": "In the event of malicious activity or required upgrade, there is currently no way to pause the Marketplace contract.", "severity": "Informational", "contract": "Marketplace", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-691"], "2": ["CWE-1265"]}, "title": "Tokens with external code execution can lead to theft of tokens through reentrancy", "description": "Marketplace does not follow the Checks-Effects-Interactions pattern for its interaction with the currency and the tokenAddr tokens, allowing an attacker to drain the contract funds through a reentrancy.", "severity": "High", "contract": "V01_Marketplace.sol", "function": ["refundBuyer()", "withdrawOffer()"], "lineNumber": "L376-L386"}]}