{"path": "./Audit_Reports_2024/Trail_of_Bits/CoreDNS.pdf", "project_info": {"url": "https://github.com/coredns/coredns", "commit_hash": "7ee128a53da7ca1ee512422b56f31d4a24ed7b8b", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-691"], "2": ["CWE-362"]}, "title": "Risk of a race condition in the secondary plugin\u2019s setup function", "description": "The `setup` function of the `secondary` plugin prints a message to standard output using an anonymous inner goroutine without copying the variable `n`, which is likely to change by the time the scheduler executes the goroutine, resulting in inaccurate values.", "severity": "Low", "contract": "N/A", "function": "setup", "lineNumber": "L19-53"}, {"id": 1, "category": {"1": ["CWE-703"]}, "title": "Upstream errors captured in the grpc plugin are not returned", "description": "Upstream errors cause the gRPC functionality to fail but are not logged, making it difficult for operators to troubleshoot and remediate the issue.", "severity": "N/A", "contract": "CoreDNS", "function": "ServeDNS", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"]}, "title": "3. Index-out-of-range panic in autopath plugin initialization", "description": "Panic occurs when loading the `autopath` configuration with a zero-length `RESOLV-CONF` parameter", "severity": "N/A", "contract": "coredns", "function": "autoPathParse() and setup()", "lineNumber": "53"}, {"id": 3, "category": {"1": ["CWE-703"]}, "title": "Index-out-of-range panic in forward plugin initialization", "description": "CoreDNS panics when loading the `forward` configuration due to misconfiguration of the `forward` plugin, causing a denial of service.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1173"]}, "title": "Use of deprecated PreferServerCipherSuites field", "description": "The use of this property is redundant and may lead to false assumptions about how cipher suites are negotiated in a connection to a CoreDNS server.", "severity": "N/A", "contract": "CoreDNS", "function": "N/A", "lineNumber": "plugin/tls/tls.go#L22-37"}, {"id": 5, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1173"]}, "title": "Use of the MD5 hash function to detect Corefile changes", "description": "The `reload` plugin uses the MD5 hash function to detect changes to a Corefile, which is vulnerable to collisions and decreases the reliability of this process.", "severity": "Low", "contract": "N/A", "function": "reload()", "lineNumber": "L81"}, {"id": 6, "category": {"1": ["CWE-693"], "2": ["CWE-330"], "3": ["CWE-335"], "4": ["CWE-337"]}, "title": "Use of default math/rand seed in grpc and forward plugins' random server-selection policy", "description": "The grpc and forward plugins use a predictable random number generator for selecting upstream servers due to the lack of seeding, making it vulnerable to attacks such as DoS or timing attacks.", "severity": "N/A", "contract": "CoreDNS", "function": "plugin/grpc/policy.go", "lineNumber": "L19-37"}, {"id": 7, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1286"]}, "title": "Cache plugin does not account for hash table collisions", "description": "The cache plugin uses a non-cryptographic FNV-1 hash function which does not offer collision resistance, making it possible to construct a valid (qname, qtype) pair that collides with another one, causing CoreDNS to serve the incorrect cached reply to a client.", "severity": "High", "contract": "plugin/cache", "function": "key() and hash()", "lineNumber": "L68-L87"}, {"id": 8, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Index-out-of-range panic in grpc plugin initialization", "description": "An out-of-Range issue can cause a panic in the `parseRequest` function of the `kubernetes` plugin when it receives a request with a specific `qname` and `zone`, leading to Denial of Service.", "severity": "Informational", "contract": "N/A", "function": "parseRequest", "lineNumber": "96"}, {"id": 9, "category": {"1": ["CWE-664"], "2": ["CWE-400"], "3": ["CWE-770"], "4": ["CWE-789"]}, "title": "Calls to time.After() in select statements can lead to memory leaks", "description": "Using time.After() in select statements within for loops may cause memory overconsumption and potential crashes due to memory exhaustion.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "plugin/clouddns/clouddns.go#L85-93, plugin/azure/azure.go#L87-96, plugin/route53/route53.go#87-96"}, {"id": 10, "category": {"1": ["CWE-707"], "2": ["CWE-116"], "3": ["CWE-838"]}, "title": "Incomplete list of debugging data exposed by the prometheus plugin", "description": "Enabling the `prometheus` (metrics) plugin exposes an HTTP endpoint that lists CoreDNS metrics but also includes Go runtime debugging information such as the number of running goroutines and the duration of Go garbage collection runs, which is not listed in the documentation.", "severity": "Low", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"], "4": ["CWE-766"]}, "title": "Cloud integrations require cleartext storage of keys in the Corefile", "description": "CoreDNS stores cloud provider credentials in cleartext in the Corefile, allowing an attacker or malicious internal user to gain access to a server running CoreDNS and obtain credentials for a cloud provider.", "severity": "N/A", "contract": "CoreDNS", "function": "N/A", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-693"], "2": ["CWE-654"], "3": ["CWE-308"]}, "title": "Lack of rate-limiting controls", "description": "The lack of rate limiting can facilitate DoS and DNS amplification attacks.", "severity": "N/A", "contract": "CoreDNS", "function": "N/A", "lineNumber": "N/A"}, {"id": 13, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Lack of a limit on the size of response bodies", "description": "An attacker generates multiple POST requests with long request bodies to /dns-query, leading to the exhaustion of its resources.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "94-102"}, {"id": 14, "category": {"1": ["CWE-703"]}, "title": "Index-out-of-range panic in grpc plugin initialization", "description": "Panic occurs when attempting to access the first element of the return value with a length of 0, causing denial of service.", "severity": "Informational", "contract": "N/A", "function": "parseStanza and parseGRPC", "lineNumber": "59 and 45"}]}