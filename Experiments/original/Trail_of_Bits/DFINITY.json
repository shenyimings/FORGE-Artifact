{"path": "./Audit_Reports_2024/Trail_of_Bits/DFINITY.pdf", "project_info": {"url": "https://github.com/dfinity/rs", "commit_hash": "42ce95e", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Controller can evade fees and claim extra rewards through neuron disbursement process", "description": "The controller can manipulate the neuron disbursement process to evade fees and claim extra rewards by exploiting the asynchronous calls to the ledger canister.", "severity": "High", "contract": "governance.rs", "function": "Governance::disburse_neuron", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-391"]}, "title": "Finding 15: Inconsistent use of panics", "description": "The Rust codebase handles errors in one of two ways: by returning a `Result` with a custom error enum to be handled at a later time or by immediately panicking.", "severity": "Informational", "contract": "N/A", "function": "write_secret_keys_to_disk, secret_keys_to_sks_proto", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Rewards worth less than transaction fees are discarded during neuron disbursement", "description": "When a neuron is disbursed, the maturity reward is discarded if it is worth less than the transaction fee.", "severity": "Low", "contract": "governance.rs", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-697"], "2": ["CWE-1025"], "3": ["CWE-595"], "4": ["CWE-597"]}, "title": "The function check_caller_authz_and_log returns true if the function name is misspelled", "description": "If the method name is misspelled in either the definition of AUTHZ_MAP or the call to check_authz_and_log, then authz.get(method_name) will return None, and is_authorized will return true.", "severity": "Low", "contract": "RegistryCanister", "function": "check_caller_authz_and_log", "lineNumber": "N/A"}]}