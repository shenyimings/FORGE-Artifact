{
    "path": "./Audit_Reports_2024/Trail_of_Bits/2023-07-liskv4.0-securityreview.pdf",
    "project_info": {
        "url": "https://github.com/LiskHQ/lisk-sdk/tree/89e7504ef5eb6183aefe576a93be3d6052e56038",
        "commit_hash": "89e7504ef5eb6183aefe576a93be3d6052e56038",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ]
            },
            "title": "setHashOnion RPC method does not validate seed length",
            "description": "The setHashOnion RPC method does not validate the length of the seed property, allowing users to call it with a hex-encoded seed value less than 32 characters (16 decoded bytes) long, violating LIP-0022 assumptions and weakening hash onion computation security properties.",
            "severity": "High",
            "contract": "N/A",
            "function": "setHashOnion()",
            "lineNumber": "27\u201350"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Token Methods Lack Checks for Negative Token Amounts",
            "description": "Malicious users can steal tokens from other users by transferring negative amounts of tokens due to lack of checks for negative token amounts in token methods.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Token Module Supports All Tokens from Mainchain and Not Just LSK",
            "description": "The token module uses `_isMainchainOrNative` function to check if a token is supported by default, which accepts any token of the mainchain, not just LSK.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "_isMainchainOrNative",
            "lineNumber": "lisk-sdk/framework/src/modules/token/stores/supported_tokens.ts#192\u2013199"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Schemas with required fields of nonexistent properties",
            "description": "The schema has required fields that are not present in the properties definition, which can lead to unexpected behavior or errors.",
            "severity": "WARNING",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "107-157"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Schemas with repeated IDs",
            "description": "Completely different schemas with the same `$id` are found, likely caused by a copy-paste error.",
            "severity": "N/A",
            "contract": "lisk-SDK/elements/lisk-chain/src/schema.ts",
            "function": "N/A",
            "lineNumber": "102-104, 112-114"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-230"
                ]
            },
            "title": "Schemas do not require fields that should be required",
            "description": "Some properties are meant to be optional but are not required in schema definitions, leading to potential issues.",
            "severity": "WARNING",
            "contract": "lisk-sdk/framework/src/modules/auth/schemas.ts",
            "function": "N/A",
            "lineNumber": "107-157"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Lisk Validator allows extra arguments",
            "description": "The Lisk Validator does not prevent additional parameters from being accepted due to dynamic non-defined properties on the config.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Commands are responsible for validating their parameters",
            "description": "Module commands are responsible for validating their parameters (typically in the `verify` function). It is the responsibility of module developers to always remember to validate the schema, but this lack of automation will inevitably lead to bugs.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "verify()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Insufficient data validation in validators module",
            "description": "The validators module lacks sufficient data validation, which can lead to potential security issues.",
            "severity": "N/A",
            "contract": "lisk-sdk/framework/src/modules",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Event indexes are incorrectly converted to bytes for use in sparse Merkle trees",
            "description": "The `keyPair` method of the `Event` class incorrectly converts event indexes to bytes, causing an error when called on a large number of events but less than the `MAX_EVENTS_PER_BLOCK` constant.",
            "severity": "Medium",
            "contract": "lisk-SDK/elements/lisk-chain/src/event.ts",
            "function": "keyPair()",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Lack of bounds on reward configuration could cause node crashes",
            "description": "The offset configuration value of the `reward` module can be misconfigured to prevent the node from processing any transactions.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "calculateDefaultReward",
            "lineNumber": "18-20"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-1023"
                ],
                "3": [
                    "CWE-839"
                ]
            },
            "title": "Mainchain registration schema validates signature length incorrectly",
            "description": "The `mainchainRegParams` schema used to validate parameters including a `signature` parameter of type `bytes` sets `minItems` and `maxItems` properties incorrectly, potentially leading to incorrect validation.",
            "severity": "High",
            "contract": "RegisterMainchainCommand",
            "function": "N/A",
            "lineNumber": "178-182"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Sidechain terminated command uses the wrong chain ID variable",
            "description": "The context.chainID variable is used instead of context.params.chainID, causing the if check to never be taken and the createTerminatedStateAccount method to always be called even if the account is already terminated.",
            "severity": "Undetermined",
            "contract": "lisk-sdk/elements/lisk-validator/src/validation.ts",
            "function": "N/A",
            "lineNumber": "306"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-230"
                ]
            },
            "title": "Hex format validator allows empty and odd-length strings",
            "description": "The `isHexString` function does not properly validate hex strings, allowing empty and odd-length strings to pass validation, which may result in incomplete decoding.",
            "severity": "N/A",
            "contract": "lisk-sdk/elements/lisk-validator",
            "function": "isHexString()",
            "lineNumber": "72-78"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "CCM fees are always burned",
            "description": "The CCM fee logic was updated to give the relayer the whole message fee even in cases where the command is not supported.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "beforeCCMForwarding, apply, forward",
            "lineNumber": "N/A"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "CCM fees are underspecified and the implementation is not defensive",
            "description": "The CCM fee mechanism is hard to fully understand from the LIPs because the functions that handle CCM fees are specified across several LIPs, without a single location where the entire concept is explained. Furthermore, the implementation is spread over multiple locations in the code.",
            "severity": "Informational",
            "contract": "lisk-sdk",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 16,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-841"
                ]
            },
            "title": "Unspecified order for running interoperability modules",
            "description": "Undefined Behavior",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 17,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ],
                "3": [
                    "CWE-437"
                ]
            },
            "title": "The interoperability module\u2019s terminateChain method does not work",
            "description": "The terminateChain method does not terminate the chain, which breaks the developer\u2019s assumptions and allows the malicious chain to continue misusing the honest chain.",
            "severity": "Low",
            "contract": "N/A",
            "function": "terminateChain()",
            "lineNumber": "520-524"
        },
        {
            "id": 18,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ]
            },
            "title": "Chain ID length not validated in interoperability endpoints",
            "description": "The lengths of chainID properties are not validated in several commands and schemas, including CCUpdateParams, CCMRegistrationParams, CCSidechainTerminatedParams, TerminateSidechainForLivenessParams, and others.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "Multiple"
        },
        {
            "id": 19,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ],
                "4": [
                    "CWE-775"
                ]
            },
            "title": "Bounced CCM fees are not escrowed",
            "description": "When a CCM gets bounced, the whole message fee is assigned to the relayer but the escrows are not updated correctly, allowing the sidechain to recover the full fee amount.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "apply/forward",
            "lineNumber": "N/A"
        },
        {
            "id": 20,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-1025"
                ],
                "3": [
                    "CWE-595"
                ],
                "4": [
                    "CWE-597"
                ]
            },
            "title": "The send method accepts a status different from OK",
            "description": "The `send` method of the `interoperability` module receives the status as a parameter and can accept an arbitrary status including error statuses that are reserved.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "send()",
            "lineNumber": "N/A"
        },
        {
            "id": 21,
            "category": {
                "1": [
                    "CWE-697"
                ]
            },
            "title": "The error method incorrectly checks the status field",
            "description": "The error method contains an incorrect check on the status field.",
            "severity": "High",
            "contract": "N/A",
            "function": "error",
            "lineNumber": "112"
        }
    ]
}