{"path": "./Audit_Reports_2024/Skeleton_Ecosystem/Shell Token Smart Contract Audit.pdf", "project_info": {"url": "https://github.com/SkeletonEcosystem/Audits", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-693"], "2": ["CWE-807"], "3": ["CWE-302"]}, "title": "Front-running attack affecting the ERC20 Approve function", "description": "The approve() method overrides current allowance regardless of whether the spender already used it or not, so there is no way to increase or decrease allowance by a certain value atomically unless the token owner is a smart contract, not an account. This can be abused by a token receiver when they try to withdraw certain tokens from the sender's account.", "severity": "Low", "contract": "N/A", "function": "_approve() / approve()", "lineNumber": "91-95, 189-197"}]}