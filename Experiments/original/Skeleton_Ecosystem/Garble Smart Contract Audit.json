{"path": "./Audit_Reports_2024/Skeleton_Ecosystem/Garble Smart Contract Audit.pdf", "project_info": {"url": "https://github.com/SkeletonEcosystem/Audits", "commit_hash": "N/A", "address": "0x808a6293098b3ac6686317f8e771438995b519a"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Approve of front running attack. Also known as Sandwich Bot", "description": "The approve() method overrides current allowance regardless of whether the spender already used it or not, so there is no way to increase or decrease allowance by a certain value atomically unless the token owner is a smart contract, not an account. This can be abused by a token receiver when they try to withdraw certain tokens from the sender's account.", "severity": "Low", "contract": "N/A", "function": ["approve()", "swapTokensForEth()"], "lineNumber": ["214-217", "285-297"]}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Authorization through tx.origin", "description": "Using tx.origin for authorization could make a contract vulnerable as it returns the address of the account that sent the transaction, allowing malicious contracts to trigger calls to the vulnerable contract.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "243, 247"}]}