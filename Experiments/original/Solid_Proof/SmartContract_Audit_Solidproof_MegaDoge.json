{"path": "./Audit_Reports_2024/Solid_Proof/SmartContract_Audit_Solidproof_MegaDoge.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Contract doesn\u2019t import npm packages from source (like OpenZeppelin etc.)", "description": "We recommend to import all packages from npm directly without flatten the contract. Functions could be modified or can be susceptible to vulnerabilities", "severity": "Low", "contract": "Main", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "A floating pragma is set", "description": "The current pragma Solidity directive is \u201e\u201c^0.8.4\u201d\u201d.", "severity": "Low", "contract": "Main", "function": "N/A", "lineNumber": "6"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "Missing Zero Address Validation (missing-zero-check)", "description": "Check that the address is not zero", "severity": "Low", "contract": "Main", "function": "N/A", "lineNumber": "943"}, {"id": 3, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"], "4": ["CWE-766"]}, "title": "State variable visibility is not set", "description": "It is best practice to set the visibility of state variables explicitly.", "severity": "Informational", "contract": "Main", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-693"]}, "title": "Local variables shadowing", "description": "Rename the local variables that shadow another component", "severity": "Low", "contract": "Main", "function": "N/A", "lineNumber": "670, 583"}, {"id": 5, "category": {"1": ["CWE-682"]}, "title": "Missing Events Arithmetic", "description": "Emit an event for critical parameter changes", "severity": "Low", "contract": "Main", "function": "N/A", "lineNumber": "939, 931, 926, 935"}, {"id": 6, "category": {"1": ["CWE-691"], "2": ["CWE-1265"]}, "title": "Reentrancy vulnerabilities", "description": "Apply the check-effects-interactions pattern or nonReentrant modifier from OpenZeppelin to prevent reentrancy attacks.", "severity": "Medium", "contract": "Main", "function": "N/A", "lineNumber": "678"}]}