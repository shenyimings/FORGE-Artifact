{
    "path": "./Audit_Reports_2024/Runtime_V\u0435rification/algofi-v2-audit-report.pdf",
    "project_info": {
        "url": "https://github.com/Algofiorg/algofi-lending-v2",
        "commit_hash": "3895846381141555227faf8cb15de4367b3a5636",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "A7. Incorrect rewards calculation when compound interval is nonzero",
            "description": "Rewards are issued to users in proportion to their borrow at any given time, but because it's not possible to iterate over users in Algorand, necessary bookkeeping is implemented lazily: only update the user's reward index when the user actually interacts with the market.",
            "severity": "High",
            "contract": "N/A",
            "function": "on_cycle",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Obsolete foreign app in `Market.on_activate_market`",
            "description": "The foreign apps array is not accessed in the Manager's handler `on_market_opt_in`, and the app id is received from `Global.caller_app_id()` instead of `Global.current_application_id()` supplied as a foreign app for an opt-in inner transaction into the Manager.",
            "severity": "Informative",
            "contract": "Market",
            "function": "on_activate_market",
            "lineNumber": "456"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Unnecessary check in `Market.on_user_opt_in`",
            "description": "The Market contract checks if the sender is the Storage account in `on_user_opt_in`, but this check will always pass since it's set by the Manager and verified elsewhere.",
            "severity": "Informative",
            "contract": "Market",
            "function": "on_user_opt_in",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ]
            },
            "title": "B3. STBL Market and Vanilla Market have different borrow conditions",
            "description": "The STBL Market and Vanilla Market have different borrow conditions, which may lead to inconsistencies.",
            "severity": "Informative",
            "contract": "STBLMarket and Market",
            "function": "on_borrow()",
            "lineNumber": "987, 142"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "B4. Redundant check in `Manager.on_request_vault_transfer`",
            "description": "The check on line 480 of `manager.py` does not check anything because `self.market.address` is uniquely determined by `self.market_app_id_store`, which is set to be `Global.caller_app_id()`, turning the check into a tautology.",
            "severity": "Informative",
            "contract": "Manager",
            "function": "on_request_vault_transfer",
            "lineNumber": "480"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1059"
                ]
            },
            "title": "Typos and suggestions in docs",
            "description": "The finding highlights several typos and suggestions in the documentation of various functions including Manager's Set Active Market Registration, Asset Optin, Calculate User Position, and Market's Add Underlying Collateral, Add B Asset Collateral, Repay Borrow, and Claim Rewards.",
            "severity": "Informative",
            "contract": "N/A",
            "function": "Multiple",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "A1. Flash loans can be exploited to drain collateral",
            "description": "The protocol lends assets to any opted-in account if the loan is taken and repaid within the same transaction group. However, the protocol does not identify the repayment with any specific transaction in the group, and opens an attack scenario.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "on_flash_loan",
            "lineNumber": "N/A"
        }
    ]
}