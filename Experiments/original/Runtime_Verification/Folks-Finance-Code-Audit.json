{"path": "./Audit_Reports_2024/Runtime_V\u0435rification/Folks-Finance-Code-Audit.pdf", "project_info": {"url": "https://github.com/FolksFinance/[private-repo-name]", "commit_hash": "7f445aff68b3b76891197f6d83cd745697bac381", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Draining of Funds from a Dispenser Contract", "description": "The redeem logic does not check that the user is actually sending the expected f-asset, allowing an attacker to drain funds from the dispenser by sending the target asset or fr-asset instead.", "severity": "Critical", "contract": "Dispenser Contract", "function": "on_redeem", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-191"]}, "title": "Blocking Certain Loan Operations When the Token Pair Price Ratio is Extreme", "description": "In certain loan operations, the price feed of an oracle is required. The oracle adapter calculates the conversion rate and decimal places, but due to PyTeal limitations, a counter-controlled for loop is used, which can cause underflow and panic in extreme cases.", "severity": "Low", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Locking Up Small Amounts of User Funds in Some Extreme Cases due to Rounding", "description": "This finding highlights scenarios where users may get 0 amounts in return due to rounding with integer division, potentially locking up small amounts of tokens when supplying correspondingly small input amounts.", "severity": "Informative", "contract": "Dispenser Contract", "function": ["on_deposit", "on_borrow", "on_reduce_collateral"], "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Missing Non-critical Safeguards That Would Improve Robustness", "description": "The platform owner address or DAO executes privileged operations such as creating and setting up dispensers, token pairs, and asset data to an oracle. It is advisable to have logic checks to ensure proper setup and creation of these contracts, protecting against unintentional mistakes that could result in ill-configured contracts.", "severity": "Informative", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Minor Inconsistencies in the Documentation", "description": "Inconsistencies were found in the documentation of `div14` function in `math.py` and `calc_delta_time` function. The decimal specifications of `div14` are too restrictive, and the comment for `calc_delta_time` should match the decimal specs of `latest_timestamp()`.", "severity": "Informative", "contract": "math.py", "function": ["div14()", "calc_delta_time()"], "lineNumber": "N/A"}]}