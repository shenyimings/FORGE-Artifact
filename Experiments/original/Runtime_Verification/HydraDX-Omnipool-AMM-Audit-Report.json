{"path": "./Audit_Reports_2024/Runtime_V\u0435rification/HydraDX-Omnipool-AMM-Audit-Report.pdf", "project_info": {"url": "https://github.com/galacticcouncil/HydraDX-node", "commit_hash": "8de6222f967cc1bfe120207a775e8f0dc8eb92a5", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "Redundant computation when calculating remove liquidity state change", "description": "The implementation of delta_hub_reserve_hp could reuse the computation result of current_price. However, it seems the rust type U256 does not provide rounded multiplication to a rational number.", "severity": "Informative", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Rounding error exploits when removing liquidity", "description": "The implementation of hub_transferred based on two rounded intermediate variables p_x_r causes a rounding error exploit when removing liquidity.", "severity": "Low", "contract": "N/A", "function": "Remove Liquidity", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Consistency: ImbalanceLRNA.negative is not a precondition in most exchange types.", "description": "The LRNA imbalance should always be \u2264 0 but it's not checked as a precondition in most exchange types.", "severity": "Informative", "contract": "N/A", "function": "calculate_sell_state_changes", "lineNumber": "951"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "Possibly large error in the imbalance when buying with LRNA", "description": "The lower bound for the imbalance computation error is negative, and its absolute value is roughly LRNA LRNA. In most cases, the first term is almost 0, and the second one is small.", "severity": "Low", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}