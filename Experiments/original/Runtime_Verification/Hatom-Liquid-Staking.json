{"path": "./Audit_Reports_2024/Runtime_V\u0435rification/Hatom-Liquid-Staking.pdf", "project_info": {"url": "https://github.com/HatomProtocol/hatom-liquid-staking", "commit_hash": "92194aec4527b510add21258e47c87b716cbcdf7", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "A01 - Keeping contracts outdated forever", "description": "A user can keep some/many/all contracts outdated forever if all Staking Provider contracts have liquidity caps and the relevant ones are in the same shard as the Liquid Staking contract.", "severity": "High", "contract": "Liquid Staking contract", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "A02 - Blacklisting is hard if a contract does not have delegated tokens", "description": "Any attempt to blacklist a contract without delegated tokens will start with an undelegate_from call. If the contract has no delegated tokens, this call will fail in the require_sufficient_egld check.", "severity": "-", "contract": "N/A", "function": "undelegate_from", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "A03 - unbond_from sends EGLD to caller", "description": "The function unbond_from sends EGLD to the caller instead of updating the storage.", "severity": "High", "contract": "Liquid Staking", "function": "unbond_from(PenaltyId)", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-691"], "2": ["CWE-841"]}, "title": "A04 - Whitelisting is sometimes not possible after blacklisting", "description": "After a contract has been blacklisted, it cannot be re-whitelisted due to the lack of an endpoint for whitelisting blacklisted contracts.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "A05 - Using withdraw can cause data inconsistencies", "description": "The function allows the admin to transfer various tokens, including EGLD and shares to some account. When withdrawing EGLD, the function does not update the various values that track the amount of EGLD that the contract has, leading to data inconsistencies.", "severity": "High", "contract": "N/A", "function": "withdraw()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-691"], "2": ["CWE-362"]}, "title": "A06 - Concurrent unbond_from may lead to user funds loss and contract removal", "description": "Concurrent calls to unbond_from may cause user funds loss and contract removal due to race conditions.", "severity": "High", "contract": "Liquid Staking", "function": "unbond_from", "lineNumber": "51, 24-29"}, {"id": 6, "category": {"1": ["CWE-691"], "2": ["CWE-362"]}, "title": "A07 - Concurrent delegate_rewards may delegate more rewards than available", "description": "Two concurrent delegate_rewards calls will transfer more funds than expected because the amount of available rewards is updated only in the callback.", "severity": "High", "contract": "N/A", "function": "delegate_rewards", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-691"], "2": ["CWE-362"]}, "title": "A08 - Concurrent delegate_to may delegate more than intended", "description": "Delegate_to should not be called twice for the same penalty_id, at least not until the first call is fully finished, since it will probably delegate the penalty amount twice.", "severity": "High", "contract": "N/A", "function": "delegate_to", "lineNumber": "21"}, {"id": 8, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "A09 - Tokens stuck in a blacklisted contract", "description": "Tokens can get stuck in a blacklisted contract.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "A10 - Delegating to a blacklisted or outdated contract", "description": "For users in the migration whitelist, the Liquid Staking contract skips normal checks when delegating to the corresponding contract, allowing delegation to blacklisted or outdated contracts.", "severity": "Low", "contract": "Liquid Staking", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-682"]}, "title": "Rounding error larger than needed for share <-> egld transformations", "description": "The rounding error when transforming shares to EGLD and back to shares can be larger than necessary due to the exchange rates used.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "A12 - Rewards generated by a user\u2019s EGLD may be received by another", "description": "Rewards generated by a user's EGLD may be received by another user when undelegating without claiming rewards first.", "severity": "Medium", "contract": "N/A", "function": "undelegate, claim_rewards_from", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "A13 - The penalty system assumes two working Staking Provider contracts", "description": "The administrator can undelegate and unbond some EGLD from a contract and then delegate it to another contract. In order for this to work, there should be at least one Staking Provider contract besides the one being penalized that can receive these EGLD tokens.", "severity": "Informative", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 13, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "A14 - Not handling the case when a Staking Provider contract loses funds", "description": "It's unclear whether a Staking Provider contract can lose user funds and how it would affect the Liquid Staking contract if users try to withdraw their tokens.", "severity": "Informative", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 14, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "A15 - Trusted contracts should be in the same shard", "description": "The administrator will only add trusted contracts that are in the same shard as the Liquid Staking contract.", "severity": "N/A", "contract": "Liquid Staking", "function": "N/A", "lineNumber": "N/A"}, {"id": 15, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-862"]}, "title": "A16 - Missing check when setting roles for undelegate_token", "description": "The set_undelegate_token_roles function does not require that undelegate_token is set before giving Mint and Burn roles to this contract.", "severity": "N/A", "contract": "N/A", "function": "set_undelegate_token_roles()", "lineNumber": "N/A"}, {"id": 16, "category": {"1": ["CWE-682"]}, "title": "A17 - Inconsistent handling of total_fee in init", "description": "Inconsistent handling of total_fee in the init function leading to potential issues.", "severity": "N/A", "contract": "N/A", "function": "init", "lineNumber": "N/A"}, {"id": 17, "category": {"1": ["CWE-664"], "2": ["CWE-221"], "3": ["CWE-223"], "4": ["CWE-778"]}, "title": "A18 - Some endpoints do not produce events", "description": "Some endpoints in the contract do not emit events, which can make it difficult to track and verify the state of the contract.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 18, "category": {"1": ["CWE-703"]}, "title": "A19 - Panic in the unbond_from_cb callback", "description": "In the unbond_from_cb callback, on success, if there are not enough EGLD for the given penalty, the contract panics. This means that the EGLD received from the Staking Provider contract (if any) are, practically, lost.", "severity": "Medium", "contract": "Liquid Staking", "function": "unbond_from_cb", "lineNumber": "26"}]}