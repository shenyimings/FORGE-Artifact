{"path": "./Audit_Reports_2024/Runtime_V\u0435rification/Algofi.pdf", "project_info": {"url": "https://github.com/Algofiorg/algofi-protocol", "commit_hash": "fd6b2a60f4beb759e9c456b556b1eb5ba7fdab8a", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "Flipped price scales in liqudation reward calculation", "description": "The liquidation reward calculation mistakenly swaps the two scale factors involved, scaling asset A's price down by asset B's scale factor and vice-versa. If these factors are different, then during this calculation one price increases and the other decreases, by orders of magnitude, compared to reality.", "severity": "Critical", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Missing exchange logic in liquidation reward calculation", "description": "The code computes the reward amount in underlying assets but does not convert this amount into bank assets, resulting in the liquidator receiving more collateral than they're entitled to.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Incorrect access of repaid amount in liquidation reward calculation", "description": "The liquidation reward calculation does not use a wrapper to extract the amount from the appropriate field according to the expected asset type, leading to incorrect access of repaid amount if the transaction was actually a Payment made in Algos.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Incorrect check for expected transaction type in some operations", "description": "The protocol checked that incoming transactions for `add_collateral` and `burn` operations in the Algo market are `Payment`s. But these operations actually require \u201cbank\u201d Algos, which can only be sent via `AssetTransfer` transactions.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Impact of rounding on interest calculation", "description": "The protocol uses integer division which truncates the result, leading to a lower interest value when users touch their borrow position frequently, causing discrepancies in the total borrowed amount and individual borrowed amounts.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Missing check on user collateral cap during liquidation", "description": "The protocol does not check if a liquidator's collateral amount exceeds the user collateral cap during liquidation.", "severity": "Informative", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Incomplete checks for transaction group validity", "description": "The protocol does not thoroughly check transaction groups, allowing malicious users to circumvent security checks by exploiting `CloseOut` and `ClearState` transactions or sending transactions to different applications.", "severity": "Critical", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-682"], "2": ["CWE-369"]}, "title": "Incorrect check for non-zero denominator in issued borrow shares", "description": "The code assumes that outstanding_borrow_shares > 0 implies underlying_borrowed > 0 to avoid division by zero, but this implication does not hold in degenerate cases where users still possess borrow shares but the total borrow is actually 0.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-682"]}, "title": "Possible accelerated growth of bank asset exchange ratio", "description": "Due to rounding involved in exchanging bank assets, degenerate scenarios exist where the bank-to-underlying exchange ratio grows much quicker than expected. This can cause long-term problems.", "severity": "Informative", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-682"]}, "title": "Possible deflation of borrow share value", "description": "Malicious actors could leverage rounding done by the protocol and issue borrow shares without increasing the total borrow, resulting in borrow shares losing value and effectively transferring part of the global borrow to accounts that choose to follow this strategy.", "severity": "Informative", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-682"]}, "title": "Extraneous market supply cap check while adding collateral", "description": "The protocol incorrectly checks the market supply cap when adding new collateral by a user, which is incorrect because the market's supply is increased by minting bank assets deposited as collateral, not by adding collateral.", "severity": "Informative", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}