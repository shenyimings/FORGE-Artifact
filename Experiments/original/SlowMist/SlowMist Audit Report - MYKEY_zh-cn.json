{
    "path": "./Audit_Reports_2024/SlowMist/SlowMist Audit Report - MYKEY_zh-cn.pdf",
    "project_info": {
        "url": "https://github.com/mykeylab/keyid-eth-contracts/",
        "commit_hash": "6eaf676c83d975b50fa32ca8f3bd1577fa94c3",
        "address": "0xe9737a94eABf50D4E252D7ab68E006639eA73E0D",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Gas \u6076\u610f\u6d88\u8017\u95ee\u9898",
            "description": "The contract does not limit gas when calling external contracts using assembly, allowing attackers to consume and steal users' gas or official assets.",
            "severity": "Medium",
            "contract": "AccountProxy",
            "function": "fallback()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "\u8f6c\u8ba2\u6a21\u5757\u529f\u80fd\u7f3a\u5f0f",
            "description": "Transfer module functionality is missing.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "\u4e8b\u4ef6\u8bb0\u5f55\u9519\u8bef",
            "description": "In transferERC20 method of transferLogic.sol file, since token parameter can be arbitrarily filled by caller, even if the address does not exist, Account contract's invoke call will not fail. If a malicious user fills the token address with 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE, it will cause event recording error.",
            "severity": "Low",
            "contract": "transferLogic.sol",
            "function": "transferErc20",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ]
            },
            "title": "\u4e8b\u4ef6\u58f0\u5217\u6df7\u52a0",
            "description": "The initAccount function in BaseLogic and TransferLogic contracts declares the same event, which can cause confusion.",
            "severity": "Low",
            "contract": "BaseLogic & TransferLogic",
            "function": "initAccount(BaseAccount _account)",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "No Limit on Input User Public Key Pairs and Emergency Contact Account Numbers",
            "description": "The Account contract does not limit the number of user public key pairs and emergency contact account numbers during initialization, allowing users to upload an arbitrary number of public keys, which may cause certain functions to malfunction.",
            "severity": "Low",
            "contract": "Account",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "\u8d85\u671f delay \u64cd\u4f5c\u53ef\u4e0b\u53cd",
            "description": "In AccountLogic contract, the cancelDealy function does not check if the delay time has expired, allowing delayed operations to be cancelled even after the delay time.",
            "severity": "\u4f4e\u9898\u6bd4\u901a",
            "contract": "AccountLogic",
            "function": "cancelDelayed(address payable _account, bytes32 _id)",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "\u672a\u5bf9OperationKeys \u505a\u4e00\u81ea\u6a21\u67e5",
            "description": "The function changeAllOperationKeys does not check for consistency of OperationKeys, which may lead to potential security issues.",
            "severity": "Low",
            "contract": "N/A",
            "function": "changeAllOperationKeys(address payable, address[] calldata)",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "\u672a\u5bf9Backupkey \u4f5c\u6700\u4f4e\u6570\u91cf\u9650\u5236",
            "description": "The BackupKey has no minimum quantity limit, allowing a malicious backup account to change the main account's public key without the user's knowledge, stealing their assets.",
            "severity": "Critical",
            "contract": "N/A",
            "function": [
                "proposeByBackup",
                "changeAdminKeyByBackup",
                "triggerChangeAdminKeyByBackup"
            ],
            "lineNumber": "N/A"
        }
    ]
}