{"path": "./Audit_Reports_2024/Solidified/Solidified-Paraswap_[22.07.2021].pdf", "project_info": {"url": "https://github.com/paraswap/paraswap-contracts/tree/feature/v5", "commit_hash": "f615d82144b9390e1ffaf9ce1a0728bb5ea2424", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Unvalidated Fee Percentages", "description": "The constructor of FeeModel.sol does not validate that partnerSharePercent and maxFeePercent are less than 100%", "severity": "Minor", "contract": "FeeModel.sol", "function": "Constructor", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Incorrect Variable Declaration", "description": "The `takeFeeAndTransferTokens()` function in FeeModel.sol declares `feeStructure` as a `memory` variable, which may lead to unnecessary gas fees. It is recommended to declare it as `storage` instead.", "severity": "Medium", "contract": "FeeModel.sol", "function": "takeFeeAndTransferTokens()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-664"], "2": ["CWE-665"], "3": ["CWE-909"], "4": ["CWE-456"]}, "title": "Immutable Declaration of `tokenTransferProxy`", "description": "`tokenTransferProxy` should be declared as immutable since it\u2019s only assigned once in the descendant\u2019s constructor.", "severity": "Info", "contract": "AugustusStorage.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Gas Optimization: Declaring Functions as External", "description": "Declaring functions `multiSwap()` and `megaSwap()` as `external` instead of `public` can save on gas fees.", "severity": "Optimization", "contract": "MultiPath.sol", "function": ["multiSwap()", "megaSwap()"], "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-233"]}, "title": "Unused Variable `_fromToken` in `swapOnZeroXv2()`", "description": "The variable `_fromToken` is declared but not used in the method `swapOnZeroXv2()` of the contract `ZeroXV2.sol`.", "severity": "Warning", "contract": "ZeroXV2", "function": "swapOnZeroXv2()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1287"]}, "title": "Unwanted Casting to Address Type", "description": "Performs unwanted casting to address type on the swap method.", "severity": "Warning", "contract": "ZeroXV2.sol", "function": "swapOnZeroXv2()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Potential Overflow in megaSwap Method", "description": "The method megaSwap in MultiPath.sol does not check if the path length is less than the uint8 max value before converting the type, which may lead to overflow.", "severity": "Medium", "contract": "MultiPath.sol", "function": "megaSwap()", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "`ZeroXV2.sol` & `ZeroXV4.sol` : The method `swapOnZeroXv2` and `swapOnZeroXv4` are not marked as payable methods", "description": "The methods `swapOnZeroXv2` and `swapOnZeroXv4` in contracts `ZeroXV2.sol` and `ZeroXV4.sol` respectively, do not have the payable modifier.", "severity": "N/A", "contract": "`ZeroXV2.sol` & `ZeroXV4.sol`", "function": "`swapOnZeroXv2` and `swapOnZeroXv4`", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-682"]}, "title": "Avoid using hard-coded gas limits", "description": "The function `transferTokens()` limits gas forwarded to 10,000, which is a bad practice as gas costs for opcodes may change. Instead, reentrancy can be avoided using a reentrancy guard (mutex).", "severity": "Minor", "contract": "AugustusSwapper.sol and Utils.sol", "function": "transferTokens()", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "AugustusSwapper.sol: Function initializeAdapter() fails to set the adapterInitialized and adapterVsData mappings", "description": "Function `initializeAdapter()` does not update the `adapterInitialized` mapping with the newly initialized adapter, nor does it set `adapterVsData`. The same issue exists in function `initializeRouter()` with `routerInitialized` and `routerData`.", "severity": "Minor", "contract": "AugustusSwapper.sol", "function": "initializeAdapter()", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-682"]}, "title": "Protected*.sol: Does not return token and ether", "description": "The function `retrieve*()` in contracts `ProtectedMultiPath` and `ProtectedSimpleSwap` do not return both token and ether, whereas the contract supports both to be swapped.", "severity": "Minor", "contract": "ProtectedMultiPath, ProtectedSimpleSwap", "function": "retrieve()", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-435"], "2": ["CWE-436"], "3": ["CWE-115"]}, "title": "AugustusSwapper might misbehave with some ERC-20 tokens", "description": "Some ERC-20 implementations may cause unexpected consequences, such as tokens that charge fees on transfer, malicious implementations, or tokens that return false instead of reverting.", "severity": "Warning", "contract": "AugustuSwapper.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Contract does not support unbanning a previously banned augustus", "description": "Consider adding a function that allows the unbanning of previously banned `augustus`.", "severity": "Note", "contract": "AugustusRegistry.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 13, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Code Repetition", "description": "The codebase replicates a number of functions and code segments, making it larger than necessary and harder to maintain.", "severity": "Warning", "contract": "SimpleSwap.sol, ProtectedSimpleSwap.sol", "function": "performSimpleSwap(), performSimpleBuy()", "lineNumber": "N/A"}, {"id": 14, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Missing validation for nested params", "description": "The swap method in all routers uses complex data structures as a parameter and is missing validations for most of the values passed through that parameter.", "severity": "Note", "contract": "N/A", "function": "swap()", "lineNumber": "N/A"}, {"id": 15, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Swap method assumes from and to tokens are always different", "description": "The `_swapOn0xV2` method in the `ZeroXV2` contract assumes the `from` and `to` token addresses are different, which can lead to incorrect behavior if they are the same.", "severity": "Warning", "contract": "ZeroXV2", "function": "_swapOn0xV2", "lineNumber": "N/A"}]}