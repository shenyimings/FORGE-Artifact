{
    "path": "./Audit_Reports_2024/Solidified/Solidified-AquaFi_[15_Sept_2021].pdf",
    "project_info": {
        "url": "https://github.com/BlockzeroLabs/aquafi-premium-contract",
        "commit_hash": "N/A",
        "address": "0x5089722613C2cCEe071C39C59e9889641f435F15",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ],
                "3": [
                    "CWE-437"
                ]
            },
            "title": "AquaToken.sol Token susceptible to front running",
            "description": "Changing the account allowance through the `approve()` method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering.",
            "severity": "Minor",
            "contract": "AquaToken.sol",
            "function": "approve()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ],
                "4": [
                    "CWE-401"
                ]
            },
            "title": "Possible Ether Loss in withdrawWithPermission() Function",
            "description": "The function `withdrawWithPermission()` transfers the contract's Ether balance to `indexFundV2` without checking if `indexFundV2` is set, which can lead to possible Ether loss.",
            "severity": "High",
            "contract": "IndexFund.sol",
            "function": "withdrawWithPermission()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-354"
                ]
            },
            "title": "UniswapHandlerV3.sol: Function update() - parameter pool validation is not sufficient",
            "description": "The function `update()` decodes the `pool` value from the supplied `data` parameter without validating its relation to the UniswapV3 positions NFT token, allowing the caller of the `AquaProtocol.stake()` function to specify a valid pool with lowest fees and highest premiums when staking any UniswapV3 positions NFT tokens.",
            "severity": "Minor",
            "contract": "UniswapHandlerV3.sol",
            "function": "update()",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "IndexFund.sol Migrated contract can cause loss of tokens",
            "description": "The function `burnAndWithdraw` does not implement any checks to ensure whether the `IndexFund` contract is migrated or active, which prevents a user from accidentally calling the method and burning tokens.",
            "severity": "Minor",
            "contract": "IndexFund.sol",
            "function": "burnAndWithdraw",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Add missing zero address validations",
            "description": "The contracts do not validate the address in the parameter or storage which can sometimes cause unintentional loss of funds.",
            "severity": "Minor",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "Administrative accounts could drain funds if compromised",
            "description": "Some administrative accounts could drain funds if compromised.",
            "severity": "High",
            "contract": [
                "IndexFund.sol",
                "UniswapHandlerV3.sol",
                "AquaPremium.sol",
                "UniswapV2Handler.sol"
            ],
            "function": [
                "_timelock",
                "update()",
                "N/A",
                "owner"
            ],
            "lineNumber": [
                "N/A",
                "N/A",
                "N/A",
                "N/A"
            ]
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "AccessController.sol Allows whitelisting non-existent pools",
            "description": "The methods `updatePremiumOfPool` and `updatePoolStatus` allow updating values of a non-existent pool, resulting in whitelisting without using the `addPools` method.",
            "severity": "High",
            "contract": "UniswapV2 AccessController, UniswapV3 AccessController",
            "function": "updatePremiumOfPool, updatePoolStatus",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "AquaToken.sol: Consider emitting events for all allowance updates",
            "description": "The AquaToken contract does not emit an Approve event when the allowance value is updated during transferFrom, which may cause issues with event listeners tracking allowance through emitted events.",
            "severity": "Medium",
            "contract": "AquaToken",
            "function": "transferFrom()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "AquaToken.sol: Token supports minting to zero address",
            "description": "The mint process does not implement checks to prevent tokens from being minted to the zero address, resulting in `address(0)` having some tokens that can never be burnt or transferred.",
            "severity": "Note",
            "contract": "AquaToken",
            "function": "mint()",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-357"
                ]
            },
            "title": "AccessController.sol: updatePrimary() does not emit an event",
            "description": "The function `updatePrimary()` defined in the `UniswapV3 AccessController.sol` does not emit an event - it is not consistent with the `UniswapV2 AccessController.updatePrimary()` which does emit the `AquaPrimaryUpdated` event.",
            "severity": "Medium",
            "contract": "AccessController",
            "function": "updatePrimary()",
            "lineNumber": "N/A"
        }
    ]
}