{"path": "./Audit_Reports_2024/Solidified/Solidified-Vortex_[02.09.2021].pdf", "project_info": {"url": "https://github.com/BlockzeroLabs/vortex-contracts", "commit_hash": "9687b422bf42e7f1e9baab83b9cbf8c2dcedb41f", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Reward tokens are assumed to have 18 decimals", "description": "The contract uses hardcoded value `1e18` as the denominator for fixed-point arithmetic operations, which means it can only be used with tokens that have 18 decimals.", "severity": "Minor", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Users can stake, harvest, and withdraw their stake in the same transactions", "description": "Users can claim rewards tokens without leaving any staking tokens in the contract by staking tokens, harvesting, and withdrawing their stake. This could be used, for example, in conjunction with a flashloan to game the reward system.", "severity": "Major", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-229"], "4": ["CWE-230"]}, "title": "Missing input check for array length mismatch", "description": "The function `addReward()` takes an array of rewards as a parameter which should be of the same length as the rewardsToken but this precondition is never checked.", "severity": "Minor", "contract": "N/A", "function": "addReward()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "Potential gas optimization in loops", "description": "The smart contract includes costly loop operations with checks on `.length` of a non-memory array inside the condition of the for loops, consuming a larger amount of gas for every iteration.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Consider improved error handling for withdraw()", "description": "The withdraw function does not ensure that the amount argument passed is less than or equal to the user's actual staked balance, which can lead to a confusing error message.", "severity": "Minor", "contract": "N/A", "function": "withdraw()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"], "4": ["CWE-766"]}, "title": "Consider using external instead of public", "description": "Functions that are never called from within the contract and are only supposed to be called from outside the contract can be assigned an `external` instead of `public` visibility.", "severity": "Minor", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}