{
    "path": "./Audit_Reports_2024/Solidified/Solidified-Aztec_Lido_Bridge.pdf",
    "project_info": {
        "url": "https://github.com/aztecProtocol/aztec-connect-bridges/",
        "commit_hash": "d5aca13d4d0a17b21eeddf77f49f4c6613461fb0",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Enforce correct Lido behavior",
            "description": "The bridge contract doesn't check if the received `outputStETHBalance` is the expected amount after interacting with the Lido protocol in the `wrapETH` function.",
            "severity": "Major",
            "contract": "N/A",
            "function": "wrapETH()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Potential locked ETH in bridge contract",
            "description": "In case the curve protocol sends more ETH after the call in the `unwrapETH` method as stated in the returned `outputValue`, the ETH gets locked in the contract.",
            "severity": "Minor",
            "contract": "LidoBridge.sol",
            "function": "unwrapETH()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Verify Lido and Curve return values against ERC20.balanceOf",
            "description": "The `Lido.submit` and `Curve.exchange` functions do not verify if the ERC20 balance matches the expected output amount, which could lead to potential incorrect behavior of the protocol.",
            "severity": "Medium",
            "contract": "BridgeContract",
            "function": "wrapETH",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "Test Coverage: Potential untested Code",
            "description": "The `wrapETH` function decides based on the better rate if the `Lido` or the `Curve` protocol should be used. However, the tests don\u2019t cover both cases.",
            "severity": "Note",
            "contract": "N/A",
            "function": "wrapETH()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Gas Improvements",
            "description": "Optimize gas costs by making contract dependencies as constants and declaring referral variable as immutable.",
            "severity": "Note",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Verify Lido Specific Parameters in Constructor",
            "description": "The `int128 private curveStETHIndex = 1;` could be a constant to save gas and could be verified for correctness in the constructor by calling `curve.coins(...)`.",
            "severity": "Note",
            "contract": "N/A",
            "function": "Constructor",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1173"
                ]
            },
            "title": "Add all used Lido methods to interface definition",
            "description": "Add all used methods from the Lido contract to the ILido interface instead of casting the Lido address to IERC20 for calling safeIncreaseAllowance",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}