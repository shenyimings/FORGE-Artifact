{"path": "./Audit_Reports_2024/Solidified/Solidified-Lido_[26.05.2021].pdf", "project_info": {"url": "https://github.com/delphidigital/lido-staked-aave", "commit_hash": "3dab1143a802e5ba2c78dc7c1f4995dd792e8280", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "LSToken.sol: transferFrom() allows arbitrary tokens to be moved to an authorized receiver", "description": "The function `transferFrom()` in `LSToken.sol` does not allow the approved address to send it to any address. Instead, it allows tokens to be moved only to an approved receiver.", "severity": "High", "contract": "LSToken.sol", "function": "transferFrom()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "CustomProxyAdmin.sol: Missing zero-checks for signer changes", "description": "The `changeSigner()` function does not perform checks for `address(0)`, which could accidentally renounce upgradability.", "severity": "Minor", "contract": "CustomProxyAdmin", "function": "changeSigner()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "FeeDistributer.sol: Missing zero-checks", "description": "Functions `setDelphiAgent()` and `setLidoAgent()` do not perform checks for `address(0)`, meaning that fee receiver addresses could accidentally be renounced unrecoverably.", "severity": "Minor", "contract": "FeeDistributer", "function": "setDelphiAgent(), setLidoAgent()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-435"], "2": ["CWE-436"], "3": ["CWE-437"]}, "title": "Token susceptible to approve attack", "description": "Changing an allowance through the `approve()` method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering.", "severity": "Minor", "contract": "N/A", "function": "approve()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-693"]}, "title": "External calls to AAVE contracts", "description": "The external calls to the AAVE protocols are not protected from reentrancy, which may cause issues when used with untrusted AAVE versions or forks.", "severity": "Minor", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "CustomProxyAdmin.sol: propose() method accepts ETH in all cases", "description": "The `propose()` method accepts funds even when it is not being used during proposal approval.", "severity": "Minor", "contract": "CustomProxyAdmin.sol", "function": "propose()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-664"], "2": ["CWE-1329"]}, "title": "FeeDistributor.sol: lidoAgent cannot be updated", "description": "Consider implementing a `setLidoAgent()` function in case `lidoAgent` needs to be updated in the future.", "severity": "Note", "contract": "FeeDistributor", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-697"], "2": ["CWE-1025"], "3": ["CWE-595"], "4": ["CWE-597"]}, "title": "ICustomProxyAdmin.sol: Event SignerChanged() is not specific enough", "description": "The SignerChanged() event is not specific to which particular signer has been changed.", "severity": "Minor", "contract": "ICustomProxyAdmin", "function": "N/A", "lineNumber": "N/A"}]}