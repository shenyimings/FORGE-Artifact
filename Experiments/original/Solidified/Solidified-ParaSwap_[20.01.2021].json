{"path": "./Audit_Reports_2024/Solidified/Solidified-ParaSwap_[20.01.2021].pdf", "project_info": {"url": "https://gitlab.com/paraswap/paraswap-contracts/-/tree/audit/02", "commit_hash": "017e9acf4e86603197c851a8cef44dde35c4d82d", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-693"], "2": ["CWE-807"]}, "title": "Use with ERC-777 tokens may lead to reentrancy and cause gas refunds to be exploitable", "description": "Attackers can make use of tokens that trigger execution of injected code, such as ERC-777 hooks, to execute arbitrary code and to get gas refunds at the expense of Paraswap.", "severity": "Major", "contract": "AugustuSwapper.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "An attacker can drain any residual ETH available in the contract", "description": "The `simplBuy()` and `buy()` functions can be exploited to drain residual ETH sent to the contract by mistake, as they assume all ETH was sent by the current caller and attempt to return all remainingAmount after buying.", "severity": "Critical", "contract": "AugustusSwapper.sol", "function": ["simplBuy()", "buy()"], "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-435"], "2": ["CWE-436"], "3": ["CWE-115"]}, "title": "AugustusSwapper might misbehave with some ERC-20 token", "description": "Some ERC-20 implementations may cause unexpected consequences, such as tokens that charge fees on transfer, malicious implementations, or tokens that return false instead of reverting.", "severity": "Minor", "contract": "AugustusSwapper.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-229"]}, "title": "performSimpleSwap() does not verify matching parameter array lengths", "description": "In function `performSimpleSwap()` the arrays `callees` and `values` are passed as parameters and should be of equal length. However, the check for this is omitted from the precondition checks.", "severity": "Minor", "contract": "AugustuSwapper.sol", "function": "performSimpleSwap()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Utils.sol: use call() instead of transfer() for Ether transfer", "description": "The function `transferTokens()` uses `transfer()` for Ether transfers which is not considered best practice anymore due to insufficient gas stipend forwarded with `transfer()` leading to smart contract receivers not being able to receive Ether.", "severity": "Medium", "contract": "Utils.sol", "function": "transferTokens()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-682"]}, "title": "Gas refund depends on hardcoded values", "description": "The function `refundGas()` uses hardcoded gas costs in its calculations, which may lead to incorrect calculations if gas prices change in future protocol updates.", "severity": "Medium", "contract": "Utils.sol", "function": "refundGas()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-682"]}, "title": "Redundant assignment in function takeFeeAndTransferTokens()", "description": "Variable `remainingAmount` is first redundantly assigned to `receivedAmount`, then assigned again to `receivedAmount.sub(fee)`. This redundancy can be removed to save on gas costs.", "severity": "Medium", "contract": "AugustusSwapper.sol", "function": "takeFeeAndTransferTokens()", "lineNumber": "N/A"}]}