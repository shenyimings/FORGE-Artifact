{"path": "./Audit_Reports_2024/Solidified/Solidified-Origin_Protocol_[17.12.2020].pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "LiquidityReward.sol: New campaigns can overwrite active campaigns", "description": "It is possible to call `startCampaign()` even when a campaign is already active, without having to call `stopCampaign()` first. This would have the effect of overwriting the active campaign\u2019s parameters.", "severity": "Minor", "contract": "LiquidityReward.sol", "function": "startCampaign()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Duplicate event emission", "description": "In `mintMultiple()` function of `VaultCore.sol`, the statement emit `Mint(msg.sender, priceAdjustedTotal)` is executed twice, leading to duplicate events.", "severity": "Minor", "contract": "VaultCore.sol", "function": "mintMultiple()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Ambiguous admin transaction hash", "description": "The transaction hash calculation in TimeLock.sol and MinuteTimelock.sol can result in multiple variations of signature and data values evaluating to the same hash.", "severity": "Minor", "contract": "TimeLock.sol, MinuteTimelock.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "Incorrect NatSpec comments in ThreePoolStrategy.sol and InitializableAbstractStrategy.sol", "description": "The deposit() and withdraw() functions in ThreePoolStrategy.sol and InitializableAbstractStrategy.sol do not return the amount deposited or withdrawn as indicated in the NatSpec documentation.", "severity": "Note", "contract": ["ThreePoolStrategy.sol", "InitializableAbstractStrategy.sol"], "function": ["deposit()", "withdraw()"], "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Unclear Usage of Oracles", "description": "It is not clear how price oracles are used in the protocol. The library `UniswapLib.sol`  is not used for any of the oracles in the current version of the protocol, leaving a single Chainlink price feed.", "severity": "Minor", "contract": "MixOracle.sol", "function": "N/A", "lineNumber": "N/A"}]}