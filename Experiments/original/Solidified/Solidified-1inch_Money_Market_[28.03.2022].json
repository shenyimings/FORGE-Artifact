{"path": "./Audit_Reports_2024/Solidified/Solidified-1inch_Money_Market_[28.03.2022].pdf", "project_info": {"url": "https://github.com/1inch/money-market-protocol", "commit_hash": "b14086086ec2d5c253eb1933eae371c9797b5960", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Contract owner can drain the entire contract by assigning a malicious oracle", "description": "The function `setPriceOracle()` allows the contract owner to potentially assign a malicious oracle that would allow them (or an attacker) to drain the entire contract.", "severity": "Major", "contract": "MoneyMarket.sol", "function": "setPriceOracle()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-703"]}, "title": "Lentoken.sol: Token withdraw failures revert without meaningful error messages", "description": "Token withdraw failures do not provide meaningful error messages to users, only displaying 'burn amount exceeds balance' which may not make sense in context.", "severity": "Note", "contract": "Lentoken.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-710"], "2": ["CWE-1120"], "3": ["CWE-1060"]}, "title": "Gas could be saved in function startWithdrawal() by declaring variable withdrawal as storage instead of memory", "description": "Declaring the variable `withdrawal` as `storage` would prevent the compiler from having to copy the contents of `PendingWithdrawal` from storage to memory each time the variable is assigned, hence saving the users on gas.", "severity": "Note", "contract": "Suptoken.sol", "function": "startWithdrawal()", "lineNumber": "N/A"}]}