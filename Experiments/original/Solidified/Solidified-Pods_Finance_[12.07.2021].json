{"path": "./Audit_Reports_2024/Solidified/Solidified-Pods_Finance_[12.07.2021].pdf", "project_info": {"url": "https://github.com/pods-finance/contracts", "commit_hash": "6145d25a2faf5b09b834203183e32ef95c012cd3", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "AMM.sol: Accounting logic does not properly handle cases where a user deposits directly into AMM via token.transfer()", "description": "The accounting logic in addLiquidity and removeLiquidity functions relies on calling balanceOf(this) to compute reserves, which can be skewed by a malicious actor to manipulate the return of _getWithdrawAmounts or skew the amount captured by the fee calculation in onAddLiquidity hooks.", "severity": "Warning", "contract": "AMM.sol", "function": ["addLiquidity()", "removeLiquidity()"], "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Potential Overflow Due to Maximum Decimals", "description": "The maximum decimals amount in RequiredDecimals.sol's tryDecimals() function is set too high, potentially causing overflows when used in multiplication operations.", "severity": "Medium", "contract": "RequiredDecimals.sol", "function": "tryDecimals()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Arbitrary addresses can update a user's fImp value by adding liquidity on their behalf", "description": "The permissionless addLiquidity() function allows arbitrary addresses to update a user's fImp value, potentially leading to griefing other users.", "severity": "Minor", "contract": "OptionAMMPool.sol/AMM.sol", "function": "addLiquidity()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-354"]}, "title": "Validation mismatch between function setFee() and the contract\u2019s constructor", "description": "The `setFee()` function does not validate parameters `feeBaseValue` and `decimals` as per the contract\u2019s constructor validation.", "severity": "Minor", "contract": "FeePool.sol", "function": "setFee()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Documentation discrepancy for function unmint()", "description": "The documentation for function `unmint()` states that the caller might receive a mix of underlying asset and strike asset in case of American options, while function `PodOption._unmintOptions()` never implements this.", "severity": "Minor", "contract": "IPodOption.sol", "function": "unmint()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-693"]}, "title": "FlashloanProtection.sol: Function _nonReentrant() is an insecure re-entrancy guard", "description": "Function `_nonReentrant()` is an insecure re-entrancy guard since it uses `tx.origin`.", "severity": "Minor", "contract": "FlashloanProtection.sol", "function": "_nonReentrant()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "Omission of tryDecimals() in underlyingAssetDecimals() Function", "description": "The function underlyingAssetDecimals() in PodOption.sol does not use tryDecimals() for decimal calls to ERC20, which may lead to inconsistent restrictions on decimal precision.", "severity": "Minor", "contract": "PodOption", "function": "underlyingAssetDecimals()", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "WPodCall / WPodPut: Redundant underlyingAsset constructor parameter", "description": "Both WPodCall and WPodPut require the underlyingAsset parameter in their constructor, even though underlyingAsset will always be equal to the WETH contract.", "severity": "Minor", "contract": "N/A", "function": "Constructor", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-693"]}, "title": "FeePool.sol: Functions balanceOf() and sharesOf() parameter owner shadows parent", "description": "The functions balanceOf() and sharesOf() have a parameter owner that shadows the owner storage variable declared in the parent Ownable contract.", "severity": "Minor", "contract": "FeePool.sol", "function": "balanceOf(), sharesOf()", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-707"], "2": ["CWE-240"]}, "title": "Inconsistent Use of PRBMathSD59x18", "description": "The function _getZScores() in BlackScholes.sol does not consistently use PRBMathSD59x18 for safe mathematical operations.", "severity": "Minor", "contract": "BlackScholes.sol", "function": "_getZScores()", "lineNumber": "136, 138, 142"}]}