{"path": "./Audit_Reports_2024/Solidified/Solidified-Kuende_[17.10.2018].pdf", "project_info": {"url": "N/A", "commit_hash": "9d680349b3cfd8d835ce8d927f14f0ea67f62c38", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-354"]}, "title": "Investors can buy tokens below minimum investment", "description": "In cases where an investor sends ETH that exceeds either the contract cap or the investor cap, they can buy tokens with an amount less than minInvestment with their remaining ETH due to incorrect validation.", "severity": "Minor", "contract": "N/A", "function": "buyTokens()", "lineNumber": "195"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "The modifier notEnded does not consider the end time", "description": "The modifier will incorrectly fail if the current time is exactly equal to endTime.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"]}, "title": "Provide meaningful error messages for every exception", "description": "It is recommended to provide meaningful error messages along with each require statement to help users understand what went wrong more easily since there are many validations happening.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Use Withdrawal pattern", "description": "The use of withdrawal pattern can cause a denial of service if contracts without a payable fallback from buying not-exact values, because the transfer() to the contract in RefundExcess() will revert.", "severity": "Medium", "contract": "N/A", "function": "RefundExcess()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-179"], "4": ["CWE-180"]}, "title": "Avoid duplicate validations", "description": "Multiple duplicate validations are present in the code, such as validating crowdsale start time in multiple locations.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-561"]}, "title": "Storing token balance can be avoided", "description": "The variable tokenBalance is unnecessary and can be removed as it does not affect the smart contract's functionality.", "severity": "Minor", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "No need to update weiAmount while refunding", "description": "Updating weiAmount on line 264 is completely irrelevant to refundExcess() functioning correctly.", "severity": "Low", "contract": "N/A", "function": "refundExcess()", "lineNumber": "264"}, {"id": 7, "category": {"1": ["CWE-682"]}, "title": "Consider adding a function to calculate the token amount", "description": "Adding a function to calculate the token amount can help the buyer to check the number of tokens that can be bought and use this same function to calculate the token in the buyTokens() function.", "severity": "Informational", "contract": "N/A", "function": "buyTokens()", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-664"], "2": ["CWE-404"], "3": ["CWE-772"], "4": ["CWE-775"]}, "title": "The contract does not take advantage of storage gas refunds", "description": "The contract needs a function to reclaim storage gas refunds after the crowd sale is over.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}