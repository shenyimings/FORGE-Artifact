{
    "path": "./Audit_Reports_2024/Solidified/Audit Report - Frameit [03.02.2022].pdf",
    "project_info": {
        "url": "https://gitlab.com/rungie/frameit-contracts/",
        "commit_hash": "6321d96cf09ad0c8ae1a8b1b08616a7a762c822c",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Centralization risks",
            "description": "The owner of MoonPayWallet and FrameItSalesSplitter contracts can withdraw the whole balance using functions companyWithdraw and withdrawNative, leading to a loss of funds for other users.",
            "severity": "High",
            "contract": [
                "MoonPayWallet",
                "FrameItSalesSplitter"
            ],
            "function": [
                "companyWithdraw",
                "withdrawNative",
                "setWallets"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ]
            },
            "title": "UniswapV3Oracle.sol: TWAP of pool with very low liquidity may be used",
            "description": "The UniswapV3Oracle uses all available pools to calculate the result, which can make price manipulations very cheap if some pools have very little liquidity. An attacker could also deploy a pool for a certain fee level to manipulate the price.",
            "severity": "Critical",
            "contract": "UniswapV3Oracle.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ],
                "4": [
                    "CWE-638"
                ]
            },
            "title": "Lack of access control for destructive operations with albums",
            "description": "Anyone can use `destroyAlbum` to delete any album stored in the `fullAlbum` mapping without proper access control.",
            "severity": "Critical",
            "contract": "FrameItAlbum",
            "function": "destroyAlbum()",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "FrameItMarketplace.sol: Frontrunner can cancel offers",
            "description": "A frontrunner can cancel an offer by using `cancelOffer` before the `acceptOffer` call is executed, as anyone knowing the signature of an offer can use `cancelOffer` to cancel it.",
            "severity": "Major",
            "contract": "FrameItMarketplace.sol",
            "function": "cancelOffer",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "FrameItNFT and FrameItSoulbound not compliant with EIP 721",
            "description": "The `tokenUri` function does not throw an error when `_tokenId` is not a valid NFT, violating EIP 721. This can cause problems with other smart contracts that expect adherence to EIP 721.",
            "severity": "Minor",
            "contract": "FrameItNFT and FrameItSoulbound",
            "function": "tokenUri",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "FrameItSoulbound returning the same URL for all tokens",
            "description": "The function tokenURI of FrameItSoulbound returns the base URI for all token IDs and therefore does not allow customizing the image of an NFT.",
            "severity": "Minor",
            "contract": "FrameItSoulbound",
            "function": "tokenURI",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ]
            },
            "title": "FrameItSoulbound: Anyone can mint",
            "description": "The `mint` function of `FrameItSoulbound` is not protected and anyone can call it to mint new tokens.",
            "severity": "Minor",
            "contract": "FrameItSoulbound",
            "function": "mint()",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "FrameItSalesSplitter: transfer used for sending ETH",
            "description": "The `withdrawNative` function of `FrameItSalesSplitter` uses `transfer` to send ETH to the owner. As `transfer` only comes with a 2300 gas stipend, its use is discouraged.",
            "severity": "Minor",
            "contract": "FrameItSalesSplitter",
            "function": "withdrawNative()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "FrameItSalesSplitter._withdrawETH9Payments: Failure to accept payment by one of the royalty wallets blocks other wallets",
            "description": "The function `_withdrawEth9Payments` reverts if any payment to a royalty wallet was unsuccessful, blocking payments to other wallets.",
            "severity": "Minor",
            "contract": "FrameItSalesSplitter",
            "function": "_withdrawETH9Payments",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "FrameItAlbum.populateAlbum: Completing album that was added with _startIndex > 0 not possible",
            "description": "When an album is added with a `_startIndex > 0`, `totalNFTs` is still set to the length of the whole `_ids` array, but only parts of it are added. This means that `checkAlbumComplete` can never return true for such an album.",
            "severity": "Minor",
            "contract": "FrameItAlbum",
            "function": "populateAlbum",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "FrameItAlbum.getUserNFTsForAlbumId can wrongly include ID 0",
            "description": "The function getUserNFTsForAlbumId may incorrectly include ID 0 because the array 'ids' is allocated with length 'nfts.length', but a user can have less NFTs of an album, resulting in the last items being unset and therefore 0.",
            "severity": "Minor",
            "contract": "FrameItAlbum",
            "function": "getUserNFTsForAlbumId()",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "No discount applied when sale token is rungie token",
            "description": "The discount for buying with the rungie token is subtracted within a specific branch, but this discount will not be applied when defaultSaleToken is set to the rungie token.",
            "severity": "Minor",
            "contract": "FrameItPacksMarketplace",
            "function": "buyPack()",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "FrameItMarketplace.buySale: Malicious seller can cause DoS",
            "description": "A malicious or malfunctioning contract registered as a seller of an NFT could lead to reversion of the whole batch if just one of the sellers fail to receive payment in successive calls to `buySale`.",
            "severity": "Minor",
            "contract": "FrameItMarketplace",
            "function": "buySale()",
            "lineNumber": "N/A"
        }
    ]
}