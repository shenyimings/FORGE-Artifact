{
    "path": "./Audit_Reports_2024/Solidified/Audit Report - TinyTap CourseVault.pdf",
    "project_info": {
        "url": "https://github.com/tinytap/smart-contracts",
        "commit_hash": "e292dccac24290ccf3824754984150c5ed3338f8",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ],
                "4": [
                    "CWE-775"
                ]
            },
            "title": "Users can permanently lose access to their funds if CourseVault is paused indefinitely",
            "description": "There is a minor risk that `CourseVault` gets paused indefinitely, which may cause users to be permanently unable to withdraw their funds.",
            "severity": "Minor",
            "contract": "CourseVault",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1120"
                ],
                "3": [
                    "CWE-1060"
                ]
            },
            "title": "Gas Optimization in setVerifiedAccountsBatch()",
            "description": "Declaring parameters `accounts` and `states` as `calldata` instead of `memory` can potentially save on gas.",
            "severity": "Note",
            "contract": "N/A",
            "function": "setVerifiedAccountsBatch()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Function withdrawERC20() allows owner to drain the contract tokens",
            "description": "The function `withdrawERC20()` allows the contract `owner` to drain the entire `ERC20` contract funds at any time of their choice.",
            "severity": "Warning",
            "contract": "TinyTap CourseVault",
            "function": "withdrawERC20()",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-362"
                ]
            },
            "title": "Removing a verified account from the whitelist can be front-run",
            "description": "The function `setVerifiedAccount()` allows either the `founder` or the `verifier` to remove a verified account from the whitelist. However, this can be circumvented where the account to be removed can always front-run this transaction with their own `withdraw()` transaction first.",
            "severity": "Warning",
            "contract": "TinyTap CourseVault",
            "function": "setVerifiedAccount() and withdraw()",
            "lineNumber": "N/A"
        }
    ]
}