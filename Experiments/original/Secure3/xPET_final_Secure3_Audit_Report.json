{"path": "./Audit_Reports_2024/Secure3/xPET_final_Secure3_Audit_Report.pdf", "project_info": {"url": "https://github.com/xpet-tech/xpet-core", "commit_hash": "b54eb8637f90b141b3498ef0677ca5dbdcfa91e2", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "XPT-13:Missing address(0) checks when minting the tokens", "description": "The contract lacks essential sanity checks during the token minting process, as it fails to validate whether the provided user address is a zero address or not.", "severity": "Low", "contract": "BPET and XPET", "function": "_mint() and safeTransfer()", "lineNumber": "17 and 19"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "XPT-12:Missing Check for Duplicate Minting in the XpetNFT::safeMint()", "description": "The safeMint function lacks a crucial check to prevent the minting of tokens with duplicate pet IDs, which could lead to unintentional token overwrites and data inconsistency.", "severity": "Low", "contract": "XpetNFT.sol", "function": "safeMint", "lineNumber": "112"}, {"id": 2, "category": {"1": ["CWE-682"], "2": ["CWE-1339"]}, "title": "XPT-14:Use basis points instead of % across the project", "description": "Using percentage notation can lead to precision errors due to integer math operations in Solidity. Using basis points facilitates calculations allowing for 2 decimal places of precision before truncation.", "severity": "Low", "contract": "XpetBorrow.sol,XpetMarket.sol", "function": "N/A", "lineNumber": "43,160,164,170,176,74"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Add checks while upgrading MIN_CONVERT and MAX_CONVERT to avoid braking invariant", "description": "Add checks instead of directly updating to avoid breaking invariant that max should be equal or more then min logic which will cause unexpected behaviour.", "severity": "Low", "contract": "XpetWithdraw.sol", "function": "updateMaxConvert() and updateMinConvert()", "lineNumber": "52, 56"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "XPT-16:Follow CEI pattern Reentrancy", "description": "The XpetNFT::mint() function and claim() function in XpetWithdraw.sol do not follow the Checks Effects Interactions (CEI) pattern, which is a best practice in smart contract development that involves separating external interactions into distinct functions to enhance security and maintainability.", "severity": "Informational", "contract": ["XpetNFT", "XpetBorrow", "XpetWithdraw"], "function": ["mint()", "claim()"], "lineNumber": ["50-51", "97-100", "106-107", "115-117", "116-124", "123-134", "128-132"]}, {"id": 5, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "XPT-17:Redundant receiveETH function", "description": "The XpetBorrow contract has a redundant receiveETH function which does not implement any logic and can be removed.", "severity": "Informational", "contract": "XpetBorrow", "function": "receiveETH()", "lineNumber": "48"}, {"id": 6, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-862"]}, "title": "XPT-18:Risk that any user can use the same price in the market", "description": "In XpetMarket contract, users can use publicly available proof to call functions, allowing any user to interact with the market using the same price.", "severity": "Informational", "contract": "XpetMarket", "function": "N/A", "lineNumber": "91, 107, 122, 134"}, {"id": 7, "category": {"1": ["CWE-693"], "2": ["CWE-807"], "3": ["CWE-302"]}, "title": "XPT-3:Merkle Tree signatures replay attack possible.", "description": "Merkle Tree signatures are vulnerable to a replay attack.", "severity": "Medium", "contract": "XpetFarm and XpetMarket", "function": "claim() and other functions", "lineNumber": "40, 44-54, 47, 50-51, 91, 107, 122"}]}