{"path": "./Audit_Reports_2024/Secure3/TokenTable_final_Secure3_Audit_Report.pdf", "project_info": {"url": "https://github.com/EthSign/TokenTable-Unlock-Contract", "commit_hash": "85e2445c64f2b767b9aa649052fb9aa4bd7c2128", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "After cancel() , user can still deposit() and claim()", "description": "The original design intention of `cancel()` is to stop the project, but in the `tokentableUnlockerV1` contract, even if it has been canceled, the user can still `deposit()` and `claim()`.", "severity": "Informational", "contract": "TokenTableUn lockerV1", "function": "cancel()", "lineNumber": "184-L190"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Cache the array length in for loop condition", "description": "In the following loop, the length of the array is fetched anew every time before the condition is checked. However, since the length of the array remains constant during execution, this results in unnecessary fetching.", "severity": "Informational", "contract": "TokenTableUnlockerV1", "function": ["depositBatch", "createActualBatch"], "lineNumber": ["150", "172"]}, {"id": 2, "category": {"1": ["CWE-284"]}, "title": "Front-runable initializer", "description": "There is nothing preventing another account from calling the initializer before the contract owner.", "severity": "Informational", "contract": "TokenTableUnlockerV1", "function": "initialize()", "lineNumber": "71-88"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Miss 0 address check for initialize function", "description": "The `initialize()` function lacks zero address check, and `forwarder` can set to 0 and `_ERC2771Recipient` does not have an external setter function to update the `_trustedForwarder` (`_forwarder`). Same as `projectToken`, which can only be updated during `onlyInitializing` phase.", "severity": "Low", "contract": "TokenTableUnlockerV1.sol", "function": "initialize()", "lineNumber": "71-78"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Miss array length check for user input parameters", "description": "The user input array arguments for the function createActualBatch() and depositBatch() need to be at the same length and used as one-to-one pairs. However, there is a lack of array length consistency check and calls may fail or the variable from the shorter array will be assigned to default value 0 due to inconsistent array lengths of the arrays.", "severity": "Low", "contract": "TokenTableUnlockerV1", "function": ["createActualBatch()", "depositBatch()"], "lineNumber": ["142-149", "167-170"]}, {"id": 5, "category": {"1": ["CWE-693"], "2": ["CWE-358"]}, "title": "Miss event for setPermission()", "description": "The critical state-changing function 'setPermission' lacks a corresponding event emission.", "severity": "Informational", "contract": "TokenTableUnlockerV1", "function": "setPermission()", "lineNumber": "230-236"}, {"id": 6, "category": {"1": ["CWE-284"], "2": ["CWE-287"]}, "title": "There is too little signature information in cancel()", "description": "In the `cancel()` function, when `claimTo != actualAddress`, the signature `claimToSig` will be checked against the signer `actualAddress`. The signature does not contain the `msg.sender` and no nonce information.", "severity": "Medium", "contract": "TokenTableUnlockerV1", "function": "cancel()", "lineNumber": "201-213"}, {"id": 7, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "TokenTableUnlocker does not support fee-on-transfer token", "description": "The TokenTableUnlocker contract does not support tokens with a fee on transfer.", "severity": "Low", "contract": "TokenTableUnlockerV1", "function": "_createActual", "lineNumber": "407-411"}, {"id": 8, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Unrestricted presetIndex parameter allows creation of actual outside of unlockingSchedulePresets", "description": "The presetIndex parameter in createActual() and createActualBatch() functions is unrestricted, allowing users to input any number even if it's outside the range of the unlockingSchedulePresets array, potentially resulting in the creation of an actual under incorrect corresponding preset.", "severity": "Medium", "contract": "TokenTableUnlockerV1.sol", "function": "_createActual() and createActualBatch()", "lineNumber": "363"}]}