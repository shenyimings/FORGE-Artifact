{
    "path": "./Audit_Reports_2024/Secure3/ParaSpaceV1.4P3_final_Secure3_Audit_Report.pdf",
    "project_info": {
        "url": "https://github.com/para-space/paraspace-core",
        "commit_hash": "b0a957fc7b6df9109a8a617d7dddce102088d43c",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "MIN_TRAIT_MULTIPLIER should be 1e18 not 0e18",
            "description": "MIN_TRAIT_MULTIPLIER is set to 0e18 instead of 1e18, allowing the admin to set the trait multiplier to less than 1e18, which is the floor price.",
            "severity": "Low",
            "contract": "MintableERC721Logic",
            "function": "_checkTraitMultiplier",
            "lineNumber": "L78-L79,L683-L689"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "MarketplaceLogic._checkAllowance approves marketplace to use uint256.max amount of creditToken",
            "description": "The _checkAllowance function approves the marketplace to use uint256.max amount of creditToken, allowing users to deplete tokens in the POOL.",
            "severity": "Medium",
            "contract": "MarketplaceLogic",
            "function": "_checkAllowance",
            "lineNumber": "L615-L620"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "NFT listing price could be incorrectly calculated",
            "description": "The NFT listing price calculation does not differentiate between ERC20 and NATIVE asset types, which have different decimals, leading to potential incorrect calculations.",
            "severity": "Informational",
            "contract": "MarketplaceLogic",
            "function": "_validateAndGetPrice",
            "lineNumber": "688"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "_buyWithCredit/_acceptBidWithCredit no longer supports filling NFT orders",
            "description": "In the previous implementation of _buyWithCredit/_acceptBidWithCredit, when creditAmount == 0, the user could use creditToken that did not have a corresponding PToken to fill the order. However, in the current implementation, even if creditAmount == 0 and supplyAmount == 0, _flashSupplyFor will try to get the PToken corresponding to the creditToken.",
            "severity": "Low",
            "contract": "MarketplaceLogic.sol",
            "function": "_flashSupplyFor()",
            "lineNumber": "440-465"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "executeBurnMultiple should validate user is not address 0",
            "description": "The executeBurnMultiple function does not check if the tokenId exists before checking if the user is the owner, allowing an attacker to pass a non-existent tokenId and address zero as the user.",
            "severity": "Low",
            "contract": "MintableERC721Logic",
            "function": "executeBurnMultiple",
            "lineNumber": "407"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1173"
                ]
            },
            "title": "safetransferfrom doesn't have the callback check",
            "description": "The _safeTransfer function does not follow the EIP-721 standard by not checking if the 'to' address has the corresponding callback function 'onERC721Received'.",
            "severity": "Informational",
            "contract": "MintableIncentivizedERC721",
            "function": "_safeTransfer",
            "lineNumber": "380"
        }
    ]
}