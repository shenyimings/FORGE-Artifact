{
    "path": "./Audit_Reports_2024/Secure3/EchoDEX_final_Secure3_Audit_Report.pdf",
    "project_info": {
        "url": "https://github.com/echodex-io/echodex-contracts/tree/main/contracts",
        "commit_hash": "0c6fe46ce91528467d60057f4f32c65a99054ace",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incompatibility With Deflationary Tokens",
            "description": "If the tokenReward is a deflationary token, the input amount amountReward may not be equal to the received amount due to the charged transaction fee. As a result, an inconsistency in the amount will occur and the contract will not have enough rewards to distribute to users.",
            "severity": "Low",
            "contract": "EchodexFarm.sol,EchodexRouterFee.sol",
            "function": "createPool(),_swap()",
            "lineNumber": "99-129,261"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "amountsFeeAddMore processing logic errors",
            "description": "In EchodexRouterFee contract, amountsFeeAddMore is passed in for fee charge when performing swap-related function operations without proper calculation and refund logic, which may cause asset loss or swap failure.",
            "severity": "Critical",
            "contract": "EchodexRouterFee",
            "function": "_swap() and swapTokensForExactTokens()",
            "lineNumber": "256-263"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Need to check whether tokenFee is different from token0 and token1 in EchodexPair",
            "description": "The tokenFee may be the same as token0 or token1, causing the swapPayWithTokenFee function to fail. This can lead to incorrect fee calculations and transfers.",
            "severity": "Medium",
            "contract": "EchodexPair",
            "function": "_payFee",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Potential reward over-distribution issue",
            "description": "There is a possibility of over-distribution of rewards due to incorrect calculation and update of pool.accAmountPerShare and pool.lastRewardTimestamp.",
            "severity": "Critical",
            "contract": "EchodexFarm",
            "function": "_update() and _audit()",
            "lineNumber": "227-239, L227-L239"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "old tokenFee will be locked in the pair after tokenFee is updated",
            "description": "When the owner updates the tokenFee using setTokenFee function, the old tokenFee remains in the pair and cannot be withdrawn, leading to a permanent lock of those tokens.",
            "severity": "Medium",
            "contract": "EchodexPair",
            "function": "addFee",
            "lineNumber": "230-237"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "Possible failure of the call `withdrawExcessReward`",
            "description": "The function withdrawExcessReward may fail due to potential reentrancy risk if pool.tokenReward is an ERC777 token.",
            "severity": "Medium",
            "contract": "EchodexFarm",
            "function": "withdrawExcessReward()",
            "lineNumber": "205-220"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Incorrect input parameters for flash swap",
            "description": "The `swap` function uses incorrect input parameters when calling `echodexCall`, using `amount0Out` or `amount1Out` instead of `amountOut`.",
            "severity": "Medium",
            "contract": "EchodexPair",
            "function": "swap",
            "lineNumber": "180-203"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Use safeTransfer instead of transfer",
            "description": "The ERC20.transfer() and ERC20.transferFrom() functions return a boolean value indicating success, but some tokens do not revert if the transfer failed and instead return false. Using safeTransfer can help handle non-standard-compliant tokens.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-435"
                ],
                "2": [
                    "CWE-436"
                ],
                "3": [
                    "CWE-437"
                ]
            },
            "title": "Potential reentrancy risk in EchodexFarm::harvest()",
            "description": "Reentrancy risk due to state changes after interaction and external transfer, potentially allowing for reward token draining if it's an ERC777 token with callback support.",
            "severity": "Medium",
            "contract": "EchodexFarm",
            "function": "harvest()",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ],
                "3": [
                    "CWE-302"
                ]
            },
            "title": "Missing nonce and chain_id in Ec hodexRouterFee contract",
            "description": "The removeLiquidityWithPermit function is vulnerable to signature replay attacks due to missing nonce and chain_id.",
            "severity": "High",
            "contract": "Ec hodexRouterFee",
            "function": "removeLiquidityWithPermit",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1285"
                ],
                "4": [
                    "CWE-129"
                ]
            },
            "title": "Need input validation for stake function in EchodexFarm contract",
            "description": "In Solidity, developers often assume that reading a non-existent index in a mapping will cause the Solidity program to revert. However, in reality, when developers attempt to read a non-existent index, Solidity does not revert; instead, it returns an empty object with default member values.",
            "severity": "Medium",
            "contract": "EchodexFarm",
            "function": "stake(uint256,uint256)",
            "lineNumber": "131-134"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ]
            },
            "title": "Use spot price as fee amount oracle is vulnerable for manipulation",
            "description": "The usage of spot price as a fee amount oracle can be manipulated by malicious users to cause transactions to revert or perform a denial-of-service attack.",
            "severity": "Medium",
            "contract": "EchodexRouterFee.sol, EchodexPair.sol, EchodexFactory.sol",
            "function": "_payFee(), swapPayWithTokenFee()",
            "lineNumber": "82, 109, 213, 264"
        }
    ]
}