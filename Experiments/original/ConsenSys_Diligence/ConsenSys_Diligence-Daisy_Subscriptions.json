{
    "path": "./Audit_Reports_2024/ConsenSys_Diligence/ConsenSys_Diligence-Daisy_Subscriptions.pdf",
    "project_info": {
        "url": "https://github.com/ConsenSys/daisy-subscription-contracts",
        "commit_hash": "N/A",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-826"
                ]
            },
            "title": "When replacing a subscription, credits from the previous subscription are lost",
            "description": "When a new subscription replaces an old one, the new subscription is credited for the amount of service unused on the old subscription, but any remaining credits in the old subscription are not applied to the new subscription and are lost.",
            "severity": "Medium",
            "contract": "SubscriptionManager",
            "function": "_create()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Delegated.delegate() allows calling any function with the smart contract as msg.sender",
            "description": "The delegate() function allows callers to spoof msg.sender to be the contract itself, placing a high burden on development and auditing teams to ensure correctness.",
            "severity": "Medium",
            "contract": "Delegated",
            "function": "delegate()",
            "lineNumber": "L55-L84, L86-L101"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Previous subscription without explicitly checking for existence",
            "description": "The nextPaymentTimestamp() function does not check if a previous subscription exists before processing.",
            "severity": "Minor",
            "contract": "SubscriptionManager",
            "function": "nextPaymentTimestamp()",
            "lineNumber": "L848-L853"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Fee recipient or amount can be changed via front running",
            "description": "Transaction relayers are incentivized by a fee system. At any point in time, the contract's state dictates what address will receive a fee and what that fee will be (as a fraction of the amount transacted). Both the recipient and amount can be adjusted at any time by calling `SubscriptionManager.setFee()`.",
            "severity": "Minor",
            "contract": "SubscriptionManager",
            "function": "setFee()",
            "lineNumber": "L276-L280"
        }
    ]
}