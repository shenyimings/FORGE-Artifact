{
    "path": "./Audit_Reports_2024/ConsenSys_Diligence/ConsenSys_Diligence-PoolTogether_Sushi_and_Yearn_V2_Yield_Sources.pdf",
    "project_info": {
        "url": "https://github.com/pooltogether/sushi-pooltogether/tree/ccaf9d73f8cf5c0c41f6e4d640d9b186c51bc3ce",
        "commit_hash": "ccaf9d73f8cf5c0c41f6e4d640d9b186c51bc3ce",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Yearn: Partial deposits are not processed properly",
            "description": "If the deposit hits the limit of the Yearn vault contract, only part of the tokens is deposited and the shares are minted as if all the tokens are accepted, without transferring the 'change' back to the caller.",
            "severity": "Major",
            "contract": "YearnV2YieldSource",
            "function": "deposit()",
            "lineNumber": "L171-L172,L117-L128"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Sushi: redeemToken redeems less than it should",
            "description": "The redeemToken function computes the amount of xSUSHI to burn in exchange for SUSHI tokens, but due to division and integral values, it may not always return the exact amount requested. The current implementation calls leave with a value that satisfies floor(x * b / a) <= y, but this might not be the biggest number that satisfies the relation, resulting in less SUSHI redeemed than possible.",
            "severity": "Medium",
            "contract": "SushiYieldSource",
            "function": "redeemToken",
            "lineNumber": "L62-L87"
        }
    ]
}