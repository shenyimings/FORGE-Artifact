{"path": "./Audit_Reports_2024/Chainsafe/epns-protocol-03-2021.pdf", "project_info": {"url": "N/A", "commit_hash": "80b7acaf8ef660cb2851ded9bc93bf41250bbc6e", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-710"], "2": ["CWE-1061"]}, "title": "Immutable Identifier Optimization", "description": "The identifier can be made immutable to optimize the contract.", "severity": "Optimization", "contract": "Reserves", "function": "N/A", "lineNumber": "16"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Excessive Balance Check Optimization", "description": "The balance check is excessive because it will happen in the token itself.", "severity": "Optimization", "contract": "Reserves", "function": "N/A", "lineNumber": "37"}, {"id": 2, "category": {"1": ["CWE-710"], "2": ["CWE-1120"]}, "title": "Immutable Variable Optimization", "description": "`pushToken` can be made immutable to optimize gas usage.", "severity": "Optimization", "contract": "FundsDistributorFactory", "function": "N/A", "lineNumber": "16"}, {"id": 3, "category": {"1": ["CWE-710"], "2": ["CWE-1061"]}, "title": "Immutable Identifier Optimization", "description": "The identifier can be made immutable to optimize the contract.", "severity": "Optimization", "contract": "FundsDistributorFactory", "function": "N/A", "lineNumber": "19"}, {"id": 4, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Immutable Variable Optimization", "description": "The variable `cliff` can be made immutable for optimization purposes.", "severity": "Optimization", "contract": "FundsDistributorFactory", "function": "N/A", "lineNumber": "22"}, {"id": 5, "category": {"1": ["CWE-682"]}, "title": "Excessive Balance Check Optimization", "description": "Balance check is excessive because it will happen in the token itself.", "severity": "Optimization", "contract": "FundsDistributorFactory", "function": "N/A", "lineNumber": "83"}, {"id": 6, "category": {"1": ["CWE-710"], "2": ["CWE-1120"]}, "title": "Immutable `_cliff` Optimization", "description": "`_cliff` can be made immutable to improve optimization.", "severity": "Optimization", "contract": "TokenVesting", "function": "N/A", "lineNumber": "33"}, {"id": 7, "category": {"1": ["CWE-710"], "2": ["CWE-1120"]}, "title": "Immutable Variable Optimization", "description": "`_start` can be made immutable to improve contract efficiency.", "severity": "Optimization", "contract": "TokenVesting", "function": "N/A", "lineNumber": "34"}, {"id": 8, "category": {"1": ["CWE-710"], "2": ["CWE-1126"]}, "title": "Immutable Variable Optimization", "description": "_duration variable can be made immutable to improve contract optimization.", "severity": "Optimization", "contract": "TokenVesting", "function": "N/A", "lineNumber": "35"}, {"id": 9, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Immutable Variable Optimization", "description": "_revocable can be made immutable to optimize the code.", "severity": "Optimization", "contract": "TokenVesting", "function": "N/A", "lineNumber": "37"}, {"id": 10, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1173"]}, "title": "Inheritance of IStaking Interface", "description": "The `Staking` contract should inherit from `IStaking` to ensure interface compatibility.", "severity": "Minor", "contract": "Staking", "function": "N/A", "lineNumber": "8"}, {"id": 11, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-563"]}, "title": "Unnecessary Variable Usage", "description": "The variable `balances[user][token]` can be optimized by using `balanceCheckpoints[user][token][last].startBalance` as they are always equal.", "severity": "Optimization", "contract": "Staking", "function": "N/A", "lineNumber": "21"}, {"id": 12, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Optimization of Data Type", "description": "The size variable could utilize a smaller data type, like `uint248`, to squeeze the set variable in the same storage slot to make reads cheaper.", "severity": "Optimization", "contract": "Staking", "function": "N/A", "lineNumber": "24"}, {"id": 13, "category": {"1": ["CWE-682"]}, "title": "Unnecessary Storage Read", "description": "The `balances[msg.sender][tokenAddress]` is read from storage twice, which can be optimized.", "severity": "Optimization", "contract": "Staking", "function": "N/A", "lineNumber": "62"}, {"id": 14, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Insecure Token Transfer", "description": "Using `token.transferFrom()` may not work with all tokens, instead `safeTransferFrom` should be used to ensure support for all tokens.", "severity": "Medium", "contract": "Staking", "function": "N/A", "lineNumber": "64"}, {"id": 15, "category": {"1": ["CWE-682"]}, "title": "Optimization of `last` Checkpoint", "description": "For the `last` checkpoint, `newDeposits` are always 0. It is cheaper to read just the `startBalance`.", "severity": "Optimization", "contract": "Staking", "function": "N/A", "lineNumber": "101"}, {"id": 16, "category": {"1": ["CWE-664"], "2": ["CWE-400"], "3": ["CWE-770"]}, "title": "Excessive Storage Reads in getCheckpointBalance Function", "description": "The `getCheckpointBalance( checkpoints[ last ] )` function is executed multiple times, resulting in excessive storage reads.", "severity": "Optimization", "contract": "Staking", "function": "N/A", "lineNumber": "106"}, {"id": 17, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Unnecessary Condition", "description": "The condition `last >= 1 && checkpoints[last - 1].epochId == currentEpoch` is always true and can be removed.", "severity": "Optimization", "contract": "Staking", "function": "N/A", "lineNumber": "123"}, {"id": 18, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Unnecessary Update of `checkpoints[last].newDeposits`", "description": "`checkpoints[last].newDeposits` is already 0 and does not require an update.", "severity": "Optimization", "contract": "Staking", "function": "N/A", "lineNumber": "185"}]}