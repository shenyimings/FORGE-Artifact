{
    "path": "./Audit_Reports_2024/Inspex/Inspex_AUDIT2022049_DAgora_Marketplace(EVM)_FullReport_v1.0.0.pdf",
    "project_info": {
        "url": "https://github.com/InspexCo/SCSTG",
        "commit_hash": "N/A",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Invalid tokenSaleList Calculation in sell() Function",
            "description": "The miscalculation in the `sell()` function causes the last NFT from the `_metaAddress` state to be excluded from the `tokenSaleList` list, resulting in the buyer not receiving the last NFT as committed in the signature.",
            "severity": "Critical",
            "contract": "DAgoraMarketplace",
            "function": "sell()",
            "lineNumber": "1532-1535"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Drained Native Token from bulkbuy() Function",
            "description": "Anyone can drain a native token from the contract by buying and selling to themselves, resulting in revenue loss for the platform.",
            "severity": "High",
            "contract": "DAgoraMarketplace",
            "function": "bulkbuy()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Improper Native Token Handling",
            "description": "The seller will lose their NFTs and native tokens to pay the platform's fee when selling an order without advance payment from the buyer.",
            "severity": "Medium",
            "contract": "DAgoraMarketplace",
            "function": "sell()",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "Centralized Control of State Variable",
            "description": "Critical state variables can be updated at any time by the controlling authorities without notifying users.",
            "severity": "Medium",
            "contract": "DagoraMarketplace",
            "function": [
                "addAdmin()",
                "removeAdmin()",
                "setRoyaltyFeeAdmin()",
                "changePaymentToken",
                "registerPackage()",
                "unRegisterPackage()",
                "configureFixedVariable()",
                "withdrawNFT()",
                "withdraw()"
            ],
            "lineNumber": [
                "963",
                "967",
                "1374",
                "1389",
                "1394",
                "1413",
                "1424",
                "1632",
                "1641"
            ]
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-362"
                ]
            },
            "title": "Transaction Ordering Dependence",
            "description": "The registered owner of RoyaltyFee collection can instantly raise the royalty fee during the purchase from the buyers to reach the ROYALTY_FEE_CAP value, resulting in a lower received amount for the seller of the affected NFT collection.",
            "severity": "Low",
            "contract": "DAgoraMarketplace",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Smart Contract with Unpublished Source Code",
            "description": "The smart contract source code is not publicly published, so users cannot verify the correctness of functionalities and logic, leading to undesired actions on interacting with the smart contract.",
            "severity": "Low",
            "contract": "DAgoraMarketplace",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-749"
                ]
            },
            "title": "Improper Function Visibility",
            "description": "Two functions have not changed their visibility to external.",
            "severity": "Info",
            "contract": "DAgoraMarketplace",
            "function": "sell(address[] memory _metaAddress, uint256[] memory _metaUint, address[] memory _buyByTokenAddresses, uint256[] memory _buyByAmounts, uint16 _saleByTokenIndex, bytes memory _signature)",
            "lineNumber": "1532-1537"
        }
    ]
}