{"path": "./Audit_Reports_2024/Inspex/Inspex-WUSDMaster.pdf", "project_info": {"url": "https://github.com/WaultFinance/WUSD", "commit_hash": "91c541c2f1c0ac781ddcfb2be6a62555a5e1e8d1", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "Improper Share Calculation in Redeeming Process", "description": "In the redeeming process of WUSDMaster contract, an improper share calculation can lead to a front-running attack, allowing an attacker to gain additional $USDT while redeeming $WUSD.", "severity": "High", "contract": "WUSDMaster", "function": "redeem() and claimUsdt()", "lineNumber": "745-746, 761"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "USDT Draining with withdrawUsdt() function", "description": "The WUSDMaster contract owner can drain $USDT stored in the WUSDMaster by executing the withdrawUsdt() function.", "severity": "High", "contract": "WUSDMaster", "function": "withdrawUsdt()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "WUSD Arbitrary Minting with mint() function", "description": "The WUSD contract owner can arbitrarily mint the $WUSD token without any limit due to the lack of restriction on the mint() function.", "severity": "High", "contract": "WUSD", "function": "mint()", "lineNumber": "597-599"}, {"id": 3, "category": {"1": ["CWE-435"]}, "title": "Transaction Ordering Dependence", "description": "Attackers can perform a front-running attack to gain profit in the stake() and claimUsdt() functions.", "severity": "Medium", "contract": "WUSDMaster", "function": "stake() and claimUsdt()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "WEX Draining by WexWithdrawer Contract", "description": "$WEX stored in the WUSDMaster can be drained by the WexWithdrawer contract owner.", "severity": "Medium", "contract": "WexWithdrawer", "function": ["withdraw()", "deposit()", "initiateMasterChange()", "changeMaster()"], "lineNumber": ["508-512", "514-517", "520-530"]}, {"id": 5, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Improper Modification of Contract State", "description": "Changing the wexPermille or treasuryPermille states can cause the $WUSD to be unredeemable, or cause $USDT to be unusable and remain in the WUSDMaster contract.", "severity": "Low", "contract": "WUSDMaster", "function": "N/A", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Improper Input Validation", "description": "With improper setting of swap path, the user\u2019s tokens will be unusable and stuck in the WUSDMaster contract.", "severity": "Low", "contract": "WUSDMaster", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Centralized Control of State Variable", "description": "The controlling authorities can change critical state variables to gain additional profit, which is unfair to other users.", "severity": "Low", "contract": "WUSDMaster", "function": "N/A", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-693"], "2": ["CWE-358"]}, "title": "Missing Kill-Switch Mechanism in WUSDMaster", "description": "The contract lacks a kill-switch mechanism, which can prevent further damage in case of an attack.", "severity": "Low", "contract": "WUSDMaster", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Inexplicit Solidity Compiler Version", "description": "The solidity compiler version is not explicitly fixed to a specific version, which may lead to potential security issues.", "severity": "Info", "contract": "WUSD WUSDMaster WexWithdrawer", "function": "N/A", "lineNumber": "N/A"}]}