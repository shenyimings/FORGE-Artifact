{"path": "./Audit_Reports_2024/Inspex/Inspex-Infinitee_Vault.pdf", "project_info": {"url": "https://github.com/infiniteefinance/vault", "commit_hash": "a73f9333dccbdbb043d06b28cf5c7713b67c8765", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Improper Withdrawal Logic on userEmergencyWithdraw() Function", "description": "The `userEmergencyWithdraw()` function allows users to withdraw their staked tokens, but due to a design flaw in the `emergencyWithdraw()` function of the `MasterChefWorker` contract, all staked tokens will be stuck in the `MasterChefWorker` contract, making it impossible for users to withdraw them.", "severity": "Critical", "contract": "InfiniteeVault", "function": "userEmergencyWithdraw()", "lineNumber": "173-178"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Potential Centralized Control of State Variable", "description": "The controlling authorities can potentially change the critical state variables to drain all staked tokens.", "severity": "High", "contract": "InfiniteeFeeManager.sol, InfiniteeVault.sol, MasterChefWorker.sol, MasterChefWithVaultWorker.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-435"], "2": ["CWE-436"], "3": ["CWE-437"]}, "title": "Transaction Ordering Dependence", "description": "The front running attack can be performed, resulting in a bad swapping rate and a lower reward.", "severity": "High", "contract": "MasterChefWorker.sol MasterChefWithVaultWorker.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Abuse of Reward Using Flashloan Attack", "description": "A part of the pending reward can be claimed by the attacker using a custom smart contract and flashloan attack.", "severity": "Medium", "contract": "MasterChefWorker.sol, MasterChefWithVaultWorker.sol", "function": "work()", "lineNumber": "106-112, 146-163"}, {"id": 4, "category": {"1": ["CWE-284"], "2": ["CWE-749"]}, "title": "Dangerous Approval to External Contract", "description": "Approving an arbitrary number of allowance to external contracts allows them to steal all approved tokens from the worker contracts.", "severity": "Medium", "contract": ["MasterChefWithVaultWorker.sol", "MasterChefWorker.sol"], "function": "_giveAllowances()", "lineNumber": ["215-222", "133-136"]}, {"id": 5, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Design Flaw in emergencyWithdraw() Function of MasterChefWorker", "description": "The `emergencyWithdraw()` function in the `MasterChefWorker` contract has an `onlyOwner` modifier, making it unusable by the `InfiniteeVault` contract due to conflicting permission.", "severity": "Medium", "contract": "MasterChefWorker", "function": "emergencyWithdraw()", "lineNumber": "129-131"}, {"id": 6, "category": {"1": ["CWE-693"]}, "title": "Improper Kill-Switch Mechanism in MasterChefWorker", "description": "If an attack happens when the contract is unpausable, further damage cannot be prevented.", "severity": "Medium", "contract": "MasterChefWorker.sol", "function": "pause()", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Improper Migration of Funds", "description": "The funds of the users can be stuck in the original smart contracts.", "severity": "Medium", "contract": "InfiniteeVault.sol, MasterChefWorker.sol, MasterChefWithVaultWorker.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Conflicting Permission", "description": "The emergencyWithdraw() function cannot be called from the vault contract, but can still be called directly.", "severity": "Low", "contract": "MasterChefWorker.sol", "function": "emergencyWithdraw()", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Improper Logic in claimReward() Function", "description": "In the claimReward() function, if the remaining amount of reward token stored in the worker contract is fewer than the claiming amount, it will withdraw the reward token from the Alpaca vault. If the remaining amount of reward token stored in the worker contract is greater than the claiming amount, the transaction will be reverted because the subtraction overflow protection is triggered.", "severity": "Low", "contract": "MasterChefWithVaultWorker.sol", "function": "claimReward(uint256 _amount)", "lineNumber": "182-191"}, {"id": 10, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Missing Input Validation", "description": "The InfiniteeVault contract does not validate user input properly, which can prevent users from withdrawing staked tokens.", "severity": "Low", "contract": "InfiniteeVault.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-682"]}, "title": "Use of Data From Multiple Sources", "description": "Inconsistency can cause a small amount of reward miscalculation in the smart contract.", "severity": "Very Low", "contract": "InfiniteeVault.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-284"], "2": ["CWE-749"]}, "title": "Improper Function Visibility", "description": "Functions' visibility should be changed to external if they are not called from any internal function.", "severity": "Info", "contract": "InfiniteeVault.sol, MasterChefWithVaultWorker.sol, Timelock.sol", "function": "deposit(uint256 _amount)", "lineNumber": "106-123"}, {"id": 13, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-233"], "4": ["CWE-236"]}, "title": "Inexplicit Solidity Compiler Version", "description": "The solidity compiler version is not explicitly specified.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 14, "category": {"1": ["CWE-710"], "2": ["CWE-477"]}, "title": "Outdated Solidity Compiler Version", "description": "The smart contract uses an outdated Solidity compiler version with publicly known inherent bugs that may potentially cause damage to the smart contracts or users.", "severity": "High", "contract": "Timelock.sol", "function": "N/A", "lineNumber": "16"}, {"id": 15, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-561"]}, "title": "Unnecessary Function Declaration", "description": "Unused internal functions should be removed if they are not called from any function in the same contract.", "severity": "Info", "contract": "MasterChefWorker.sol", "function": "_removeAllowances()", "lineNumber": "N/A"}]}