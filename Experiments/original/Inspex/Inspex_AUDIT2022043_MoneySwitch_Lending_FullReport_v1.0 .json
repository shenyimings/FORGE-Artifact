{
    "path": "./Audit_Reports_2024/Inspex/Inspex_AUDIT2022043_MoneySwitch_Lending_FullReport_v1.0 .pdf",
    "project_info": {
        "url": "https://github.com/moneyswitch/ms-contracts",
        "commit_hash": "437ec0e5d9c17e9173fc87629b419f97e21a1ac3",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ]
            },
            "title": "Lack of Payment Source Authorization Check",
            "description": "If the user has already approved tokens to the contract for repaying the loan, the attacker can drain the user's tokens from the wallet to repay any loan on the platform.",
            "severity": "High",
            "contract": "MasterLender",
            "function": "repay()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Loan Interest Miscalculation",
            "description": "In the loan repayment flow, allowing a borrower to make a partial principal repayment by inputting the repay amount, in case that amount is greater than the borrowed principal, the excess amount will be paid as the borrowing interest. Since the inputting amount is represented as a sum of borrowed principal and interest, calculating borrowing interest from the inputting amount is likely miscalculated in case the borrower repays their entire principal and a portion of borrowing interest.",
            "severity": "Low",
            "contract": "MasterLender.sol",
            "function": "repay()",
            "lineNumber": "145"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improper Withdrawal Amount",
            "description": "The FeederPool contract withdraws an excessive amount of funds from the MasterPool contract, resulting in an excess amount being stuck in the FeederPool contract and the MasterPool contract having insufficient funds for all users to withdraw.",
            "severity": "High",
            "contract": "FeederPool",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-287"
                ]
            },
            "title": "Signature Reutilization",
            "description": "The borrower's signature can be reused, resulting in anyone being able to issue a loan for this borrower until they reach the credit borrow limit.",
            "severity": "Medium",
            "contract": "MasterLender",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Centralized Control of State Variable",
            "description": "Critical state variables can be updated at any time by the controlling authorities without notifying users.",
            "severity": "Medium",
            "contract": "Governance, InterestRateCalculator",
            "function": "setPendingAdmin(), setBaseRate(), setCapRate(), setCapDuration(), setMaxLoanDuration()",
            "lineNumber": "113, 39, 47, 55, 73"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Insufficient Check for Approved Operation",
            "description": "The admin or governor can execute an operation that was already approved without the approval of another party.",
            "severity": "Medium",
            "contract": "Multiownable.sol",
            "function": "onlyAllGovernance() modifier",
            "lineNumber": "21-22"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-410"
                ]
            },
            "title": "Improper Inactive Pools Handling",
            "description": "The user will be unable to withdraw their funds after the Feeder pool is inactive. Furthermore, if the platform has bad debt and the pool is impaired, the inactive Feeder pool is still affected.",
            "severity": "Medium",
            "contract": "FeederPool MasterPool",
            "function": [
                "withdrawInterestPrincipal(uint256 amount_)",
                "withdrawAll()"
            ],
            "lineNumber": [
                "114-125",
                "163-175"
            ]
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-1265"
                ]
            },
            "title": "Reentrancy Attack",
            "description": "The attacker can drain tokens from the platform by abusing the withdrawAll() function of the FeederPool contract with the reentrancy attack.",
            "severity": "Medium",
            "contract": "FeederPool",
            "function": "withdrawAll()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Borrowing Credit Interest Not Included",
            "description": "Users can borrow tokens more than the credit limit given by the platform due to incorrect calculation of borrowing interest.",
            "severity": "Medium",
            "contract": "LoanRegistry MasterLender",
            "function": "repay()",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Loan Repayment Date Not Enforced",
            "description": "The platform and lender benefit will be less than expected due to the low borrow interest rate.",
            "severity": "Medium",
            "contract": "MasterLender.sol",
            "function": "repay()",
            "lineNumber": "131-133"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-841"
                ]
            },
            "title": "Insufficient Liquidation Flow Check",
            "description": "The admin can suspend the loan and change the borrower status without any criteria, which may cause bad debt to the platform and damage to the principal of the lenders.",
            "severity": "Medium",
            "contract": "MasterLiquidator",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "Business Design Flaw",
            "description": "When the borrower cannot repay the loan within the loan duration, the platform owner will liquidate the loan. However, since it is an uncollateralized loan, there is no collateral asset to be seized. Resulting in a bad debt to all platform users.",
            "severity": "Medium",
            "contract": "MasterLiquidator",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improper Feeder Pool Count Increment",
            "description": "The _feederPoolCount state will be used in the _impairmentCalculator() function, resulting in a miscalculation of the _interestFactorMain and _interestFactorFeeder states.",
            "severity": "Medium",
            "contract": "PoolRegistry.sol",
            "function": "setFeederPoolStatus",
            "lineNumber": "66-78"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Missing Input Validation",
            "description": "The controlling authorities can set both admin and governor as the same address, breaking the logic of dual signature requirements by admin and governor for critical contract operations.",
            "severity": "Medium",
            "contract": "Governance.sol",
            "function": [
                "constructor()",
                "setPendingAdmin()",
                "setPendingGovernor()"
            ],
            "lineNumber": [
                "47",
                "116",
                "135"
            ]
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Repay Interest Miscalculation",
            "description": "In the loan repayment flow, allowing a borrower to make a partial principal repayment by inputting the repay amount, in case that amount is greater than the borrowed principal, the excess amount will be paid as the borrowing interest. This can lead to miscalculated borrowing interest if the borrower repays their entire principal and a portion of borrowing interest.",
            "severity": "Low",
            "contract": "MasterLender.sol",
            "function": "repay()",
            "lineNumber": "145"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-191"
                ]
            },
            "title": "Integer Underflow",
            "description": "The repay() function in the MasterLender contract will be reverted due to integer underflow. However, users can adjust the amount of repayment to avoid the revert.",
            "severity": "Very Low",
            "contract": "MasterLender",
            "function": "repay()",
            "lineNumber": "N/A"
        },
        {
            "id": 16,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-273"
                ]
            },
            "title": "Insufficient Logging for Privileged Functions",
            "description": "Privileged functions that are executable by the controlling parties are not logged properly by emitting events.",
            "severity": "Very Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 17,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Unsafe Token Transfer",
            "description": "Improper adherence to coding standard CWE-710, using transfer() and transferFrom() functions instead of safeTransfer() and safeTransferFrom() from OpenZeppelin's SafeERC20 contract.",
            "severity": "Info",
            "contract": "Treasury.sol",
            "function": "transferFromTreasury",
            "lineNumber": "28"
        },
        {
            "id": 18,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-232"
                ]
            },
            "title": "Inexplicit Solidity Compiler Version",
            "description": "The Solidity compiler versions declared in the smart contracts were not explicit, which may potentially result in compatibility issues.",
            "severity": "Info",
            "contract": [
                "DataVault",
                "Vaultable",
                "Governance",
                "Multiownable",
                "BorrowerRegistry",
                "CreditProtectionPool",
                "LoanRegistry",
                "LoanWallet",
                "InterestRateCalculator",
                "MasterLender",
                "MasterLiquidator",
                "FeederPool",
                "MasterPool",
                "PoolRegistry",
                "RevenueDistribution",
                "MasterRewards",
                "RewardLocker",
                "DeveloperTreasury",
                "DistributionTreasury",
                "Treasury"
            ],
            "function": "N/A",
            "lineNumber": [
                "2"
            ]
        }
    ]
}