{
    "path": "./Audit_Reports_2024/QuillAudits/Akt.io Smart Contract Audit Report - QuillAudits.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x70cbf5e72a85b41808ef20f6eb05a9b8f223f220"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "A.1 Floating pragma",
            "description": "The solidity compiler version is not fixed, which can lead to unexpected behavior and security vulnerabilities.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1076"
                ]
            },
            "title": "A.2 Use of require statement instead of whenNotPaused modifier",
            "description": "_beforeTokenTransfer() uses a require statement which works similar to whenNotPaused from a Pausable contract. Here whenNotPaused modifier can be used instead of using require check statement.",
            "severity": "Medium",
            "contract": "CommonPausableERC20",
            "function": "_beforeTokenTransfer()",
            "lineNumber": "#L928, #L931"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "A.4 Incorrect error message while burning tokens if contract is paused",
            "description": "If the contract is in paused state and someone calls burn function then the transaction will revert as expected but the error message that contract gives in this case can create confusion.",
            "severity": "Medium",
            "contract": "CommonPausableERC20",
            "function": "_burn",
            "lineNumber": "#L427"
        }
    ]
}