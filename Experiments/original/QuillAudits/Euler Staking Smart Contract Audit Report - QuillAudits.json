{
    "path": "./Audit_Reports_2024/QuillAudits/Euler Staking Smart Contract Audit Report - QuillAudits.pdf",
    "project_info": {
        "url": "https://github.com/eulertools/contracts",
        "commit_hash": "c3fa6a76387024916cdb8f645f686c841aea6464",
        "address": "0xb18fab4c6f054e734ea169561787cc87928f54ee",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-237"
                ],
                "4": [
                    "CWE-239"
                ]
            },
            "title": "poolInfo[] stores only one element",
            "description": "The array structure can be simplified into a single struct variable.",
            "severity": "Low",
            "contract": "N/A",
            "function": "addPool()",
            "lineNumber": "43"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Missing zero address validation",
            "description": "When setting the Euler token address, it should be checked for zero address. Otherwise, tokens sent to the zero address may be burnt forever.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Staking can start without adding pool",
            "description": "In the function startStaking(), the require statement checks if there is an existing pool and the staking has not started. But after the contract's deployment, it is always going to be true.",
            "severity": "Low",
            "contract": "N/A",
            "function": "startStaking()",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Redundant Code",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-229"
                ],
                "4": [
                    "CWE-232"
                ]
            },
            "title": "Incorrect versions of Solidity",
            "description": "The audit report does not specify a particular version of Solidity to be used, which may lead to compatibility issues.",
            "severity": "Medium",
            "contract": "EulerStaking",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "Missing Events for Significant Transactions",
            "description": "The missing event makes it difficult to track off-chain liquidity fee changes. An event should be emitted for significant transactions calling the following functions: setEulerPerBlock.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "setEulerPerBlock()",
            "lineNumber": "N/A"
        }
    ]
}