{
    "path": "./Audit_Reports_2024/QuillAudits/Acknoledger Smart Contract Audit Report_2 - QuillAudits.pdf",
    "project_info": {
        "url": "https://github.com/DefiWizard/acknoledger-contracts-antisniperbot",
        "commit_hash": "N/A",
        "address": "0x9Ce6edF92a34ec4ee9311d9518c11Ee164b998CC",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ]
            },
            "title": "Renounce Ownership",
            "description": "The imported contracts are not used. It's better to remove these imports.",
            "severity": "Informational",
            "contract": "AcknoLedgerToken",
            "function": "N/A",
            "lineNumber": "5-6"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Floating pragma",
            "description": "The contract makes use of the floating-point pragma ^0.8.0 Contracts should be deployed using the same compiler version and flags that were used during the testing process.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "2"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "External Calls Inside a Loop",
            "description": "The loop inside the revokeBlocked() function loops over the array _holders and for every element, an external call to the LPS contract is made. This can lead to out-of-gas errors or call failures depending on the size of the array and logic of the external contract.",
            "severity": "Informational",
            "contract": "AcknoLedger",
            "function": "revokeBlocked()",
            "lineNumber": "75-80"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Redundant variable initialization",
            "description": "If a variable is not set/initialized, it is assumed to have the default value (0, false, 0x0 etc depending on the data type). If you explicitly initialize it with its default value, you are just wasting gas.",
            "severity": "Informational",
            "contract": "AcknoLedgerToken",
            "function": "N/A",
            "lineNumber": "9"
        }
    ]
}