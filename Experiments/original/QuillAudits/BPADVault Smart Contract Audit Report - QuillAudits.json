{"path": "./Audit_Reports_2024/QuillAudits/BPADVault Smart Contract Audit Report - QuillAudits.pdf", "project_info": {"url": "https://github.com/theblockpad/BPADVault", "commit_hash": "6bfe159a79b6c756f86fe18571cb1dadcc4ba3eb", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"], "2": ["CWE-1339"]}, "title": "Loss of precision while calculating vesting discount", "description": "The vesting discount calculation in the method createMultipleLocks expects the result to not have any floating values. Since solidity does not support floating-point values out of the box, the vesting discount percentage calculation for very small fixed-point numbers would get rounded off to zero.", "severity": "Informational", "contract": "N/A", "function": "createMultipleLocks", "lineNumber": "142-145"}, {"id": 1, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Supports all token contracts", "description": "The implementation does not support tokens with transfer fees or custom implementations without return values, which can cause issues during withdrawals and escrow creation.", "severity": "Low", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-691"], "2": ["CWE-841"]}, "title": "Violation of checks-effects-interaction pattern", "description": "Consider following the checks-effects-interaction pattern.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "User can get vesting discount for single escrow", "description": "The createMultipleLocks method rewards the user with a discount in fee for creating multiple escrows without checking for a minimum number of escrows before applying a discount, allowing any user to create one escrow using this method and still get a discount.", "severity": "Low", "contract": "N/A", "function": "createMultipleLocks", "lineNumber": "142-145"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Expects the transfer methods to always revert/return", "description": "The functions lockTokens(), withdrawTokens() and createMultipleLocks() all expect the transfer and transferFrom methods to always throw or return a boolean value on success/failure.", "severity": "Low", "contract": "N/A", "function": ["lockTokens()", "withdrawTokens()", "createMultipleLocks()"], "lineNumber": ["418", "128", "178-184"]}]}