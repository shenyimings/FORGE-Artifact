{
    "path": "./Audit_Reports_2024/QuillAudits/Multipad Smart Contract Audit Report - QuillAudits.pdf",
    "project_info": {
        "url": "https://github.com/multipad123/mpad_quillhash",
        "commit_hash": "c0e3d34af0b8a6ee47a4df379ddf7c07308a1f83",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Locked Tokens",
            "description": "In the function claimPurchasedTokens, a user can buy an amount of tokens and after he can claim them with the function claimPurchasedTokens but these tokens are locked and cannot be claimed due to the modifier validateClaim.",
            "severity": "High",
            "contract": "N/A",
            "function": "claimPurchasedTokens",
            "lineNumber": "255"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "Race Condition",
            "description": "The standard ERC20 implementation contains a widely known racing condition in its approve function, wherein a spender is able to witness the token owner broadcast a transaction altering their approval and quickly sign and broadcast a transaction using transferFrom to move the current approved amount from the owner\u2019s balance to the spender.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "approve(address,uint256)",
            "lineNumber": "299"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Integer Overflows and Underflows",
            "description": "Incrementations done using the usual addition operator might cause integer overflows.",
            "severity": "High",
            "contract": "N/A",
            "function": "Multiple functions",
            "lineNumber": "528"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Missing Time and Amount verifications",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Invalide Value in the lockNumbers conditions",
            "description": "A require condition in the validateClaim modifier contains a lockNumber equals to 5 which is not treated in the rest of the code.",
            "severity": "High",
            "contract": "N/A",
            "function": "validateClaim",
            "lineNumber": "563"
        }
    ]
}