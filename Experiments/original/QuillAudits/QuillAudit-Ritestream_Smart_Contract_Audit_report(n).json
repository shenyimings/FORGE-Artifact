{
    "path": "./Audit_Reports_2024/QuillAudits/QuillAudit-Ritestream_Smart_Contract_Audit_report(n).pdf",
    "project_info": {
        "url": "https://github.com/ritestream/ritestream-contract",
        "commit_hash": "N/A",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-697"
                ]
            },
            "title": "Comparison with boolean constant",
            "description": "Comparison with a boolean constant is not needed as the boolean constant variable can be used directly",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "101, 132, 150, 204"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ],
                "4": [
                    "CWE-401"
                ]
            },
            "title": "User can withdraw more than deposited amount",
            "description": "There must be a mapping to keep track of how much a user deposited in the Vault. Currently, it is possible that a user can withdraw more than",
            "severity": "High",
            "contract": "N/A",
            "function": "userWithdraw(address,uint256)",
            "lineNumber": "46"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Compiler version not fixed",
            "description": "Contracts should be deployed using the same compiler version/flags with which they have been tested. Locking the pragma for e.g. by not using ^ in pragma solidity 0.5.10) ensures that contracts do not accidentally get deployed using an older compiler version with unfixed bugs.",
            "severity": "High",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Redundant fallback function",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Send instead of transfer",
            "description": "Using send instead of transfer can lead to unintended behavior and potential loss of funds.",
            "severity": "High",
            "contract": "Vault",
            "function": "userWithdraw(address,uint256)",
            "lineNumber": "46"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Style guide violation",
            "description": "N/A",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Unchecked external call",
            "description": "The safeTransfer function of ERC20(RITE) is called without checking its return value, which may lead to unexpected behavior if the transfer fails.",
            "severity": "High",
            "contract": "N/A",
            "function": "withdraw()",
            "lineNumber": "16"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Unchecked math",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Unsafe type inference",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ],
                "4": [
                    "CWE-766"
                ]
            },
            "title": "Implicit visibility level",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Missing appropriate value checks for _startDate",
            "description": "startDate can be set to any arbitrary value such as 0 or any date of the past.",
            "severity": "Medium",
            "contract": "TeamVesting",
            "function": "constructor()",
            "lineNumber": "38"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "N/A",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "For loop over dynamic array",
            "description": "Programming patterns that are harmless in centralized applications can lead to Denial of Service conditions in smart contracts when the cost of executing a function exceeds the block gas limit.",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "59, 60"
        }
    ]
}