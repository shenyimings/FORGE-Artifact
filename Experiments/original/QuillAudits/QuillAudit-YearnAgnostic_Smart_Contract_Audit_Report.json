{"path": "./Audit_Reports_2024/QuillAudits/QuillAudit-YearnAgnostic_Smart_Contract_Audit_Report.pdf", "project_info": {"url": "https://github.com/Yearn-Agnostic/contracts", "commit_hash": "74791b1f2d7ed382bf865069433ddf284537a13a", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Overpowered owner", "description": "The contract is tightly coupled to the owner, making some functions callable only by the owner\u2019s address. This poses a serious risk: if the private key of the owner gets compromised, then an attacker can gain control over the contract.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-435"]}, "title": "Approve function of ERC-20 is vulnerable", "description": "A security issue called 'Multiple Withdrawal Attack' originates from two methods in the ERC20 standard for approving and transferring tokens. The use of these functions in an adverse environment (e.g., front-running) could result in more tokens being spent than what was intended.", "severity": "High", "contract": "N/A", "function": "approve()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-693"], "2": ["CWE-807"], "3": ["CWE-302"]}, "title": "Use of block.timestamp should be avoided", "description": "Malicious miners can alter the timestamp of their blocks, especially if they can gain advantages by doing so.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "The compiler version should be fixed", "description": "It's recommended to lock the compiler version in code, as future compiler versions may handle certain language constructions in a way the developer did not foresee.", "severity": "Low", "contract": "TokenYFIAG.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-710"]}, "title": "Coding Style Issues", "description": "Coding style issues influence code readability and, in some cases, may lead to bugs in future. Smart Contracts have a naming convention, indentation and code layout issues.", "severity": "Low", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-710"]}, "title": "Order of layout", "description": "The order of functions as well as the rest of the code layout does not follow the solidity style guide.", "severity": "Low", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}