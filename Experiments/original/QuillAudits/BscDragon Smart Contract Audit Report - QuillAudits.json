{
    "path": "./Audit_Reports_2024/QuillAudits/BscDragon Smart Contract Audit Report - QuillAudits.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-237"
                ],
                "4": [
                    "CWE-239"
                ]
            },
            "title": "Not complying with BEP20 standard completely",
            "description": "The contract doesn't implement/define a function as getOwner, which is mandatory according to the BEP20 standard, and may prevent the token from flowing across the Binance Chain and Binance Smart Chain.",
            "severity": "Low",
            "contract": "Dragon.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Multiple unlocked pragmas",
            "description": "Contracts should be deployed with the same compiler version and flags that they have been tested thoroughly. Locking the pragma helps to ensure that contracts do not accidentally get deployed using, for example, an outdated compiler version that might introduce bugs that affect the contract system negatively.",
            "severity": "Informational",
            "contract": "A. Dragon.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}