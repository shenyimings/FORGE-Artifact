{"path": "./Audit_Reports_2024/QuillAudits/Realblock Smart Contract Audit Report - QuillAudits.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-691"], "2": ["CWE-841"]}, "title": "Ownership Transfer must be a Two-step Process", "description": "Contracts are integrated with the standard Openzeppelin ownable contract, however, when the owner mistakenly transfers ownership to an incorrect address, ownership is completely removed from the original owner and cannot be reverted. The transferOwnership() function in the ownable contract allows the current owner to transfer his privileges to another address. However, inside transferOwnership(), the newOwner is directly stored in the storage, owner. It would be much safer if the transition is managed by implementing a two-step approach: _transferOwnership() and _updateOwnership().", "severity": "Low Severity Issues", "contract": "CommonBEP20.sol", "function": "transferOwnership()", "lineNumber": "N/A"}]}