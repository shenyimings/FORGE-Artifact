{
    "path": "./Audit_Reports_2024/QuillAudits/QuillAudit-Unifarm_Token_Smart_Contract_Audit_Report.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "0x2eb2d3a3cab6bb3ced92625e4a8cf054748d055b"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-477"
                ]
            },
            "title": "Older compiler used",
            "description": "N/A",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-1025"
                ]
            },
            "title": "Block.timestamp used for comparisons",
            "description": "Avoid using block.timestamp as it can be manipulated by miners.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "#556, 630"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-1025"
                ],
                "3": [
                    "CWE-595"
                ],
                "4": [
                    "CWE-597"
                ]
            },
            "title": "Wrong check in require statement",
            "description": "The require statement checks balances[holder] instead of lockedTokens[holder], which can cause a revert on subtraction overflow if the supplied amount is more than the number of locked tokens of the holder.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "[705]"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-191"
                ]
            },
            "title": "Revert on Subtraction Overflow",
            "description": "Can cause revert on subtraction overflow if the supplied amount is more than the number of locked tokens of the holder.",
            "severity": "Low",
            "contract": "N/A",
            "function": "transferFrom()",
            "lineNumber": "#L596"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-191"
                ]
            },
            "title": "Zero Address Checks missing in transferFrom function",
            "description": "Add checks for spenderAllowance, such that it should be greater than rawAmount to avoid revert on subtraction overflow.",
            "severity": "Low",
            "contract": "N/A",
            "function": "transferFrom()",
            "lineNumber": "#L590-604"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-693"
                ]
            },
            "title": "ERC20 approve() race condition",
            "description": "A widely-known racing condition in ERC20 implementation's approve function, allowing a spender to spend their entire approval amount twice.",
            "severity": "Low",
            "contract": "N/A",
            "function": "approve()",
            "lineNumber": "N/A"
        }
    ]
}