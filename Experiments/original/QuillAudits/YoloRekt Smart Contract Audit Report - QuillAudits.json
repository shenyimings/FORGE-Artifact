{"path": "./Audit_Reports_2024/QuillAudits/YoloRekt Smart Contract Audit Report - QuillAudits.pdf", "project_info": {"url": "https://github.com/YOLOrekt/base-contracts", "commit_hash": "94e766f8c911542b17c0104babc636bf056945bc", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Use safeTransferFrom for token transfers as USDC is an upgradeable contract", "description": "USDC being an upgradeable contract requires using safeTransferFrom for token transfers or checking return values of token transfers.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-693"], "2": ["CWE-358"]}, "title": "StableCoinToken is supposed to be an interface", "description": "N/A", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "ERC20Burnable comes with one more burn function that burnFrom", "description": "The ERC20Burnable contract has an additional burn function called burnFrom, which poses a risk as liquidity providers can bypass the minimum amount of 400 USDC by burning down shares they don't require.", "severity": "Medium", "contract": "yolosharetokens", "function": "burnFrom()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Insufficient uint space to hold possible baseTypes", "description": "The nonces _nftNonce and _semiFtNonce are of type uint120 which can only hold up to 2^120-1 values, but they need to accommodate all possible base types which is 2^126-1, leading to insufficient uint space.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Exploiting rewards#1", "description": "A user can exploit this by minting new NFTs and claiming rewards from BiddersRewards by calling harvest, then again minting a new NFT that overwrites its previous NFT tracked by usersTokens, then placing a bid such that bidCount increases by 1 and then claiming rewards by calling harvest again.", "severity": "High", "contract": "BiddersRewards", "function": "harvest()", "lineNumber": "N/A"}]}