{"path": "./Audit_Reports_2024/QuillAudits/Beimagine Smart Contract Audit Report - QuillAudits.pdf", "project_info": {"url": "https://github.com/Quillhash/Project71-LOYALTY", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Expired points are not Deducted", "description": "The contract does not remove expired points, which can prevent it from allocating new points and may lead to a loss of all points if not addressed.", "severity": "Medium", "contract": "LoyaltyContract", "function": "N/A", "lineNumber": "57, 132"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"]}, "title": "Centralization Risk", "description": "Using the \u201cOnlyOwner\u201d modifier means that only the owner of the contract will be able to call the functions regarding allocation of new points, modification of points, redeem points, etc. It poses two risks, first one is in a scenario where the owner will lose their Private Key then in that case the contract will be frozen, will never be able to work again, and all the points could be lost because all the externally callable functions contain the \u201cOnlyOwner\u201d modifier.", "severity": "Low", "contract": "LoyaltyContract", "function": "N/A", "lineNumber": "N/A"}]}