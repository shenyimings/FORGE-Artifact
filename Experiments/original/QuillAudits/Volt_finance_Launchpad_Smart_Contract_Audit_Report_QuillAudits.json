{"path": "./Audit_Reports_2024/QuillAudits/Volt_finance_Launchpad_Smart_Contract_Audit_Report_QuillAudits.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "daysClaimed can get incremented by 1", "description": "claim() increments userInfo.daysClaimed by the daysVested returned by calculateUserClaim(), but this function returns daysVested as vestingDays when elapsedDays >= vestingDay, which can cause incorrect addition to userInfo.daysClaimed.", "severity": "Low", "contract": "Launchpad", "function": "claim()", "lineNumber": "L327"}, {"id": 1, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1173"]}, "title": "ERC20 contracts with no optional method like decimal() can break the functionality", "description": "In getUserBuyAmount() on L228 it calls decimal() on saleTokens which may revert the transaction if saleToken has no decimal() function.", "severity": "Medium", "contract": "N/A", "function": "getUserBuyAmount()", "lineNumber": "L228"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Contracts are using floating pragma (pragma solidity ^0.8.0)", "description": "The contracts are using a floating pragma version (^0.8.0) which can lead to unexpected behavior and security issues due to potential compiler updates.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}