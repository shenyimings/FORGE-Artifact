{"path": "./Audit_Reports_2024/Hacken/Hacken_Definitely_Definitely-LOC_-128_P-2023-051_1_20231206-12_43.pdf", "project_info": {"url": "https://github.com/DefinitelySoFi/SoFiContract", "commit_hash": "2e9fbee490ab0a9b0d8bb8e228964f02154f61d3", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "F-2023-0029 - Possible Lock On The First 100 Units Of Initial Key", "description": "The contract is designed to never let the last key (first 100 units of initial key) to be sold, which may cause inconsistency and potential loss for users.", "severity": "Medium", "contract": "DefinitelyKeysV1.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "F-2023-0030 - Highly Permissive Role", "description": "The owner can adjust multiple fees without checks or bounds, potentially making it unviable for users to withdraw ETH from the contract.", "severity": "Low", "contract": "DefinitelyKeysV1.sol", "function": "N/A", "lineNumber": "38-52"}, {"id": 2, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "F-2023-0021 - Floating Pragma", "description": "A floating pragma in Solidity refers to the practice of using a pragma statement that does not specify a fixed compiler version but instead allows the contract to be compiled with any compatible compiler version.", "severity": "Info", "contract": "DefinitelyKeysV1.sol", "function": "N/A", "lineNumber": "L2"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "F-2023-0022 - Missing checks for address(0)", "description": "The contract does not properly check or prevent interactions with the zero address, leading to unintended behavior such as accidental token transfers.", "severity": "Info", "contract": "DefinitelyKeysV1.sol", "function": "setFeeDestination()", "lineNumber": "34-36"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "F-2023-0023 - Custom Errors In Solidity For Gas Efficiency", "description": "Custom errors provide a way to define more descriptive and semantically meaningful error conditions without relying on string messages, reducing gas consumption and making transactions less expensive.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "59, 60, 61, 63, 70, 74, 85, 87, 95, 99, 106, 109, 114, 116, 117, 131, 134, 139, 140, 141"}, {"id": 5, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Unneeded Initializations Of Uint256 And Bool Variable To 0/False", "description": "Initializing `uint256` variables to `0` and `bool` variables to `false` when they are not subsequently used in the code can lead to unnecessary gas consumption and code clutter.", "severity": "Info", "contract": "DefinitelyKeysV1.sol", "function": "N/A", "lineNumber": "24"}, {"id": 6, "category": {"1": ["CWE-284"], "2": ["CWE-282"], "3": ["CWE-708"]}, "title": "F-2023-0025 - Ownership Irrevocability Vulnerability", "description": "The contract allows the owner to adjust parameters such as setProtocolFeePercent and retains the default renounceOwnership function from Ownable library, making it possible for the owner to renounce ownership, resulting in an ownerless contract.", "severity": "N/A", "contract": "N/A", "function": "renounceOwnership", "lineNumber": "N/A"}]}