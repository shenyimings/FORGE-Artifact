{"path": "./Audit_Reports_2024/Hacken/Hacken_Common-Wealth_SCA-Common-Wealth_ERC721_Nov2023_P-2023-057_5_20240122-11_35-1.pdf", "project_info": {"url": "https://github.com/CommonWealthDAO/commonwealth-contracts-audit", "commit_hash": "3c5fb9f4addea08012b47e3ae080cd6b514d7b75", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"], "2": ["CWE-190"], "3": ["CWE-680"]}, "title": "F-2023-0100 - Gas Overconsumption Leads To Deny Of Service", "description": "In blockchains, each transaction has a Gas limit and extensive processing, such as iterating through large collections, can be gas-overconsuming. The function `_calculateTotalCarryFeeInBlock()` iterates every NFT owner to calculate the carry fee. However, iterating an unbounded array may cause the transaction to be failed due to exceeding Gas limit.", "severity": "High", "contract": "InvestmentFund", "function": "_calculateTotalCarryFeeInBlock()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "F-2023-0095 - Requirement Violation In Carry Fee Rates", "description": "There exists a discrepancy in the fee calculation logic of the codebase, specifically related to the parameters mentioned in the documentation.", "severity": "Medium", "contract": "LibFund.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "F-2023-0101 - Missing Slippage Check: Sandwich Attack", "description": "The current implementation lacks crucial slippage checks, leaving the protocol vulnerable to potential exploitation, specifically susceptible to a 'sandwich attack' commonly observed in DeFi ecosystems.", "severity": "Medium", "contract": "UniswapSwapper", "function": "sellVestedToInvestmentFund()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "F-2023-0036 - Missing Checks For `Address(0)`", "description": "The contract does not properly check or prevent interactions with the zero address, leading to unintended behavior.", "severity": "Low", "contract": ["Project", "StakingWlth", "InvestmentFund", "StakingGenesisNFTVesting"], "function": "N/A", "lineNumber": ["86", "87", "90", "91", "165", "166", "167", "168", "61", "62"]}, {"id": 4, "category": {"1": ["CWE-284"], "2": ["CWE-282"], "3": ["CWE-708"]}, "title": "F-2023-0017 - Owner Can Renounce Ownership", "description": "The smart contract under inspection inherits from the `Ownable` library, allowing the owner to renounce ownership using the `renounceOwnership()` function, making the contract ownerless and its adjustable parameters immutable.", "severity": "N/A", "contract": "Multiple contracts (InvestmentFundRegistry, InvestmentNFT, OwnablePausable, Project, StakingGenesisNFT, StakingWlth, UniswapQuoter)", "function": "renounceOwnership()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-682"]}, "title": "F-2023-0047 - Cache State Variable Array Length In For Loop", "description": "Failing to cache the array length when iterating through arrays in Solidity can have significant performance and gas cost implications.", "severity": "Info", "contract": ["StakingGenesisNFT", "InvestmentFund"], "function": "N/A", "lineNumber": ["137", "143", "145", "156", "162", "164", "227"]}, {"id": 6, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Increments Can Be `Unchecked` In For-Loops", "description": "Newer versions of the Solidity compiler will check for integer overflows and underflows automatically, but this can increase Gas costs. Using unchecked feature of Solidity can save gas costs when an unsigned integer is guaranteed to never overflow.", "severity": "Info", "contract": ["GenesisNFT", "StakingGenesisNFT"], "function": "N/A", "lineNumber": ["144", "159", "172", "173", "227", "303", "88", "92", "114", "118", "137", "143", "145", "641", "653"]}, {"id": 7, "category": {"1": ["CWE-682"]}, "title": "Custom Errors In Solidity For Gas Efficiency", "description": "Using custom errors instead of revert strings can significantly reduce gas consumption, leading to more gas-efficient contracts.", "severity": "Info", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-710"], "2": ["CWE-1120"], "3": ["CWE-1060"]}, "title": "F-2023-0052 - Revert String Size Optimization", "description": "Shortening revert strings to fit within 32 bytes will decrease deployment time and decrease runtime Gas when the revert condition is met.", "severity": "Info", "contract": ["Project", "GenesisNFT", "StakingGenesisNFT", "StakingWlth"], "function": "N/A", "lineNumber": ["133-134", "214", "302", "310", "330", "54", "60", "66", "75", "82", "203", "80"]}, {"id": 9, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "F-2023-0091 - Redundant Functions", "description": "The functions `initialiseSmallNft()` and `initialiseLargeNft()` appear to be redundant as they can be conveniently initialized within the `initialize()` function.", "severity": "Info", "contract": "StakingGenesisNFT", "function": "initialiseSmallNft() and initialiseLargeNft()", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-691"], "2": ["CWE-670"], "3": ["CWE-483"]}, "title": "F-2023-0094 - Complex If Statement Condition", "description": "The control flow within the `invest()` function of the `InvestmentFund` contract might lead to an unreachable 'if condition' when checking if the new total investment exceeds the cap.", "severity": "Info", "contract": "InvestmentFund", "function": "invest()", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "F-2023-0096 - Unchecked Return Value Of Approve Function", "description": "The deployFundsToProject() function lacks a step in its implementation by not verifying the return value of the call to the approve() function, which can lead to unforeseen issues and jeopardize the intended functionality of the contract.", "severity": "Info", "contract": "InvestmentFund", "function": "deployFundsToProject(address, uint256)", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-563"]}, "title": "F-2023-0098 - Unused Variables", "description": "Unused variables are increasing deployment cost, decrease code readability and make the code look like some functionalities are unfinished.", "severity": "Info", "contract": "StakingWlth, Wlth", "function": "N/A", "lineNumber": "N/A"}, {"id": 13, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "F-2023-0102 - Redundant Require Statement", "description": "The require statement on line 203 should be removed to prevent complexity and users from spending unnecessary Gas.", "severity": "Info", "contract": "InvestmentFund", "function": "withdraw()", "lineNumber": "203"}, {"id": 14, "category": {"1": ["CWE-435"]}, "title": "CEI Pattern Violation In Stake Function", "description": "In `stake()` function, the CEI pattern is violated. Firstly, the stake info of users is updated and then the tokens are received from the users.", "severity": "Info", "contract": "StakingGenesisNFT", "function": "stake()", "lineNumber": "N/A"}, {"id": 15, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "F-2023-0104 - Redundant Control In Function `release`", "description": "The current implementation of the token vesting contract includes redundant checks in the `release()` function.", "severity": "Info", "contract": "StakingGenesisNFTVesting.sol", "function": "release(uint256 amount, address beneficiary)", "lineNumber": "N/A"}, {"id": 16, "category": {"1": ["CWE-710"], "2": ["CWE-1164"]}, "title": "F-2023-0123 - Unused Imports", "description": "Unused import declarations reduce code readability while increasing complexity and costing extra Gas.", "severity": "Info", "contract": ["GenesisNFT", "InvestmentNFT", "PeriodicVesting", "Project", "StakingGenNFTVesting"], "function": "N/A", "lineNumber": "N/A"}, {"id": 17, "category": {"1": ["CWE-682"]}, "title": "F-2023-0114 - Time Manipulation Vulnerability in NFT Release", "description": "The `releasePerNFT()` function is vulnerable to a time manipulation attack due to an unverified user-provided timestamp, allowing malicious actors to input a future timestamp and trick the system into releasing more tokens than intended.", "severity": "Critical", "contract": "N/A", "function": "releasePerNFT()", "lineNumber": "N/A"}]}