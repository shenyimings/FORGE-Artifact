{"path": "./Audit_Reports_2024/Hacken/SuperSloth-Audit_11092023.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "C01. Faulty Vesting Interval Reversion Vulnerability", "description": "The airdrop function incorrectly assumes tokens for a specific month have already been claimed, even when they have not, due to an incorrect relational operator used in the conditional check.", "severity": "Critical", "contract": "N/A", "function": "airdrop", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "M01. Ownership Irrevocability Vulnerability in Smart Contract", "description": "The contract does not provide a mechanism to transfer ownership to another address or account and retains the default renounceOwnership function from Ownable, making it impossible to adjust parameters after the owner renounces ownership.", "severity": "Medium", "contract": "ERC20Upgradeable.sol: SSloth, PresaleUpgradeable.sol: Presale", "function": "renounceOwnership()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"], "2": ["CWE-191"]}, "title": "L01. Integer Underflow", "description": "The airdrop function is vulnerable to an integer underflow error due to flawed claimedCount logic, leading to discrepancy between calculated claimableCount and claimedCount.", "severity": "Low", "contract": "PresaleUpgradeable.sol", "function": "airdrop()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "L02. Missing Zero Address Validation", "description": "The smart contract does not validate for the zero address (0x0) when handling address parameters, which might lead to unintended external calls to the 0x0 address and potential loss of funds.", "severity": "Low", "contract": "ERC20Upgradeable.sol, PresaleUpgradeable.sol", "function": "initialize()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "L03. Floating Pragma", "description": "The contract utilizes a floating pragma notation ^0.8.18 which can pose risks since it might lead to the contract's deployment with a compiler version different from the one it was rigorously tested with.", "severity": "Low", "contract": "./contracts/PresaleUpgradeable.sol and ./contracts/ERC20Upgradeable.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-391"]}, "title": "L04. Missing Events", "description": "Events are essential for monitoring and reacting to contract state changes. Several functions change the state but do not emit events.", "severity": "Low", "contract": "PresaleUpgradeable.sol", "function": ["changeTokenPrice()", "changeStableCoins()", "changeClaimableCount()", "setPause()"], "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-862"], "4": ["CWE-638"], "5": ["CWE-424"], "6": ["CWE-425"]}, "title": "L05. Missing Controls", "description": "Missing controls may lead to unauthorized access or data manipulation.", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-682"]}, "title": "L06. Incorrect Calculation Of Claimable SSloth Token", "description": "The getClaimableAmountOf function does not account for tokens already claimed (claimedCount), leading to overestimations of claimable amount.", "severity": "Low", "contract": "PresaleUpgradeable.sol", "function": "getClaimableAmountOf(address user)", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-664"], "2": ["CWE-400"], "3": ["CWE-1235"]}, "title": "I01. Cache State Variables", "description": "Accessing state variables repeatedly, especially inside loops, is a known inefficiency in Ethereum smart contracts.", "severity": "Informational", "contract": "PresaleUpgradeable.sol", "function": "_airdrop ( uint256 count) internal, withdraw () external onlyOwner", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-710"], "2": ["CWE-1120"], "3": ["CWE-1060"]}, "title": "I02. Immutable Keyword For Gas Optimization", "description": "Variables that do not change can be marked as immutable to greatly improve Gas costs.", "severity": "Informational", "contract": "PresaleUpgradeable.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Avoid Unnecessary Initializations Of Uint256 And Bool Variable To 0/false", "description": "Unnecessary initialization of uint256 and bool variables to 0 and false respectively can waste gas.", "severity": "Informational", "contract": "PresaleUpgradeable.sol", "function": "N/A", "lineNumber": "./contracts/PresaleUpgradeable.sol: for (uint256 i = 0;"}, {"id": 11, "category": {"1": ["CWE-710"], "2": ["CWE-1120"]}, "title": "I04. Custom Errors For Better Gas Efficiency", "description": "Using custom errors instead of revert strings can significantly reduce gas costs, especially when deploying contracts.", "severity": "Informational", "contract": "./contracts/PresaleUpgradeable.sol, ./contracts/ERC20Upgradeable.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "I05. Redundant Mapping and Setter Function in Smart Contract", "description": "Redundant mapping and setter function in smart contract can lead to unnecessary gas consumption and potential security risks.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}