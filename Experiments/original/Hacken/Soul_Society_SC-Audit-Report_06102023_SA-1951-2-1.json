{
    "path": "./Audit_Reports_2024/Hacken/Soul_Society_SC-Audit-Report_06102023_SA-1951-2-1.pdf",
    "project_info": {
        "url": "https://github.com/SoulSocietyDev/soulsociety-sbt-contract/tree/master",
        "commit_hash": "13f46a1",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "H01. Requirements Violation: The Supply of HON Tokens Is Not Limited",
            "description": "There is a mismatch between the documentation and the implementation. The documentation states that the maxTotal supply is expected to be 1,000,000,000. However, the implementation lacks the necessary functionality to limit the supply to the previously mentioned number.",
            "severity": "High",
            "contract": "HONToken",
            "function": "mint()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "H02. Token Burn Does Not Follow ERC721 Standard And Leads To Inconsistencies",
            "description": "The token burn function does not follow the ERC721 standard, leading to inconsistencies in _balances and _owners updates, incorrect functioning of _exists(), and incorrect updates to _totalUsers.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "_burn",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ],
                "3": [
                    "CWE-266"
                ]
            },
            "title": "Too Highly Permissive Role Allows Owner To Burn Tokens From Users Without Their Consent Or Previous Notice",
            "description": "The owner has a too highly permissive role allowing them to burn tokens from users without their consent or previous notice, potentially leading to unauthorized token burning.",
            "severity": "Critical",
            "contract": "N/A",
            "function": "_burn",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "M01. Missing Safety Check for Non-EOA Receivers of Tokens Can Lead to Locked Tokens",
            "description": "Missing safety check allows non-EOA receivers of tokens to lead to locked tokens",
            "severity": "Medium",
            "contract": "SoulSocietySBT",
            "function": "_safeMint()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ],
                "4": [
                    "CWE-638"
                ]
            },
            "title": "M02. Missing User Approval For Growth Level Update Results In Highly Centralized Growth System",
            "description": "The owner of the SoulBound token contract can increase or decrease the growth level of the tokens without previous on-chain user request, resulting in a highly centralized growth system.",
            "severity": "Medium",
            "contract": "SoulSocietySBT",
            "function": "_growUp() and _setGrowthToZero()",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L01. Floating Pragma",
            "description": "Contracts should be deployed with the same compiler version and flags that they have been tested thoroughly.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-221"
                ],
                "3": [
                    "CWE-223"
                ],
                "4": [
                    "CWE-778"
                ]
            },
            "title": "L02. Missing Events for Critical Value Updates",
            "description": "Events should be emitted after sensitive changes take place, to facilitate tracking and notify off-chain clients following the contract\u2019s activity.",
            "severity": "Low",
            "contract": "SoulSocietySBT",
            "function": [
                "constructor()",
                "setTokenURI()"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L03. Missing URI Length Check",
            "description": "The function tokenURI() lacks the necessary check to ensure that the empty URI string is not included in the final encoded URI.",
            "severity": "Low",
            "contract": "SoulSocietySBT",
            "function": "tokenURI()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L04. Inefficient Checks in setProtected() Result In Inefficient Code",
            "description": "The function setProtected() contains inefficient checks resulting in inefficient code.",
            "severity": "Informational",
            "contract": "SoulSocietySBT",
            "function": "setProtected()",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "I01. Redundant Initialization Is Not Gas Efficient",
            "description": "Redundant initialization is not gas efficient.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "I02. Function tokenURI Is Not Gas Efficient",
            "description": "The function tokenURI() declares a memory variable tokenType by reading from storage once, which can be optimized by directly returning the storage variable _tokenTypes[tokenId].",
            "severity": "N/A",
            "contract": "SoulSocietySBT",
            "function": "tokenURI()",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "I03. Disabled Solidity Optimizer",
            "description": "Disabled Solidity optimizer increases the overall Gas cost.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "./contracts/*.config"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1126"
                ]
            },
            "title": "I04. State Variables Can Be Constant",
            "description": "State variables can be declared as constants to decrease gas costs.",
            "severity": "Low",
            "contract": "SoulSocietySBT",
            "function": "N/A",
            "lineNumber": "_name, _symbol"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "I05. Redundant onlyOwner Requirements Are Not Gas Efficient",
            "description": "The internal functions _safeMint(), _setGrowthToZero() and _growUp() are only called by mint(), burn() and growUp() respectively, but they have unnecessary onlyOwner modifiers which result in redundant gas expenses.",
            "severity": "Informational",
            "contract": "SoulSocietySBT",
            "function": "_safeMint(), _setGrowthToZero(), _growUp()",
            "lineNumber": "N/A"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1061"
                ]
            },
            "title": "I06. Lack Of Clear Code In _growUp() Function",
            "description": "In _growUp function, the increase of _tokenGrowths is mixed with the declaration of tokenGrowth, making the code unclear and potentially leading to confusion.",
            "severity": "N/A",
            "contract": "SoulSocietySBT",
            "function": "_growUp()",
            "lineNumber": "N/A"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "I07. Style Guide Violation: Order Of Layout",
            "description": "The order of layout does not conform to the Official Solidity Style Guide.",
            "severity": "Informational",
            "contract": "SoulSocietySBT",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}