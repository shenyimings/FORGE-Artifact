{"path": "./Audit_Reports_2024/Verichains_Lab/Verichains Public Audit Report - ProtonSale Smartcontracts - v1.2.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "A01.Adding padding properly to counter_string", "description": "The issue arises when there are more than 9999 contributors and the next ones can purchase but unable to mint NFT and claim tokens because of a mathematical overflow.", "severity": "High", "contract": "SaleStore", "function": "mint_nft() and claim()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "A02.Invalid amount in get_vesting_claimable", "description": "The condition for returning no tokens claimable must be `tge_percent == 100` instead of `vesting_cycle_percent == 100`. Current condition will make vesting tokens unclaimable if the `vesting_cycle_percent` is set to 100.", "severity": "Medium", "contract": "Proton Sale Smart Contract", "function": "get_vesting_claimable()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Cannot claim when counter is larger than 9999", "description": "When there are more than 9999 contributors, the next ones can purchase but unable to mint NFT and claim tokens because the expression 'i < 4 - string::length(&counter_string)' will make these functions reverted (mathematics overflow).", "severity": "Critical", "contract": "sale.move", "function": "mint_nft and claim", "lineNumber": "N/A"}]}