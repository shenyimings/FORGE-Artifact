{"path": "./Audit_Reports_2024/Verichains_Lab/Verichains Public Audit Report - HoldStation Defutures - v1.4.pdf", "project_info": {"url": "N/A", "commit_hash": "9e83cd23c52ede58b7a34f9889f4b2c0341f580335954d798b63ab92f0e34bf2", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-693"]}, "title": "Centralized risk with upgradable contracts", "description": "Many contracts in Holdstation Defutures are upgradable without protection mechanisms such as Multi-sig or DAO, allowing the contract deployer to upgrade and modify logic code, potentially compromising users' funds.", "severity": "Critical", "contract": "Holdstation Defutures", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Not enough USDC to pay NFT reward fee", "description": "In unregisterTrade function of HSTradingCallbacks contract, there is a risk of not having enough USDC to pay for NFT bots due to incorrect calculation and storage management.", "severity": "High", "contract": "HSTradingCallbacks", "function": "unregisterTrade()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "gov address can withdraw USDC from storage", "description": "The gov address has control over both tradingContract and token, allowing them to use transferUsdc to withdraw USDC from storage, which poses a centralized risk that the owner of the project can withdraw users' money.", "severity": "Critical", "contract": "HSTradingStorage", "function": "initialize() and addTradingContracts()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-707"], "2": ["CWE-228"], "3": ["CWE-233"]}, "title": "Incompatible function parameter", "description": "There is an incompatible struct OpenLimitOrder between HSTrading and HSTradingStorage contracts. In openTrade function in HSTrading, it calls storeOpenLimitOrder function in HSTradingStorage contract but the passed in parameter OpenLimitOrder (from StorageInterfaceV5) is incompatible with OpenLimitOrder in HSTradingStorage so this function call will be reverted.", "severity": "High", "contract": "HSTrading and HSTradingStorage", "function": "openTrade() and storeOpenLimitOrder()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-561"]}, "title": "Test functions must be removed", "description": "The test function emptyNodeFulFill must be removed.", "severity": "Medium", "contract": "HSPriceAggregatorV1", "function": "emptyNodeFulFill", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-682"]}, "title": "Wrong USDC decimal on Ethereum chain", "description": "The functions getReferrerFeeP and getPercentOfOpenFeeP_calc in the HSReferrals contract calculate fees based on the volume of USDC tokens, assuming 18 decimal places, but in reality, USDC tokens on the Ethereum blockchain use 6 decimal places.", "severity": "N/A", "contract": "HSReferrals", "function": ["getReferrerFeeP", "getPercentOfOpenFeeP_calc"], "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-682"], "2": ["CWE-369"]}, "title": "Zero reward", "description": "The rewards calculation may result in a zero reward value due to the division operation in the line `uint256 userRewardValue = uint256 ((totalRewardEachEpoch - tmpReward) / tmpRewards);`, potentially causing unintended behavior.", "severity": "Medium", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-682"]}, "title": "High gas cost", "description": "Looping through large arrays in solidity costs a lot of gas and must be avoided, instead use mapping whenever possible.", "severity": "N/A", "contract": "HSTokenCredit", "function": ["contributeToken(uint256 _amount, address _userAddress)", "forceNewEpoch()", "unregisterPendingMarketOrder(uint256 _id, bool _open)"], "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-682"]}, "title": "High gas cost with larger number of pending orders", "description": "The function unregisterPendingMarketOrder has a high gas cost due to looping through large arrays whenever possible, especially when there are a larger number of pending orders.", "severity": "N/A", "contract": "HSTokenCredit", "function": "unregisterPendingMarketOrder(uint256 _id, bool _open)", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "checkIndex logic was not implemented", "description": "The modifier checks receiver checkIndex parameter but does not implement any logic with it.", "severity": "Medium", "contract": "HSTradingVault.sol", "function": "modifier checks", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "mint does not contributeToken", "description": "The mint function lacks contributeToken logic.", "severity": "Medium", "contract": "N/A", "function": "mint", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-682"]}, "title": "Chainlink price feed has deviation threshold", "description": "The Chainlink price could be different from real-time price for a pair's deviation threshold percentage (from 0.5% to 2%) due to each pair having its own deviation threshold which only triggers price update when the price changed more than the threshold.", "severity": "N/A", "contract": "HSPriceAggregatorV1", "function": "emptyNodeFulFill", "lineNumber": "N/A"}]}