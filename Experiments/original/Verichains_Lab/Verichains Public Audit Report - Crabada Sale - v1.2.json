{"path": "./Audit_Reports_2024/Verichains_Lab/Verichains Public Audit Report - Crabada Sale - v1.2.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"]}, "title": "Missing non-contract call checking", "description": "The buy and buyPure functions are missing non-contract call checking, allowing attackers to use contract calls to control the result of randomness and get the best value.", "severity": "Critical", "contract": "Chamber.sol", "function": ["buy()", "buyPure()"], "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Wrong time checking for onlyStarted modifier", "description": "Modifier onlyStarted will be wrong if startDate set to future in startSchedule function.", "severity": "LOW", "contract": "Timelock.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Wrong remainTokenAmount if change totalSaleAmount while sale is running", "description": "Change totalSaleAmount by calling changeTotalSaleAmount while sale is running (when remainTokenAmount > 0) will make remainTokenAmount wrong.", "severity": "INFORMATIVE", "contract": "CrabadaSale.sol", "function": "changeTotalSaleAmount()", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "Gas optimize", "description": "Using memory argument will force Solidity to copy it to memory which will cost more gas than using from calldata especially when passing large readonly array.", "severity": "INFORMATIVE", "contract": "N/A", "function": "addWhitelist()", "lineNumber": "N/A"}]}