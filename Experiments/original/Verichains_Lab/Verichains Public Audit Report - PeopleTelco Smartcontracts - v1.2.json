{
    "path": "./Audit_Reports_2024/Verichains_Lab/Verichains Public Audit Report - PeopleTelco Smartcontracts - v1.2.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "f974ee78d10e4e0826d44a2ed40f173c9f732887",
        "address": "N/A"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-841"
                ]
            },
            "title": "Buyer cannot update their offer if this offer is the lowest offer",
            "description": "The function _insertOffer of ERC721TradeOperator contract disallows a buyer to update their offer when it's the lowest offer and the number of offers exceeds bidderLimit.",
            "severity": "Medium",
            "contract": "ERC721TradeOperator",
            "function": "_insertOffer(address, uint256, uint256, address)",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Bypass check user's balance before make offers",
            "description": "The function makeOffer of a contract ERC721TradeOperator has a guard condition that checks if the user has enough balance to make offers. However, the check using a loop each amount of offers to check user's balance allows the user to bypass the check and make offers with a total value greater than their balance.",
            "severity": "N/A",
            "contract": "ERC721TradeOperator",
            "function": "makeOffer(address,uint256[],uint256[])",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Sellers can receive payment for their orders that is less than they had expected",
            "description": "In ERC721TradeOperator contract, sellers may get paid less than expected for their orders.",
            "severity": "High",
            "contract": "ERC721TradeOperator",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Owner of a NFT can make a offer for the their own NFT",
            "description": "The function lacks a check that the owner of the NFT is not the same as the buyer, allowing the owner to make an offer to themselves, which is not a valid use case.",
            "severity": "N/A",
            "contract": "ERC721TradeOperator",
            "function": "makeOffer()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1287"
                ]
            },
            "title": "SafeMath unnecessary in Solidity version ^0.8",
            "description": "The SafeMath libraries are redundant in Solidity version ^0.8 as it includes built-in checks to prevent arithmetic overflow and underflow issues.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}