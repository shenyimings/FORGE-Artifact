{
    "path": "./Audit_Reports_2024/Beosin/StreamNFT_202311171648.pdf",
    "project_info": {
        "url": "N/A",
        "commit_hash": "N/A",
        "address": "N/A"
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Funds were arbitrarily withdrawn",
            "description": "The shareReward function in the RentUtils contract can arbitrarily extract all reward money in the contract by entering a very large amount of 'amount'. This allows a malicious user to take out all ERC20 tokens and ETH from the contract via the shareReward function after using the lendToken function.",
            "severity": "High",
            "contract": "RentUtils",
            "function": "shareReward",
            "lineNumber": "StreamNFT.sol #L212-226"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "Key function missing permission checks",
            "description": "The setupConfig function in the Stream contract has no permission checks and can be called by anyone.",
            "severity": "High",
            "contract": "Stream",
            "function": "setupConfig",
            "lineNumber": "L16-28"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-1265"
                ]
            },
            "title": "Re-entry risk",
            "description": "There is a low probability of re-entry risk due to transfer occurring before state variable change.",
            "severity": "Low",
            "contract": "LoanUtil.sol",
            "function": "updateOfferCount and updateOfferAmount",
            "lineNumber": "#L93-128"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Reward sent to address 0",
            "description": "In the expireRent function, when the state is STALE, the rentee will be set to 0 and the shareReward function will send the renteeShare to address 0.",
            "severity": "Low",
            "contract": "RentUtil",
            "function": "expireRent()",
            "lineNumber": "L159-180"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Redundant code",
            "description": "The code implementation has redundant parts due to platform differences.",
            "severity": "Info",
            "contract": "StreamNFT",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "The shareReward function can arbitrarily extract all reward money in the contract",
            "description": "The shareReward function in the RentUtils contract can arbitrarily extract all reward money in the contract by entering a very large amount of 'amount'. This allows a malicious user to take out all ERC20 tokens and ETH from the contract via the shareReward function after using the lendToken function.",
            "severity": "High",
            "contract": "RentUtils",
            "function": "shareReward()",
            "lineNumber": "StreamNFT.sol #L212-226"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "Key function missing permission checks",
            "description": "The setupConfig function has no permission checks and can be called by anyone.",
            "severity": "High",
            "contract": "Stream",
            "function": "setupConfig()",
            "lineNumber": "Stream.sol #L16-28, LoanUtil.sol #L13-16"
        }
    ]
}