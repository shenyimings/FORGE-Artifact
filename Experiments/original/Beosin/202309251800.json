{"path": "./Audit_Reports_2024/Beosin/202309251800.pdf", "project_info": {"url": "N/A", "commit_hash": "N/A", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Minting of unlimited number of sundae tokens", "description": "The UTB token has no upper limit on the total amount and can be minted or destroyed by the settlement contract according to the number.", "severity": "High", "contract": "UTB Token Contract", "function": "mint() / burn()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Potential unauthorized script upgrade", "description": "N/A", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-664"], "2": ["CWE-665"], "3": ["CWE-909"], "4": ["CWE-456"]}, "title": "Incorrect initialization of IERC20(_token)", "description": "In the following code, IERC20(_token) can be used directly without initializing the token variable, this can reduce the gas consumed by the function.", "severity": "Info", "contract": "UTB.sol", "function": "N/A", "lineNumber": "L215-216, 234-235"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "Event not triggered when there was a significant change in the variable", "description": "The event was not triggered when there was a significant change in the variable.", "severity": "Info", "contract": "UTB.sol and Settlement.sol", "function": "N/A", "lineNumber": "UTB.sol#L144-147, 240-243, Settlement.sol#L36-53"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "The addLiquidity function does not provide deflation token support", "description": "The addLiquidity function in the UTB contract does not provide deflation token support. If _token is a deflation type token, the tokens received when adding Liquidity may be less than the actual ones, which may result in the inability to withdraw handling fees and user losses.", "severity": "Info", "contract": "UTB.sol", "function": "addLiquidity", "lineNumber": "170-190"}, {"id": 5, "category": {"1": ["CWE-682"]}, "title": "Repeated assignment of `assets` value", "description": "When adding liquidity, the assets are directly assigned the value of the contract token balance after the transfer in the _getAmountIn function, then amountInAfterDaoFee is added again in addLiquidity function. This makes the assets higher than the actual value and may prevent the user from removing them so that liquidity or handling fees cannot be withdrawn normally.", "severity": "High", "contract": "UTB.sol", "function": "_getAmountIn, addLiquidity", "lineNumber": "177, 326"}, {"id": 6, "category": {"1": ["CWE-710"], "2": ["CWE-684"], "3": ["CWE-440"]}, "title": "Function design flaws", "description": "N/A", "severity": "High", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-710"], "2": ["CWE-1120"], "3": ["CWE-1060"]}, "title": "Gas optimization", "description": "N/A", "severity": "Info", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-682"]}, "title": "No deflationary token support provided", "description": "The addLiquidity function in the UTB contract does not provide deflation token support. If _token is a deflation type token, the tokens received when adding Liquidity may be less than the actual ones, which may result in the inability to withdraw handling fees and user losses.", "severity": "Info", "contract": "UTB.sol", "function": "addLiquidity", "lineNumber": "L170-190"}]}