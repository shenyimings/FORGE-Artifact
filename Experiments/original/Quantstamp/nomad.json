{"path": "./Audit_Reports_2024/Quantstamp/nomad.pdf", "project_info": {"url": "N/A", "commit_hash": "28ff236d43f9be5f244554759ce1f710a6ff8c69916b74d20f400e5816a3fbb6", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "QSP-24 Incompatibility With Deflationary Tokens", "description": "In the `_handleTransfer` function, when transferring standard ERC20 deflationary tokens, the input amount may not be equal to the received amount due to the charged (and burned) transaction fee.", "severity": "Low Risk", "contract": "BridgeRouter.sol", "function": "_handleTransfer()", "lineNumber": "L348"}, {"id": 1, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "ERC20 Contract Defined in OZERC20.sol File Cannot Be Used Alone", "description": "The ERC20 contract defined in the OZERC20.sol file can never be used on its own and should be marked as abstract.", "severity": "Medium", "contract": "OZERC20", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Assembly Code Usage in TokenRegistry Contract", "description": "The TokenRegistry contract uses assembly code on L293 to determine if a given token is a contract, which can be error-prone. Consider replacing it with OpenZeppelin's Address.isContract() or token.code.length > 0.", "severity": "Medium", "contract": "TokenRegistry", "function": "N/A", "lineNumber": "L293"}]}