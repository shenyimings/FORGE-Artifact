{"path": "./Audit_Reports_2024/Quantstamp/saddle-finance.pdf", "project_info": {"url": "https://github.com/saddle-contract", "commit_hash": "83491b3", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Minting of unlimited number of tokens", "description": "The owner of the LPToken contract can mint any amount of tokens to any address without a cap.", "severity": "Informational", "contract": "LPToken", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Centralization of power in owner roles", "description": "The owner of the contracts (Allowlist, LPToken, Swap) has excessive privileges to perform various actions without limitations, such as minting tokens, setting fees, and modifying pool caps.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"], "2": ["CWE-191"]}, "title": "Potential reversion without clear error message due to subtraction on L743", "description": "If any of the values in the amounts array are greater than the balances values corresponding to the same token, then the function will revert without a clear error message due to the subtraction.", "severity": "N/A", "contract": "SwapUtils", "function": "removeLiquidityImbalance", "lineNumber": "743"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-233"]}, "title": "Insufficient input validation in SwapUtils.calculateTokenAmount function", "description": "The SwapUtils.calculateTokenAmount function does not check if the input parameters are valid, which can cause unexpected behavior or reverts.", "severity": "Medium Risk", "contract": "SwapUtils", "function": "calculateTokenAmount()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"], "2": ["CWE-1339"]}, "title": "Increased loss of precision due to multiplication after division", "description": "The accuracy of the return value of the `SwapUtils.getD` function could be affected by the loss of precision that occurs with repeated divisions before multiplications.", "severity": "Low Risk", "contract": "SwapUtils.sol", "function": "getD(uint256[] memory xp, uint256 _A)", "lineNumber": "241, 244"}]}