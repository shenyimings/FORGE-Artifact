{"path": "./Audit_Reports_2024/Quantstamp/mainframe-secondary-audit.pdf", "project_info": {"url": "https://github.com/contracts", "commit_hash": "162b46a", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "Including require(address != 0x0) in validDestination modifier", "description": "The 'validDestination' modifier in MainframeToken.sol lacks a require statement to check for address equality with 0x0.", "severity": "Informational", "contract": "MainframeToken", "function": "N/A", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-1339"]}, "title": "Potential Precision Loss Due to uint Usage", "description": "Using uint instead of uint256 for parameters may lead to potential precision loss issues.", "severity": "Informational", "contract": ["MainframeToken", "MainframeTokenDistribution"], "function": "N/A", "lineNumber": ["47, 51", "8, 19"]}, {"id": 2, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Different emergencyERC20Drain() functions in MainframeToken.sol and MainframeTokenDistribution.sol", "description": "Consider making the `emergencyERC20Drain()` functions of `MainframeToken.sol` identical to that of `MainframeTokenDistribution.sol` to drain any and all accidental tokens, as there is likely no scenario in which it would be preferable to only drain, say, half.", "severity": "Informational", "contract": "MainframeToken.sol, MainframeTokenDistribution.sol", "function": "emergencyERC20Drain()", "lineNumber": "N/A"}]}