{
    "path": "./Audit_Reports_2024/Chainsulting/02_Smart Contract Audit 1inch_Mooniswap_and_Token_Updated.pdf",
    "project_info": {
        "url": "https://github.com/1inch/liquidity-protocol/tree/57f3b0d22a2a9a0b11fc870e01cb4d50a7a8d306/",
        "commit_hash": "57f3b0d22a2a9a0b11fc870e01cb4d50a7a8d306",
        "address": "0x111111111117dc0aa78b770fa6a738034120c302,0xbAF9A5d4b0052359326A6CDAb54BABAa3a3A9643",
        "chain": "bsc",
        "compilerVersion": [
            "v0.6.12+commit.27d51765"
        ],
        "project_path": {
            "OneInch": "Experiments/contracts\\02_Smart Contract Audit 1inch_Mooniswap_and_Token_Updated\\OneInch"
        },
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-807"
                ],
                "3": [
                    "CWE-302"
                ]
            },
            "title": "Potential front running attack or losing of allowance",
            "description": "The _approve method replaces the allowance, so there are two potential problems here: 1. If a signer wants to increase the allowance from A to B , a receiver may withdraw A+B using the front-running attack. 2. If a signer wants to send A and B , but a receiver forgot to withdraw A , the receiver will lose ability to withdraw A.",
            "severity": "LOW",
            "contract": "ERC20Permit.sol (1INCH Token)",
            "function": "_approve",
            "lineNumber": "53"
        }
    ]
}