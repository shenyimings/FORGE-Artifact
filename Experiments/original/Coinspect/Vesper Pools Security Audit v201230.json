{
    "path": "./Audit_Reports_2024/Coinspect/Vesper Pools Security Audit v201230.pdf",
    "project_info": {
        "url": "https://github.com/bloqpriv/bpools",
        "commit_hash": "5535968b56296e84fbc11072c1e621fd72306172",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-410"
                ]
            },
            "title": "No risk deposit can reap earnings accumulated in pool",
            "description": "Pool tokens do not track the contribution to the pool and are used to distribute the share of interests produced in the time period the liquidity was provided.",
            "severity": "High",
            "contract": "N/A",
            "function": "deposit() and rebalanceEarned()",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Duplicated code in _withdrawExcessDaiFromAave()",
            "description": "The following code in function `_withdrawExcessDaiFromAave` is duplicated, making the source code harder to read and maintain, wasting gas, and potentially leading to future vulnerabilities.",
            "severity": "Low",
            "contract": "AaveStrategy.sol",
            "function": "_withdrawExcessDaiFromAave()",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-362"
                ]
            },
            "title": "Non-atomic Strategy update could leave pool in inconsistent state",
            "description": "Updating the pool strategy in a non-atomic way could lead to an inconsistent state.",
            "severity": "Low",
            "contract": "Controller.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "CollateralManager and Strategy contracts keep access to pool funds after being updated",
            "description": "The updatePoolStrategy function does not approve the new strategy with the ERC20 token it will be responsible for managing, allowing CollateralManager and Strategy contracts to keep access to pool funds after being updated.",
            "severity": "High",
            "contract": "Controller.sol",
            "function": "updatePoolStrategy",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-391"
                ]
            },
            "title": "Deposit event missing",
            "description": "The `_deposit` function does not emit a logging event after processing a successful transaction.",
            "severity": "Low",
            "contract": "PoolShareToken.sol",
            "function": "_deposit(uint256 amount)",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-477"
                ]
            },
            "title": "Outdated Solidity version",
            "description": "The contracts are specified to be compiled with Solidity version 0.6.6 at least, but the latest Solidity version available is 0.7.1, which includes additional checks and bug fixes that render it safer.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "adjustBuilderFee missing onlyOwner modifier",
            "description": "The adjustBuilderFee function is missing the onlyOwner modifier.",
            "severity": "Low",
            "contract": "Controller.sol",
            "function": "adjustBuilderFee",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ]
            },
            "title": "updateRebalanceFriction does not check if pool is approved",
            "description": "The updateRebalanceFriction function allows setting the balance friction to a pool that has not been approved yet.",
            "severity": "Low",
            "contract": "Controller.sol",
            "function": "updateRebalanceFriction(address,uint256)",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "_beforeBurning hook is never called",
            "description": "The _beforeBurning function is never called unlike the _beforeMinting and _afterBurning hooks.",
            "severity": "Low",
            "contract": "PoolShareToken.sol",
            "function": "_withdraw",
            "lineNumber": "N/A"
        }
    ]
}