{
    "path": "./Audit_Reports_2024/Coinspect/Coinspect - Smart Contract Update Review - Tinyman v220107.pdf",
    "project_info": {
        "url": "https://github.com/tinymanorg/tinyman-contracts-v1",
        "commit_hash": "8be3e7f8005bb131c51e10e82885a8e764d7a336",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Pools can be drained by burning liquidity for the same asset twice",
            "description": "An attacker can drain pools by burning their liquidity tokens and receiving the same asset twice due to a lack of checks on which assets the sender requests.",
            "severity": "High",
            "contract": "pool_logicsig.teal.tmpl",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Liquidity assets can be minted using only one underlying asset",
            "description": "An attacker can mint liquidity assets for a pool by providing only one of the underlying assets of the pool instead of two.",
            "severity": "High",
            "contract": "pool contract template",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Pools with high asset ratios get locked",
            "description": "When a pool has a big asset ratio and has not seen a recent trade, it will get locked due to an overflow in a calculation of the `cumulative price` field.",
            "severity": "Medium",
            "contract": "validator_approval.teal",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}