{"path": "./Audit_Reports_2024/Coinspect/Coinspect-Incognito Audit.pdf", "project_info": {"url": "https://github.com/incognitochain/bridge-eth/tree/master/bridge/contracts", "commit_hash": "4879219669a38d601265582f815596b6775855b6", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-710"], "2": ["CWE-477"]}, "title": "Outdated Solidity version", "description": "The contract code specifies an older version of the Solidity compiler than the latest production release, missing additional warnings and security enhancements.", "severity": "Low", "contract": "Multiple contracts (including IncognitoProxy)", "function": "N/A", "lineNumber": "*.sol"}, {"id": 1, "category": {"1": ["CWE-703"]}, "title": "Uses of require without error string", "description": "The contracts contain multiple uses of `require` without an error string, making it impossible to write unit tests that check certain failure conditions.", "severity": "Low", "contract": "incognitoProxy.sol, vault.sol, upgradableProxy.sol, transparentUpgraded.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1287"]}, "title": "Unnecessary payable function", "description": "The `payable` modifier is unnecessarily used in the `depositERC20` function.", "severity": "High", "contract": "vault.sol", "function": "depositERC20", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-697"]}, "title": "Invalid signatures accepted as signed by address(0)", "description": "The function `signToAddress` returns `address(0)` when the signature is invalid, allowing an attacker to call `requestWithdraw` with an invalid signature and withdraw funds.", "severity": "Low", "contract": "vault.sol", "function": "signToAddress", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Integer overflows in functions withdraw and submitBurnProof", "description": "The multiplication operation in functions `withdraw` and `submitBurnProof` can cause integer overflows if `data.amount` is very big, leading to inconsistencies and potential loss of funds.", "severity": "High", "contract": "vault.sol", "function": ["withdraw()", "submitBurnProof()"], "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-284"], "2": ["CWE-749"]}, "title": "Partially arbitrary external calls controllable by users", "description": "The function `execute()` allows anyone to make calls with the `Vault` as `msg.sender`. Although there are some restrictions regarding the return values, it is still a dangerous practice and recommended to restrict the calls as much as possible.", "severity": "High", "contract": "vault.sol", "function": "execute()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Free parameters in function execute controllable by front-runners", "description": "The function `execute` allows an attacker to front-run a user transaction and steal funds by controlling free parameters `token` and `recipientToken`, which are not covered by the signature.", "severity": "High", "contract": "Vault", "function": "execute()", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-697"], "2": ["CWE-1024"]}, "title": "Ambiguous signatures in requestWithdraw and execute", "description": "There is ambiguity between signed data for functions `execute` and `requestWithdraw`. A signature can be valid for both functions, potentially allowing attackers to use a signature intended for one of the functions in a call to the other one.", "severity": "High", "contract": "vault.sol", "function": "requestWithdraw() and execute()", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Insufficient checks when swapping committees", "description": "The contract does not perform sufficient checks when swapping committees, which can lead to race conditions and invalid instructions.", "severity": "High", "contract": "incognito_proxy.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-691"], "2": ["CWE-362"]}, "title": "Inconsistencies with committee swapping lead to race condition", "description": "A race condition occurs between committee swapping in IncognitoProxy and users calling withdraw and submitBurnProof in Vault.", "severity": "High", "contract": "IncognitoProxy", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Function claim in TransparentUpgradableProxy is not transparent", "description": "The function claim breaks the transparent proxy pattern because it is visible to any address, and if the logic contract implemented this function, it would not be visible in the proxy contract.", "severity": "Low", "contract": "TransparentUpgradableProxy", "function": "claim()", "lineNumber": "N/A"}]}