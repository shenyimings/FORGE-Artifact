{"path": "./Audit_Reports_2024/ImmuneBytes/ImmuneBytes-LiquidMarketplace_Final_Audit_Report.pdf", "project_info": {"url": "https://github.com/likezninjaz/liquid-market-smart-contract", "commit_hash": "5cb29ee9d97e68a3784b19db52ae364c635f2e31", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Redundant IF Statements found in Functions", "description": "The transfer and transferFrom functions in the contract include redundant if statements which can be replaced by a single if statement to ensure correct transaction fee is transferred to the owner, enhancing code readability and reducing space and gas consumption.", "severity": "Low", "contract": "N/A", "function": "transfer() and transferFrom()", "lineNumber": "73,79, 102, 108"}, {"id": 1, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Absence of Zero Address validation", "description": "The setVotingAddress() function updates an imperative address in the contract without implementing zero address validation.", "severity": "Low", "contract": "LiquidMarketplace", "function": "setVotingAddress()", "lineNumber": "50"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Loops are extremely costly", "description": "The LiquidMarketVoting contract has some for loops that include state variables like .length of a non-memory array in the condition, which consumes extra gas for every iteration.", "severity": "Low", "contract": "LiquidMarketVoting", "function": "addressCastVote", "lineNumber": "69, 77"}, {"id": 3, "category": {"1": ["CWE-664"], "2": ["CWE-665"], "3": ["CWE-909"], "4": ["CWE-456"]}, "title": "A constant declaration should be preferred", "description": "State variables that are not supposed to change throughout the contract should be declared as constant.", "severity": "Low", "contract": "LiquidMarketplace", "function": "N/A", "lineNumber": "13, 23, 25, 27"}]}