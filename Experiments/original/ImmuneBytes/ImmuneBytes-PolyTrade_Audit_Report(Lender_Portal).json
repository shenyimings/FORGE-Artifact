{"path": "./Audit_Reports_2024/ImmuneBytes/ImmuneBytes-PolyTrade_Audit_Report(Lender_Portal).pdf", "project_info": {"url": "https://github.com/polytrade-finance/lender-portal-contracts/tree/dev", "commit_hash": "75497f0a0371e7b274eb06e1a94eaaba9062aca1", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-229"], "4": ["CWE-230"]}, "title": "withdraw() function works for invalid input values.", "description": "The withdraw function of LenderPool contract does not include input validation checks and accepts non-existent as well as already claimed roundId values to be passed to it.", "severity": "Medium", "contract": "LenderPool", "function": "withdraw()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-693"], "2": ["CWE-807"]}, "title": "swapExactTokens() function is susceptible to Sandwich transaction attack.", "description": "The swapExactTokens() function in the LenderPool contract does not use the amountOutMin input variable of the Uniswap Router contract's swapExactTokensForTokens() function, making it vulnerable to Sandwich Attack.", "severity": "High", "contract": "LenderPool", "function": "swapExactTokens()", "lineNumber": "N/A"}]}