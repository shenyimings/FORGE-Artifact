{
    "path": "./Audit_Reports_2024/ImmuneBytes/Burnicorn - Final Audit Report.pdf",
    "project_info": {
        "url": "https://github.com/adeelJaved-5/Distributor-LUNA-Contract",
        "commit_hash": "fdb0a79b5869dbfd373acdc187dfa7dd8a260729",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-241"
                ]
            },
            "title": "Insufficient input validations for the execute_deposit coin denomination",
            "description": "In the execute_deposit function, it is assumed that the coin denomination being deposited is 'uluna'. This assumption is made implicitly when constructing the burn_amt, jack_amt, and dev_amt vectors. The denomination of the deposited coin is taken from info.funds[0].denom, but there is no check to ensure it is 'uluna' or any other specific denomination before processing the deposit.",
            "severity": "Low",
            "contract": "N/A",
            "function": "execute_deposit",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Insufficient Essential Queries",
            "description": "The contract lacks essential queries that might be useful for some users.",
            "severity": "Medium",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Insufficient input validation on amount parameter",
            "description": "The contract's withdraw function allows users to withdraw a specified amount from the jackpot account without checking if the amount parameter passed is greater than the current balance of the jackpot account.",
            "severity": "Low",
            "contract": "N/A",
            "function": "withdraw",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-778"
                ]
            },
            "title": "Inexistent Event Emission in Critical Functions",
            "description": "The contract does not emit any events in its functions, which can lead to a lack of transparency and make it difficult for users to track the actions performed by the contract.",
            "severity": "Low",
            "contract": "N/A",
            "function": "execute_deposit()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-191"
                ]
            },
            "title": "Potential Arithmetic Underflow in Withdraw Function",
            "description": "The contract's withdraw function allows users to withdraw a specified amount from the jackpot account without checking if the amount parameter is greater than the current balance of the jackpot account, which can result in an integer underflow and cause unexpected behavior or even a contract crash.",
            "severity": "Low",
            "contract": "N/A",
            "function": "withdraw()",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ]
            },
            "title": "Inappropriate Address Validation in receiver Parameter",
            "description": "The contract's receiver parameter is validated using the deps.api.addr_validate function. However, if the receiver parameter is a malformed or invalid address, the deps.api.addr_validate function will return an error, which could cause the contract to behave unexpectedly or crash.",
            "severity": "Low",
            "contract": "N/A",
            "function": [
                "receiver",
                "owner_set"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "Direct access to the funds array",
            "description": "Accessing the first element of the info.funds array without checking if it's empty can cause a panic, leading to an abrupt termination of the contract execution.",
            "severity": "Low",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Inexistent migration functionality",
            "description": "The contract does not have a migrate function, which means that it cannot be upgraded without redeploying a new instance of the contract.",
            "severity": "Informational",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        }
    ]
}