{
    "path": "./Audit_Reports_2024/ImmuneBytes/Ethernity(MysteryDrop) - Final Audit Report.pdf",
    "project_info": {
        "url": "https://github.com/extrawatts/ethernity-mystery-drop",
        "commit_hash": "7690d8b0ac45a69e444def141249d3c44df78026",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1066"
                ]
            },
            "title": "Missing Reentrancy Guard",
            "description": "The method transfers tokens from user to self after executing the buy which mints the token for the user before fetching the amount. After minting the ERC1155 contracts executes a `_afterTokenTransfer` method which can be overridden to create a reentrancy.",
            "severity": "Medium",
            "contract": "MysteryDrop.sol",
            "function": "buyMysteryBox(address _user, Tiers _tier)",
            "lineNumber": "204"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1287"
                ]
            },
            "title": "Hardcoded Address",
            "description": "N/A",
            "severity": "High",
            "contract": "MysteryDrop.sol",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Typecasting on every call",
            "description": "Whenever we make a call to `getPrice` there is always a type casting of `ernOracleAddr` as `AggregatorV3Interface` which costs gas.",
            "severity": "Informational",
            "contract": "MysteryDrop.sol",
            "function": "getPrice()",
            "lineNumber": "216"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1164"
                ]
            },
            "title": "Commented Code",
            "description": "The contract contains instances of code that has been commented and contribute nothing to the logic.",
            "severity": "Informational",
            "contract": "MysteryDrop.sol",
            "function": "N/A",
            "lineNumber": "216, 130, 153"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-287"
                ]
            },
            "title": "Refactoring buyMysteryBox",
            "description": "The method takes user as parameter then ensures that user is msg.sender, so by that logic we can skip getting the user value as a parameter itself and hence also skip the require check for the same and use msg.sender directly.",
            "severity": "Informational",
            "contract": "MysteryDrop.sol",
            "function": "buyMysteryBox",
            "lineNumber": "204"
        }
    ]
}