{
    "path": "./Audit_Reports_2024/ImmuneBytes/BiggerMINDS - Final Audit Report.pdf",
    "project_info": {
        "url": "https://github.com/BiggerMINDS/biggerminds_brains_v3",
        "commit_hash": "72e606bc71b981a29fa2aaba6bad52191d4bf609",
        "address": "N/A",
        "is_exists": false
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Absence of Zero Address Validation before initiating withdrawal of tokens to treasury",
            "description": "The contract includes functions like withdrawNativeToTreasury or withdrawTokensToTreasury, which play a significant role in carrying out withdrawals of tokens or ether from the contract. However, during the review, it was found that the functions do not validate whether or not the brainManagementContract address, which is passed as the treasury address, is adequately updated with the right address before this function is triggered.",
            "severity": "Low",
            "contract": "N/A",
            "function": "withdrawNativeToTreasury/withdrawTokensToTreasury",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "N/A",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Broken Logic in payMaintenanceFees() Function",
            "description": "The refundable token amount is wrongly calculated and becomes more than it should be due to incorrect order of execution in the IF statement block.",
            "severity": "High",
            "contract": "BRAINManagementUpgradeable",
            "function": "payMaintenanceFees()",
            "lineNumber": "327-340"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "Brain Users shall never be able to own the maximum approved amount of NFTs",
            "description": "The condition in the contract states that the owner count of the user should never be greater than or equal to the maxBRAINs state variable, which means the user will not be able to mint the maximum allowed BRAIN NFTs but always 1 lesser than the actual max NFTs allowance.",
            "severity": "High",
            "contract": "BRAINManagementUpgradeable",
            "function": "_mint()",
            "lineNumber": "541"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1288"
                ]
            },
            "title": "Unused State variable found in contract",
            "description": "The contract includes a state variable, i.e., synapseContract but never uses it throughout the contract.",
            "severity": "Low",
            "contract": "BRAINManagementUpgradeable",
            "function": "N/A",
            "lineNumber": "34"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-732"
                ]
            },
            "title": "sendRewards() function violates all reward transfer checkpoints",
            "description": "The sendRewards() function allows any approved address to send reward tokens to any given address without including necessary checkpoints to ensure whether or not the account actually holds a brainNFT.",
            "severity": "Medium",
            "contract": "BRAINRewards",
            "function": "sendRewards()",
            "lineNumber": "155-160"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ]
            },
            "title": "N/A",
            "description": "N/A",
            "severity": "N/A",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Redundant use of onlyApproved modifiers in functions",
            "description": "The _update() private function includes the onlyApproved modifier, but it is redundantly used in several other functions, increasing gas consumption.",
            "severity": "Informational",
            "contract": "BRAINRewardsUpgradeable",
            "function": "_update() and other functions",
            "lineNumber": "82, 108, 164, 173, 182, 191, 199"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "No upper threshold validation was found for the uint256 argument being used in loop",
            "description": "The batchMint() function allows the caller to pass any value for the amount of NFTs to be minted without any input validation on the upper threshold for the same.",
            "severity": "Low",
            "contract": "BRAINNFTUpgradeable",
            "function": "batchMint()",
            "lineNumber": "57-73"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-228"
                ],
                "3": [
                    "CWE-233"
                ]
            },
            "title": "Unvalidated propertyNum Argument in setNFTNumericInfo() and _setNFTStringInfo Functions",
            "description": "The NFTInfo struct in the NFTInfoUpgradeable contract only includes 3 propertyNum members. However, the setNFTNumbercInfo() as well as the _setNFTStringInfo() function in the BRAINNFTUpgradeable contract doesn\u2019t include any proper input validations for the propertyNum argument being passed to the function body.",
            "severity": "Low",
            "contract": "BRAINNFTUpgradeable",
            "function": "_setNFTStringInfo, setNFTNumericInfo",
            "lineNumber": "43-56"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Coding Style Issues in the Contract",
            "description": "Code readability of a Smart Contract is largely influenced by the Coding Style issues and, in some specific scenarios, may lead to bugs in the future.",
            "severity": "Informational",
            "contract": "BRAINNFTUpgradeable",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ],
                "3": [
                    "CWE-392"
                ]
            },
            "title": "No Events emitted after imperative State Variable modification in setInterval() function",
            "description": "Functions that update imperative arithmetic state variables of the contract should emit an event after its execution.",
            "severity": "Low",
            "contract": "BrainMaintainanceUpgradeable",
            "function": "setInterval()",
            "lineNumber": "148"
        }
    ]
}