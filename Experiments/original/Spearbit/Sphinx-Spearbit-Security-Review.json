{"path": "./Audit_Reports_2024/Spearbit/Sphinx-Spearbit-Security-Review.pdf", "project_info": {"url": "https://github.com/sphinx-labs/sphinx", "commit_hash": "fdf4670089d026ad0bfd20e0ca2b46a02ee5a332", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-664"], "2": ["CWE-665"], "3": ["CWE-909"], "4": ["CWE-456"]}, "title": "When SphinxModule is initialised the integrity of the used safe wallet is not checked", "description": "When SphinxModule is initialised the integrity of the used safe wallet is not checked. Using an older or a newer safe wallet or a customised one can potentially cause funds to be locked/lost.", "severity": "Low Risk", "contract": "SphinxModule.sol", "function": "N/A", "lineNumber": "L72-L75"}, {"id": 1, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1286"], "4": ["CWE-112"]}, "title": "Check that networkDeploymentData.txs conforms to SphinxTransaction", "description": "The properties of networkDeploymentData are not guaranteed to conform to SphinxTransaction.", "severity": "Low Risk", "contract": "N/A", "function": "N/A", "lineNumber": "merkle-tree.ts#L258"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "3rd merkle tree invariant isn't checked when generating merkle tree", "description": "The 3rd invariant stated in the merkle tree specification isn't checked when generating the merkle tree, thus leading to possible violations of this invariant.", "severity": "Low Risk", "contract": "merkle-tree.ts", "function": "N/A", "lineNumber": "L149-L232"}, {"id": 3, "category": {"1": ["CWE-703"], "2": ["CWE-755"]}, "title": "The execute function does not handle the return data", "description": "The execute function includes an arbitrary external call and does not handle the return data.", "severity": "N/A", "contract": "SphinxModule.sol", "function": "execute()", "lineNumber": "L273"}, {"id": 4, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-166"]}, "title": "The EIP-712 domain separator is missing the version field", "description": "The EIP-712 domain separator is used to uniquely identify hashing and signing of typed structured data as opposed to just bytestrings. The implementation in the Sphinx Module is missing to encode some of these attributes like: Version.", "severity": "Low Risk", "contract": "SphinxModule", "function": "N/A", "lineNumber": "41"}, {"id": 5, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "OpenZeppelin library leaves sorting differs from 9th merkle tree invariant", "description": "The OpenZeppelin library's sorting of leaves differs from the 9th Merkle tree invariant.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Removing unnecessary reads of known variables will save gas", "description": "The variable leafSafeProxy is decoded from leaf.data and is subsequently checked to ensure it matches safeProxy . Later, within the same function, safeProxy is used leading to an unnecessary storage read operation, as the value of safeProxy is already accesible at leafSafeProxy.", "severity": "Gas Optimization", "contract": "SphinxModule.sol", "function": "N/A", "lineNumber": "L183, L267"}, {"id": 7, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-862"]}, "title": "Malicious transactions being executed through the Sphinx proxy module", "description": "N/A", "severity": "N/A", "contract": "SphinxModuleProxy", "function": "initializer", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-710"], "2": ["CWE-1164"]}, "title": "Typographical issues", "description": "Various typos have been identified throughout the SphinxModule contract.", "severity": "Informational", "contract": "SphinxModule", "function": "N/A", "lineNumber": "L125, L134"}, {"id": 9, "category": {"1": ["CWE-697"]}, "title": "Redundant explicit boolean comparisons", "description": "N/A", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-707"], "2": ["CWE-20"]}, "title": "Consider adding more documentation to exec function and its arbitrary external call", "description": "The exec function includes an arbitrary external call which raises many questions and thus requires extra documentation for clarity.", "severity": "Informational", "contract": "ManagedService.sol", "function": "exec()", "lineNumber": "L57"}, {"id": 11, "category": {"1": ["CWE-710"], "2": ["CWE-1076"]}, "title": "Use the already defined DEFAULT_ADMIN_ROLE rather than bytes32(0) for consistency", "description": "The contract currently uses a direct bytes32(0) value to represent the default admin role. However, OpenZeppelin's Access Control provides a named constant DEFAULT_ADMIN_ROLE for this purpose. Using this constant enhances code readability and maintainability.", "severity": "Informational", "contract": "ManagedService.sol", "function": "N/A", "lineNumber": "L34"}, {"id": 12, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Unnecessary castings can be removed for consistency and clarity", "description": "N/A", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "13"}, {"id": 13, "category": {"1": ["CWE-693"], "2": ["CWE-807"], "3": ["CWE-302"]}, "title": "Safe owners only sign a typed data hash for the root of a merkle tree and might not know the leaf information", "description": "When a set of leaves are used to construct a merkle tree for the Sphinx protocol, the users would only sign the root and only the root of this tree is used in the EIP-712 typed data signing, i.e., the wallet UIs would only show the root information. The safe owners might get phished into signing a malicious root allowing malicious transactions being executed through the Sphinx proxy module.", "severity": "Informational", "contract": "SphinxModule.sol", "function": "N/A", "lineNumber": "[SphinxModule.sol#L125, SphinxModule.sol#L134]"}, {"id": 14, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "Open pragma version is inconsistent and can lead to unexpected behaviors", "description": "The pragma solidity versions specified in various contract files are inconsistent, using a range ( >=0.7.0 <0.9.0 ) rather than a locked version or using an open \ufffd0.8.0 or \ufffd0.8.2 version.", "severity": "Informational", "contract": "SphinxModuleProxyFactory.sol, ManagedService.sol, SphinxModule.sol", "function": "N/A", "lineNumber": "L2"}]}