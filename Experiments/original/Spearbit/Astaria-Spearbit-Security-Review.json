{"path": "./Audit_Reports_2024/Spearbit/Astaria-Spearbit-Security-Review.pdf", "project_info": {"url": "https://github.com/AstariaXYZ/astaria-core", "commit_hash": "7e9574606344f832855632f5ce8087a71ee480eb", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "`assets < s.depositCap` invariant can be broken for public vaults with non-zero deposit caps", "description": "The check in `yIntercept` `mint` / `deposit` in `totalAssets()` does not take into consideration the new shares or amount provided, which can cause the invariant to be broken.", "severity": "Medium Risk", "contract": "PublicVault", "function": "mint/deposit", "lineNumber": "L207-L208, L231-L232"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "`redeemFutureEpoch` transfers the shares from the `msg.sender` to the vault instead of from the `owner`", "description": "In the `redeemFutureEpoch` function, shares are transferred from `msg.sender` to the vault instead of from the actual owner.", "severity": "High Risk", "contract": "PublicVault", "function": "redeemFutureEpoch", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Lien buyouts can push maxPotentialDebt over the limit", "description": "N/A", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "33"}, {"id": 3, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Liens cannot be bought out once we've reached the maximum number of active liens on one collateral", "description": "The `buyoutLien` function is intended to transfer ownership of a lien from one user to another. In practice, it creates a new lien by calling `_createLien` and then calls `_replaceStackAtPositionWithNewLien` to update the stack. The result is that, when we already have `maxLiens` and we try to buy one out, this function will revert.", "severity": "Medium Risk", "contract": "LienToken.sol", "function": "_createLien", "lineNumber": "373-375"}, {"id": 4, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "First vault deposit can cause excessive rounding", "description": "Excessive rounding occurs during the first vault deposit.", "severity": "High", "contract": "N/A", "function": "deposit()", "lineNumber": "33"}, {"id": 5, "category": {"1": ["CWE-697"], "2": ["CWE-1024"]}, "title": "Liquidation Fee Sent to address(0)", "description": "When the collateral is listed on SeaPort by the borrower using listForSaleOnSeaport, when settled the liquidation fee will be sent to address(0) instead of the intended recipient.", "severity": "High", "contract": "N/A", "function": "listForSaleOnSeaport", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-697"], "2": ["CWE-1025"], "3": ["CWE-595"], "4": ["CWE-597"]}, "title": "`potentialDebt` is not compared against a new lien's `maxPotentialDebt` in `_appendStack`", "description": "In `_appendStack`, `newStack[j].lien.details.liquidationInitialAsk` is compared to `potentialDebt`, which is the aggregated sum of all potential owed amount at the end of each position/lien, but it should be compared to a new lien's `maxPotentialDebt` for stricter inequality.", "severity": "High Risk", "contract": "LienToken.sol and AstariaRouter.sol", "function": "_appendStack", "lineNumber": "L376-L381 and L516"}, {"id": 7, "category": {"1": ["CWE-664"], "2": ["CWE-666"], "3": ["CWE-672"]}, "title": "Previous withdraw proxy's `withdrawReserveReceived` is not updated when assets are drained from the current withdraw proxy to the previous", "description": "When `drain` is called, we don't update the `s.epochData[s.currentEpoch - 1]` 's `withdrawReserveReceived`, this is in contrast to when withdraw reserves are transferred from the public vault to the withdraw proxy.", "severity": "Medium Risk", "contract": "PublicVault.sol", "function": "drain()", "lineNumber": "L378-L381"}, {"id": 8, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Update solc version and use `unchecked` in Uniswap related libraries", "description": "Astaria code is intended to work with Solidity compiler >=0.8 which doesn't have unchecked arithmetic by default.", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-682"]}, "title": "Typed structured data hash used for signing commitments is calculated incorrectly", "description": "The hash calculated in `_encodeStrategyData` is incorrect according to EIP-712 due to type mismatch and struct name collision.", "severity": "High Risk", "contract": "VaultImplementation", "function": "_encodeStrategyData", "lineNumber": "L150-L151, L172-L176"}, {"id": 10, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Define an endpoint for `LienToken` that only returns the `liquidator`", "description": "N/A", "severity": "Informational", "contract": "LienToken", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "Setting uninitialized stack variables to their default value can be avoided", "description": "Avoid setting uninitialized stack variables to their default value.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "54"}, {"id": 12, "category": {"1": ["CWE-682"]}, "title": "Simplify / optimize `for` loops", "description": "Optimize `for` loops to reduce gas consumption.", "severity": "Gas Optimization", "contract": ["LienToken", "AstariaRouter", "CollateralToken", "VaultImplementation"], "function": "N/A", "lineNumber": ["688-690", "816-822", "191-193", "272-290", "405-413", "182-184", "258-290", "480-487", "189-191"]}, {"id": 13, "category": {"1": ["CWE-682"]}, "title": "`calculateSlope` can be more simplified", "description": "`calculateSlope` can be more simplified: `owedAtEnd` would be: `owedAtEnd = amt + ( _t_ _end_ \ufffd _t_ _last_ ) _r_ [amt] 10 [18]`", "severity": "Gas Optimization", "contract": "LienToken", "function": "calculateSlope", "lineNumber": "649-656"}, {"id": 14, "category": {"1": ["CWE-682"]}, "title": "Break out of `_makePayment for` loop early when `totalCapitalAvailable` reaches `0`", "description": "Optimize `_makePayment` function by breaking out of the loop early when `totalCapitalAvailable` reaches `0`", "severity": "Gas Optimization", "contract": "LienToken", "function": "_makePayment", "lineNumber": "N/A"}, {"id": 15, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "_buyoutLien can be optimized by reusing payee", "description": "payee in _buyoutLien can be reused to save some gas", "severity": "Gas Optimization", "contract": "LienToken", "function": "_buyoutLien", "lineNumber": "154-164"}, {"id": 16, "category": {"1": ["CWE-710"], "2": ["CWE-1061"]}, "title": "`isValidRefinance` and related storage parameters can be moved to `LienToken`", "description": "Moving `isValidRefinance` and related storage parameters to `LienToken` for better organization and potential gas optimization.", "severity": "N/A", "contract": "AstariaRouter.sol", "function": "isValidRefinance", "lineNumber": "593-612"}, {"id": 17, "category": {"1": ["CWE-682"]}, "title": "`auctionWindowMax` can be reused to optimize `liquidate`", "description": "function which would make the function to read from the storage twice each time. Also there is already a stack variable There are mutiple instances of `s.auctionWindow + s.auctionWindowBuffer` in the `liquidate` `auctionWindowMax` defined as the sum which can be reused.", "severity": "Gas Optimization", "contract": "AstariaRouter", "function": "liquidate", "lineNumber": "L541"}, {"id": 18, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "fileBatch() does requiresAuth for each file separately", "description": "The function fileBatch() performs requiresAuth for each file individually, which may lead to potential security issues.", "severity": "Medium", "contract": "N/A", "function": "fileBatch()", "lineNumber": "N/A"}, {"id": 19, "category": {"1": ["CWE-682"]}, "title": "_sliceUint can be optimized", "description": "The _sliceUint function can be simplified or optimized to reduce gas consumption.", "severity": "Gas Optimization", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 20, "category": {"1": ["CWE-682"]}, "title": "Use basis points for ratios", "description": "N/A", "severity": "N/A", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 21, "category": {"1": ["CWE-710"], "2": ["CWE-1164"], "3": ["CWE-563"]}, "title": "No Need to Allocate Unused Variable", "description": "Assignment of default value right after the declaration of the variable can be removed unless it is there for better readability.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}]}