{"path": "./Audit_Reports_2024/Spearbit/CronFinance-Spearbit-Security-Review.pdf", "project_info": {"url": "https://github.com/Cron-Finance/twamm", "commit_hash": "0b229078d5648891a619b9d24876c6d2365cc50d", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "Overpay for one of `_token0InU112` or `_token1InU112`", "description": "Ensuring correct token sorting during pool creation to avoid overpayment.", "severity": "N/A", "contract": "N/A", "function": "constructor", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Loss on initial deposit due to minting 1000 balancer pool tokens to zero address", "description": "The first liquidity provider for a pool will always take a small loss on the value of their tokens deposited into the pool because 1000 balancer pool tokens are minted to the zero address on the initial deposit.", "severity": "Informational", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "_withdrawCronFees functions should revert if no fees to withdraw", "description": "The _withdrawCronFees checks if there are any Cron Fees that need to be withdrawn, currently, this function does not revert in case there are no fees.", "severity": "Informational", "contract": "CronV1Pool", "function": "_withdrawCronFees", "lineNumber": "1840"}, {"id": 3, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-732"]}, "title": "Extend the functionality of getVirtualReserves function", "description": "Getting values in different contexts via a proprietary internal struct.", "severity": "Informational", "contract": "N/A", "function": "getVirtualReserves", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Debugging Import Can Be Removed", "description": "This development framework import was presumably for debugging and should be removed.", "severity": "Informational", "contract": "CronV1Relayer.sol", "function": "N/A", "lineNumber": "L8"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Redundant Checks", "description": "The periphery contracts do many checks that are redundant with checks that will be enforced either by the Balancer Vault or the CronFi pool implementation.", "severity": "Informational", "contract": "CronV1Actions.sol", "function": "N/A", "lineNumber": "L519"}, {"id": 6, "category": {"1": ["CWE-693"], "2": ["CWE-358"]}, "title": "Indirect Calls to Reentrancy Checks Are a Risky Pattern", "description": "Doing the Balancer Vault reentrancy check in a sub-function makes it difficult to see that the check is obviously happening where it needs to, and increases the risk that future refactoring could remove it from functions where it is needed.", "severity": "Informational", "contract": "CronV1Pool", "function": "N/A", "lineNumber": "L2256"}]}