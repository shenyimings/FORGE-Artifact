{"path": "./Audit_Reports_2024/Spearbit/Seadrop-Spearbit-Security-Review.pdf", "project_info": {"url": "https://github.com/ProjectOpenSea/primary-drops-evm", "commit_hash": "284e80750bdadf0249a58ba5e4d6253819628adb", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"], "2": ["CWE-190"]}, "title": "Broken quantity exploitable in `_checkMintQuantity`", "description": "A broken quantity is likely (though not always) exploitable in the first time a signature (or Merkle proof) is used `_checkMintQuantity` or unreasonably large `maxTokensMintable`.", "severity": "Medium Risk", "contract": "SeaDrop.sol", "function": "_checkMintQuantity", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Potential unauthorized script upgrade", "description": "Only the admin can call updateTokenGatedDropFee to update feeBps. However, the owner can call updateTokenGatedDrop twice after that to reset the feeBps to 0 for a drop.", "severity": "Medium Risk", "contract": "ERC721SeaDrop.sol and SeaDrop.sol", "function": "updateTokenGatedDrop()", "lineNumber": "L233-L245, L860, L889-L890"}, {"id": 2, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Malicious user can bypass `startTime` and `endTime` limits", "description": "A malicious user can always get around the `startTime` and `endTime` limits using some automation.", "severity": "Medium Risk", "contract": "SeaDrop", "function": "N/A", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-664"], "2": ["CWE-221"], "3": ["CWE-223"], "4": ["CWE-778"]}, "title": "ERC-721 contracts do not track tokens minted by an address", "description": "Most ERC-721 contracts, except ERC721A, do not keep track of the number of tokens minted by an address, which may lead to user errors.", "severity": "Medium Risk", "contract": "SeaDrop.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Incorrect calculation of `digest` in `SeaDrop.mintSigned` according to EIP-712", "description": "`mintParams` in the calculation of the `digest` in `mintSigned` is of `struct` type, so we would need to calculate and use its `hashStruct`, not the actual variable on its own.", "severity": "Medium Risk", "contract": "SeaDrop", "function": "mintSigned", "lineNumber": "L308"}, {"id": 5, "category": {"1": ["CWE-693"], "2": ["CWE-345"], "3": ["CWE-353"]}, "title": "Replay protection vulnerability in `mintSigned`", "description": "In the case of `mintSigned` (minting via signatures) there are no checks that prevent re-using the same signature multiple times.", "severity": "Medium Risk", "contract": "SeaDrop.sol", "function": "mintSigned", "lineNumber": "L227, L318"}, {"id": 6, "category": {"1": ["CWE-697"]}, "title": "Malleable signatures used for consumption checking", "description": "Signatures are malleable and should not be used as a way to check if something was consumed.", "severity": "N/A", "contract": "SeaDrop", "function": "mintSigned", "lineNumber": "N/A"}]}