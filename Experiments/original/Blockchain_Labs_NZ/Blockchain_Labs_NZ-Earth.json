{
    "path": "./Audit_Reports_2024/Blockchain_Labs_NZ/Blockchain_Labs_NZ-Earth.pdf",
    "project_info": {
        "url": "https://github.com/BlockchainLabsNZ/Back-to-Earth-audit",
        "commit_hash": "N/A",
        "address": "N/A",
        "is_exists": true
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-477"
                ]
            },
            "title": "Latest version of solidity compiler is recommended",
            "description": "It is recommended to use the latest version of the Solidity compiler.",
            "severity": "Minor",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "burn transfer and burnFrom functions accept a value of 0 tokens",
            "description": "The burn, transfer, and burnFrom functions accept a value of 0 tokens, which is incorrect as this will spend gas on a transaction that does not alter the state.",
            "severity": "Minor",
            "contract": "N/A",
            "function": [
                "burn()",
                "transfer()",
                "burnFrom()"
            ],
            "lineNumber": "N/A"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "ERC20 spec correctness",
            "description": "Non-compliance with ERC20 specification",
            "severity": "Minor",
            "contract": "N/A",
            "function": "transfer",
            "lineNumber": "N/A"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "transfer should return boolean true/false",
            "description": "The transfer function does not conform to ERC20 spec correctness by not returning a boolean value indicating success or failure.",
            "severity": "Minor",
            "contract": "N/A",
            "function": "transfer()",
            "lineNumber": "N/A"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-394"
                ]
            },
            "title": "Approval event, which is triggered when approve is called: event",
            "description": "The Approval event should be triggered when the approve function is called.",
            "severity": "Minor",
            "contract": "N/A",
            "function": "approve()",
            "lineNumber": "N/A"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-193"
                ]
            },
            "title": "mintToken emits the Transfer event twice",
            "description": "The mintToken function emits the Transfer event twice, which can be simplified to a single event emission.",
            "severity": "Moderate",
            "contract": "N/A",
            "function": "mintToken()",
            "lineNumber": "N/A"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-400"
                ]
            },
            "title": "Throwing will consume all gas",
            "description": "Consider returning in some cases to preserve the user's gas",
            "severity": "Moderate",
            "contract": "N/A",
            "function": "N/A",
            "lineNumber": "N/A"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "Burn Function Doesn't Check Whether the Address Is Frozen",
            "description": "The burn function doesn't check whether the address is frozen, therefore it is possible to 'melt' the frozen tokens and thereby decrease the total supply",
            "severity": "Moderate",
            "contract": "N/A",
            "function": "burn()",
            "lineNumber": "N/A"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "mintToken isn't checking for overflows",
            "description": "The mintToken function does not check for potential overflows.",
            "severity": "Moderate",
            "contract": "N/A",
            "function": "mintToken()",
            "lineNumber": "N/A"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "burnFrom never decreases the allowance amount",
            "description": "This would allow someone with an allowance to burn all tokens belonging to that token holder.",
            "severity": "Major",
            "contract": "N/A",
            "function": "burnFrom()",
            "lineNumber": "N/A"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "burnFrom should only be callable by the contract owner",
            "description": "burnFrom function should have access control to only allow the contract owner to call it, otherwise anyone with an allowance can burn all tokens belonging to that token holder.",
            "severity": "Major",
            "contract": "N/A",
            "function": "burnFrom()",
            "lineNumber": "N/A"
        }
    ]
}