{"path": "./Audit_Reports_2024/Blockchain_Labs_NZ/Blockchain_Labs_NZ-Beam.pdf", "project_info": {"url": "https://gitlab.com/hubbleland-public/beam", "commit_hash": "11b086ca757f1612cd67c1bf6d7ab470591676b1", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-241"]}, "title": "Explicit variables types not defined", "description": "It is recommended to explicitly define variable types and keep consistency. This confirms intent and safeguards against a future when the default type changes.", "severity": "Minor", "contract": "BeamToken", "function": "N/A", "lineNumber": "L16, L70, L411"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Function docstring not accurate to function", "description": "The `_postValidatePurchase` docstring mentions that the function should use `revert` statements to rollback when valid conditions are not met, but the `_checkSeed` and `_checkSoftCap` functions do not use any reverts.", "severity": "Best practice", "contract": "BeamCrowdsale", "function": "_postValidatePurchase, _checkSeed, _checkSoftCap", "lineNumber": "#L873-#L874"}, {"id": 2, "category": {"1": ["CWE-703"], "2": ["CWE-228"], "3": ["CWE-233"]}, "title": "Avoid magic numbers", "description": "Hard coded values in BeamCrowdsale.sol make the code less readable and maintainable. It is recommended to save these values to a variable instead.", "severity": "Best practice", "contract": "BeamCrowdsale", "function": "oraclize_query", "lineNumber": "N/A"}, {"id": 3, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Recommend Externalising Shared Contracts", "description": "Duplicated shared contracts (e.g. Ownable, SafeMath, Whitelist) could be put into their own file to reduce the likelihood of introducing mistakes if changes are needed.", "severity": "Minor", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-693"]}, "title": "Race condition found when user claiming their ETH from the contract", "description": "This is a typical race condition and can cause losing all the ETHs deposited in the contract.", "severity": "Moderate", "contract": "BeamCrowdsale", "function": "N/A", "lineNumber": "L643-L644"}, {"id": 5, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-394"]}, "title": "No check that the public or private round has already been finished", "description": "The function `setPublicRound` allows starting/finishing a public or private round without checking if it has already been finished, enabling multiple starts of either round.", "severity": "Moderate", "contract": "BeamCrowdsale", "function": "setPublicRound()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-710"], "2": ["CWE-1059"]}, "title": "Usage for the buyForFiat function is not well documented", "description": "The usage for the buyForFiat function is not well documented, this function is only for owners so this is not a huge issue.", "severity": "Minor", "contract": "N/A", "function": "buyForFiat()", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-862"], "4": ["CWE-638"], "5": ["CWE-424"], "6": ["CWE-425"]}, "title": "withdrawFunds Function Allows Unrestricted Withdrawal of ETH", "description": "The withdrawFunds function in the contract allows the owner to withdraw all ETH at any time without restrictions.", "severity": "Critical", "contract": "BeamCrowdsale", "function": "withdrawFunds()", "lineNumber": "L605-611"}]}