{"path": "./Audit_Reports_2024/Iosiro/Iosiro-Synthetix Alkaid Release Smart Contract Audit.pdf", "project_info": {"url": "https://github.com/Synthetixio/SIPs", "commit_hash": "aebf502f2d457617d01a734220a9056afba0cae0", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-697"], "2": ["CWE-1024"]}, "title": "Function signature mismatch (high risk)", "description": "A function signature mismatch occurs when using a mainnet fork to test IDexPriceAggregator with the UniswapV3CrossPoolOracle, causing tests to revert due to a type mismatch between uint256 in the interface and uint32 in the implementation.", "severity": "High", "contract": "IDexPriceAggregator.sol", "function": "N/A", "lineNumber": "L8"}, {"id": 1, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Avoid unbounded while loop (low risk)", "description": "An unbounded while loop was used in the `synthTooVolatileForAtomicExchange` function, and the return value defaulted to true. A cleaner and safer approach would be to use a fixed-length loop and default to `true`, which would imply that the synth is too volatile.", "severity": "Low", "contract": "ExchangeRatesWithDexPricing.sol", "function": "synthTooVolatileForAtomicExchange", "lineNumber": "L103"}]}