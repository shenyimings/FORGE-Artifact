{"path": "./Audit_Reports_2024/BlockSec/BlockSec-blocksec_popcorn_v1.0-signed.pdf", "project_info": {"url": "N/A", "commit_hash": "5bdd143c6d990049bb77dffeb67cea43c13d4e19", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-682"]}, "title": "Unfair Charged Fee", "description": "In contracts `Vault` and `Adapter`, the `admin` has the privilege to change the rate of fees dynamically. However, the management fee in `Vault`, which is calculated based on the time passed from the last `feesUpdatedAt`, is not charged before the fee rate updates.", "severity": "Medium", "contract": "Vault", "function": "changeFees()", "lineNumber": "N/A"}, {"id": 1, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Limitations of Staking Contract Deployment for Vault Contract", "description": "In the current implementation, the admin can deploy a Vault contract via the function deployVault() with no staking contract. However, if the staking contract for the Vault is not deployed initially, the admin will not have another opportunity to set up a staking contract for this Vault in the future.", "severity": "Medium", "contract": "VaultController", "function": "deployVault()", "lineNumber": "N/A"}, {"id": 2, "category": {"1": ["CWE-682"]}, "title": "Lost Rewards in fundReward()", "description": "Duplicated Update in fundReward()", "severity": "N/A", "contract": "N/A", "function": "fundReward()", "lineNumber": "14"}, {"id": 3, "category": {"1": ["CWE-682"]}, "title": "Fee Shares Minted before highWaterMark Updated", "description": "The modifier `takeFees()` is used to collect the performance fee. The calculation of performance fee is based on the difference between the value of each share and `highWaterMark`, and `highWaterMark` will be updated to the newly calculated value of each share for each fee charge.", "severity": "Medium", "contract": "N/A", "function": "takeFees()", "lineNumber": "N/A"}, {"id": 4, "category": {"1": ["CWE-682"]}, "title": "Limitation of Instant Reward Distribution in addRewardToken()", "description": "Function `addRewardToken()` allows the `admin` to add and configure new reward tokens for the contract `MultiRewardStaking`. However, the function doesn\u2019t allow the `admin` to distribute rewards instantly by setting the parameter `rewardsPerSecond` as 0 while the amount is larger than 0, which is against the design.", "severity": "Low", "contract": "MultiRewardStaking", "function": "addRewardToken()", "lineNumber": "N/A"}, {"id": 5, "category": {"1": ["CWE-682"]}, "title": "Incorrect Calculation of Reward Amount", "description": "The modifier accrueRewards() in the contract MultiRewardStaking is designed to update the status of all reward tokens and users. However, the calculation of the reward amount for the user is incorrect.", "severity": "N/A", "contract": "MultiRewardStaking", "function": "accrueRewards()", "lineNumber": "N/A"}, {"id": 6, "category": {"1": ["CWE-682"]}, "title": "Incorrect Calculation in previewWithdraw()", "description": "The function previewWithdraw() calculates and returns the number of shares that need to be burned by the protocol, but it uses rounding down instead of rounding up when calculating the total amount of assets.", "severity": "Medium", "contract": "BeefyAdapter", "function": "previewWithdraw()", "lineNumber": "116"}, {"id": 7, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Incomplete Check when Setting newPermissions", "description": "In the current implementation, if `newPermissions[i].endorsed` and `newPermissions[i].rejected` are both `true`, the transaction will revert. However, the contract does not check the case where both elements are `false`. This scenario should also not be allowed.", "severity": "N/A", "contract": "PermissionRegistry", "function": "N/A", "lineNumber": "Listing 2.11"}, {"id": 8, "category": {"1": ["CWE-710"], "2": ["CWE-1041"]}, "title": "Duplicated Array Length Check", "description": "Function `setFees()` in the contract `MultiRewardEscrow` will be invoked by function `setEscrowTokenFees()`. However, two arrays (i.e., `tokens[]` and `tokenFees[]`) are both checked in these two functions to make sure they have the same length, which is duplicated.", "severity": "N/A", "contract": "MultiRewardEscrow", "function": "setFees() and setEscrowTokenFees()", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-703"], "2": ["CWE-754"]}, "title": "Incomplete Check in toggleTemplateEndorsement()", "description": "The function `toggleTemplateEndorsement()` allows the admin to toggle the endorsement of a `template` but does not check if the `templateCategory` exists, which may make the endorsement of the non-existent `template` become true.", "severity": "N/A", "contract": "TemplateRegistry", "function": "toggleTemplateEndorsement()", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Duplicated Update in fundReward()", "description": "In the function fundReward(), the lastUpdatedTimestamp of rewardToken will be updated by invoking the internal function _accrueRewards(). However, the function fundReward() updates it again in line 347, which is duplicated.", "severity": "N/A", "contract": "MultiRewardStaking", "function": "fundReward()", "lineNumber": "347,410"}, {"id": 11, "category": {"1": ["CWE-703"]}, "title": "Unnecessary Revert in claimRewards()", "description": "The whole transaction will revert unnecessarily in the function `claimRewards()`.", "severity": "N/A", "contract": "MultiRewardEscrow", "function": "claimRewards()", "lineNumber": "N/A"}, {"id": 12, "category": {"1": ["CWE-284"], "2": ["CWE-269"], "3": ["CWE-266"]}, "title": "Potential Centralization Problem", "description": "This project has potential centralization problems. The `admin` of the `VaultController` has the privilege to set `DeploymentController`, change `Adapter` of `Vaults`, set permissions for assets, pause and unpause `Vaults` and `Adapters`, and configure a number system parameters (e.g., change `fees` and `harvestCooldown`).", "severity": "Medium", "contract": "VaultController", "function": "N/A", "lineNumber": "N/A"}, {"id": 13, "category": {"1": ["CWE-284"]}, "title": "Unset FEE_RECIPIENT in AdapterBase", "description": "In the contract `AdapterBase`, the `FEE_RECIPIENT` is set as `address(0x4444)`, which is a dead address.", "severity": "Acknowledged", "contract": "AdapterBase", "function": "N/A", "lineNumber": "N/A"}, {"id": 14, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1287"]}, "title": "Incompatible Tokens", "description": "N/A", "severity": "Note", "contract": "N/A", "function": "N/A", "lineNumber": "N/A"}, {"id": 15, "category": {"1": ["CWE-284"], "2": ["CWE-285"], "3": ["CWE-863"]}, "title": "Bypassed Fee in Vault", "description": "In the current implementation, the `Vault` contract charges users four different types of fees: deposit fees, withdrawal fees, management fees, and performance fees. Among them, deposit fee, withdrawal fee and management fee can be bypassed.", "severity": "N/A", "contract": "Vault", "function": "N/A", "lineNumber": "N/A"}]}