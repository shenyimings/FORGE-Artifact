{"path": "./Audit_Reports_2024/MixBytes/Vesting.md", "project_info": {"url": "https://github.com/akropolisio/akropolis-vesting", "commit_hash": "7f4f4543b08d3749b92839c85e1d77a33d917a37", "address": "N/A"}, "findings": [{"id": 0, "category": {"1": ["CWE-284"]}, "title": "Public read-write access to the beneficiary is without any restrictions", "description": "The `TokenTimelock` contract allows public read-write access to the beneficiary without any restrictions.", "severity": "CRITICAL", "contract": "TokenTimelock", "function": "changeBeneficiary", "lineNumber": "L48"}, {"id": 1, "category": {"1": ["CWE-682"]}, "title": "Infinite Recursive Call in `changeBeneficiary` Method", "description": "The `changeBeneficiary` method of `TokenTimelock.sol` was incorrectly overridden in `AkropolisTimeLock.sol`, resulting in an infinite recursive call.", "severity": "MAJOR", "contract": "AkropolisTimeLock", "function": "changeBeneficiary", "lineNumber": "34"}, {"id": 2, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Infinite Recursive Call due to Non-Existing Method Override", "description": "The contract tries to override a non-existing `changeBeneficiary` method of the parent `TokenVesting.sol` that results in an infinite recursive call.", "severity": "MAJOR", "contract": "AkropolisVesting", "function": "N/A", "lineNumber": "L40"}, {"id": 3, "category": {"1": ["CWE-664"], "2": ["CWE-1329"]}, "title": "Upgradability operation is broken", "description": "Most contract methods are not upgradable because they are handled by the proxy itself.", "severity": "MAJOR", "contract": "TimelockProxy.sol and TokenVestingProxy.sol", "function": "N/A", "lineNumber": "18"}, {"id": 4, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Incorrect Index Usage", "description": "The index 1 was used without proper justification in the `changeBeneficiary` function.", "severity": "Warning", "contract": "AkropolisVesting", "function": "changeBeneficiary", "lineNumber": "33"}, {"id": 5, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Nested call logic is not working if there are two or more consistent nested calls", "description": "The nested call logic fails when there are two or more consistent nested calls.", "severity": "WARNING", "contract": "BeneficiaryOperations", "function": "N/A", "lineNumber": "141"}, {"id": 6, "category": {"1": ["CWE-284"], "2": ["CWE-287"]}, "title": "Proxy-ready versions of OpenZeppelin smart contracts with `initialize` method instead of `constructor` may be used", "description": "Using proxy-ready versions of OpenZeppelin smart contracts with an `initialize` method instead of a `constructor` may lead to potential security issues.", "severity": "Major", "contract": "TokenTimelock.sol, TokenVesting.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 7, "category": {"1": ["CWE-682"], "2": ["CWE-193"]}, "title": "Typo in Event Name and Variable", "description": "`bereficiarys` should be replaced with `beneficiaries`, and the event name should be capitalized.", "severity": "N/A", "contract": "BeneficiaryOperations.sol", "function": "event beneficiaryShipTransferred", "lineNumber": "N/A"}, {"id": 8, "category": {"1": ["CWE-710"], "2": ["CWE-1059"], "3": ["CWE-1053"]}, "title": "Missing Comments about Logic Changes", "description": "The smart contract BeneficiaryOperations.sol is a slightly modified version of Multiownable smart contract and lacks comments about logic changes.", "severity": "Informational", "contract": "BeneficiaryOperations.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 9, "category": {"1": ["CWE-707"], "2": ["CWE-20"], "3": ["CWE-1288"]}, "title": "Unnecessary Implementation of `beneficiaryIndices` Function", "description": "The function `beneficiaryIndices(address wallet) public view returns(uint256)` is unnecessary because Solidity compiler automatically generates a public getter for the `mapping(address => uint) public beneficiariesIndices;` member.", "severity": "Informational", "contract": "BeneficiaryOperations.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 10, "category": {"1": ["CWE-703"], "2": ["CWE-754"], "3": ["CWE-252"]}, "title": "OpenZeppelin-solidity TokenVesting can be imported from", "description": "The developer might have forgotten to implement `changeBeneficiary` and it is recommended to use proxy-ready versions of OpenZeppelin smart contracts with `initialize` method instead of `constructor`.", "severity": "Medium", "contract": "TokenVesting.sol", "function": "N/A", "lineNumber": "N/A"}, {"id": 11, "category": {"1": ["CWE-710"], "2": ["CWE-1120"], "3": ["CWE-1060"]}, "title": "Unoptimized Logic of onlyManyBeneficiaries", "description": "Multisig wallets with offchain signature aggregation or sidechain signature aggregation can be used instead of unoptimized logic of onlyManyBeneficiaries.", "severity": "Medium", "contract": "BeneficiaryOperations.sol", "function": "N/A", "lineNumber": "73"}]}